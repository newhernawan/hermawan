window.addEventListener("DOMContentLoaded",async()=>{(async()=>{function a(e,a,g){(async()=>{function r(r){var t=Math.sign(r.y);return y.x=50*ae.Math.randFloat(.1,.3),y.y=70*(t*ae.Math.randFloat(.1,.3)),y.z=ae.Math.randFloatSpread(20),y}function f(r){var t=Math.sign(r.y);return y.x=50*ae.Math.randFloat(.3,.6),y.y=70*(-t*ae.Math.randFloat(.3,.6)),y.z=ae.Math.randFloatSpread(20),y}var s=new ae.PlaneGeometry(e,a,2*e,2*a);window.onload=ae.BAS.Utils.separateFaces(s);var p=new n(s);window.onload=p.bufferUVs();var d=p.createAttribute("aAnimation",2),t=p.createAttribute("aStartPosition",3),u=p.createAttribute("aControl0",3),l=p.createAttribute("aControl1",3),c=p.createAttribute("aEndPosition",3),o;this.totalDuration=2.335;var x=new ae.Vector3,S=new ae.Vector3,h=new ae.Vector3,v=new ae.Vector3,y=new ae.Vector3;(async()=>{var i=0,m=0,y=0;for(i,m,y,0;i<p.faceCount;i++,12,m+=6,y+=9){var M=s.faces[i],C=ae.BAS.Utils.computeCentroid(s,M),T=ae.Math.randFloat(.8,1.2),b=ae.Math.mapLinear(C.x,.5*-e,.5*e,0,.9),E;for(E="in"===g?ae.Math.mapLinear(Math.abs(C.y),0,.5*a,0,.125):ae.Math.mapLinear(Math.abs(C.y),0,.5*a,.125,0),o=0;6>o;o+=2)d.array[m+o]=b+E+.11*Math.random()*T,d.array[m+o+1]=T;for(v.copy(C),x.copy(C),"in"===g?(S.copy(C).sub(r(C)),h.copy(C).sub(f(C))):(S.copy(C).add(r(C)),h.copy(C).add(f(C))),o=0;9>o;o+=3)t.array[y+o]=x.x,t.array[y+o+1]=x.y,t.array[y+o+2]=x.z,u.array[y+o]=S.x,u.array[y+o+1]=S.y,u.array[y+o+2]=S.z,l.array[y+o]=h.x,l.array[y+o+1]=h.y,l.array[y+o+2]=h.z,c.array[y+o]=v.x,c.array[y+o+1]=v.y,c.array[y+o+2]=v.z}})();var _=new ae.BAS.BasicAnimationMaterial({shading:ae.FlatShading,side:ae.DoubleSide,uniforms:{uTime:{type:"f",value:0}},shaderFunctions:[ae.BAS.ShaderChunk.cubic_bezier,ae.BAS.ShaderChunk.ease_in_out_cubic,ae.BAS.ShaderChunk.quaternion_rotation],shaderParameters:["uniform float uTime;","attribute vec2 aAnimation;","attribute vec3 aStartPosition;","attribute vec3 aControl0;","attribute vec3 aControl1;","attribute vec3 aEndPosition;"],shaderVertexInit:["float tDelay = aAnimation.x;","float tDuration = aAnimation.y;","float tTime = clamp(uTime - tDelay, 0.0, tDuration);","float tProgress = ease(tTime, 0.0, 1.0, tDuration);"],shaderTransformPosition:["in"===g?"transformed *= tProgress;":"transformed *= 1.0 - tProgress;","transformed += cubicBezier(aStartPosition, aControl0, aControl1, aEndPosition, tProgress);"]},{map:new ae.Texture});window.onload=ae.Mesh.call(this,p,_),window.onload=this.frustumCulled=!1,s.dispose(),_.dispose(),p.dispose()})()}function n(e){window.onload=ae.BAS.ModelBufferGeometry.call(this,e)}function r(e){e=u.extend({fov:30,zNear:3,zFar:5,createCameraControls:!0},e),window.onload=this.renderer=new ae.WebGLRenderer({antialias:e.antialias,alpha:!0}),(async()=>{window.onload=this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio||1)),window.onload=document.getElementById("three-container").appendChild(this.renderer.domElement),window.onload=this.camera=new ae.PerspectiveCamera(e.fov,o/i,e.zNear,e.zfar),window.onload=this.scene=new ae.Scene,window.onload=e.createCameraControls&&(this.controls=new ae(this.camera,this.renderer.domElement)),window.onload=this.resize=this.resize.bind(this),window.onload=this.tick=this.tick.bind(this),window.onload=this.resize(),window.onload=this.tick(),window.addEventListener("resize",this.resize,!1)})()}var ae={REVISION:"R125"},p;"function"==typeof define&&define.amd?define("three",ae):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=ae),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(){}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){}}),void 0===Object.assign&&Object.defineProperty(Object,"assign",{writable:!0,configurable:!0,value:function(){}}),ae.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},ae.CullFaceNone=0,ae.CullFaceBack=1,ae.CullFaceFront=2,ae.CullFaceFrontBack=3,ae.FrontFaceDirectionCW=0,ae.FrontFaceDirectionCCW=1,ae.BasicShadowMap=0,ae.PCFShadowMap=1,ae.PCFSoftShadowMap=2,ae.FrontSide=0,ae.BackSide=1,ae.DoubleSide=2,ae.FlatShading=1,ae.SmoothShading=2,ae.NoColors=0,ae.FaceColors=1,ae.VertexColors=2,ae.NoBlending=0,ae.NormalBlending=1,ae.AdditiveBlending=2,ae.SubtractiveBlending=3,ae.MultiplyBlending=4,ae.CustomBlending=5,ae.AddEquation=100,ae.SubtractEquation=101,ae.ReverseSubtractEquation=102,ae.MinEquation=103,ae.MaxEquation=104,ae.ZeroFactor=200,ae.OneFactor=201,ae.SrcColorFactor=202,ae.OneMinusSrcColorFactor=203,ae.SrcAlphaFactor=204,ae.OneMinusSrcAlphaFactor=205,ae.DstAlphaFactor=206,ae.OneMinusDstAlphaFactor=207,ae.DstColorFactor=208,ae.OneMinusDstColorFactor=209,ae.SrcAlphaSaturateFactor=210,ae.NeverDepth=0,ae.AlwaysDepth=1,ae.LessDepth=2,ae.LessEqualDepth=3,ae.EqualDepth=4,ae.GreaterEqualDepth=5,ae.GreaterDepth=6,ae.NotEqualDepth=7,ae.MultiplyOperation=0,ae.MixOperation=1,ae.AddOperation=2,ae.NoToneMapping=0,ae.LinearToneMapping=1,ae.ReinhardToneMapping=2,ae.Uncharted2ToneMapping=3,ae.CineonToneMapping=4,ae.UVMapping=300,ae.CubeReflectionMapping=301,ae.CubeRefractionMapping=302,ae.EquirectangularReflectionMapping=303,ae.EquirectangularRefractionMapping=304,ae.SphericalReflectionMapping=305,ae.CubeUVReflectionMapping=306,ae.CubeUVRefractionMapping=307,ae.RepeatWrapping=1e3,ae.ClampToEdgeWrapping=1001,ae.MirroredRepeatWrapping=1002,ae.NearestFilter=1003,ae.NearestMipMapNearestFilter=1004,ae.NearestMipMapLinearFilter=1005,ae.LinearFilter=1006,ae.LinearMipMapNearestFilter=1007,ae.LinearMipMapLinearFilter=1008,ae.UnsignedByteType=1009,ae.ByteType=1010,ae.ShortType=1011,ae.UnsignedShortType=1012,ae.IntType=1013,ae.UnsignedIntType=1014,ae.FloatType=1015,ae.HalfFloatType=1025,ae.UnsignedShort4444Type=1016,ae.UnsignedShort5551Type=1017,ae.UnsignedShort565Type=1018,ae.AlphaFormat=1019,ae.RGBFormat=1020,ae.RGBAFormat=1021,ae.LuminanceFormat=1022,ae.LuminanceAlphaFormat=1023,ae.RGBEFormat=ae.RGBAFormat,ae.RGB_S3TC_DXT1_Format=2001,ae.RGBA_S3TC_DXT1_Format=2002,ae.RGBA_S3TC_DXT3_Format=2003,ae.RGBA_S3TC_DXT5_Format=2004,ae.RGB_PVRTC_4BPPV1_Format=2100,ae.RGB_PVRTC_2BPPV1_Format=2101,ae.RGBA_PVRTC_4BPPV1_Format=2102,ae.RGBA_PVRTC_2BPPV1_Format=2103,ae.RGB_ETC1_Format=2151,ae.LoopOnce=2200,ae.LoopRepeat=2201,ae.LoopPingPong=2202,ae.InterpolateDiscrete=2300,ae.InterpolateLinear=2301,ae.InterpolateSmooth=2302,ae.ZeroCurvatureEnding=2400,ae.ZeroSlopeEnding=2401,ae.WrapAroundEnding=2402,ae.TrianglesDrawMode=0,ae.TriangleStripDrawMode=1,ae.TriangleFanDrawMode=2,ae.LinearEncoding=3e3,ae.sRGBEncoding=3001,ae.GammaEncoding=3007,ae.RGBEEncoding=3002,ae.LogLuvEncoding=3003,ae.RGBM7Encoding=3004,ae.RGBM16Encoding=3005,ae.RGBDEncoding=3006,ae.Color=function(e){return 3===arguments.length?this.fromArray(arguments):this.set(e)},ae.Color.prototype={constructor:ae.Color,r:1,g:1,b:1,set:function(e){return e instanceof ae.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(){},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(){},setHSL:function(){},setStyle:function(){},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(){},copyGammaToLinear:function(){},copyLinearToGamma:function(){},convertGammaToLinear:function(){},convertLinearToGamma:function(){},getHex:function(){},getHexString:function(){},getHSL:function(){},getStyle:function(){},offsetHSL:function(){},add:function(){},addColors:function(){},addScalar:function(){},multiply:function(){},multiplyScalar:function(){},lerp:function(){},equals:function(){},fromArray:function(){},toArray:function(){}},ae.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ae.Quaternion=function(a,o,r,t){this._x=a||0,this._y=o||0,this._z=r||0,this._w=void 0===t?1:t},ae.Quaternion.prototype={constructor:ae.Quaternion,get x(){return this._x},get y(){return this._y},get z(){return this._z},get w(){return this._w},set:function(){},clone:function(){},copy:function(){},setFromEuler:function(){},setFromAxisAngle:function(){},setFromRotationMatrix:function(){},setFromUnitVectors:function(){},inverse:function(){},conjugate:function(){},dot:function(){},lengthSq:function(){},length:function(){},normalize:function(){},multiply:function(){},multiplyQuaternions:function(){},slerp:function(){},equals:function(){},fromArray:function(){},toArray:function(){},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(ae.Quaternion,{slerp:function(){},slerpFlat:function(){}}),ae.Vector2=function(r,t){(async()=>{this.x=r||0,this.y=t||0})()},ae.Vector2.prototype={constructor:ae.Vector2,set:function(){},setScalar:function(){},setX:function(){},setY:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y)},copy:function(){},add:function(){},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(){},subScalar:function(){},subVectors:function(){},multiply:function(){},multiplyScalar:function(){},divide:function(){},divideScalar:function(){},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},clampLength:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){},lengthManhattan:function(){},normalize:function(){},angle:function(){},distanceTo:function(){},distanceToSquared:function(){},setLength:function(){},lerp:function(){},lerpVectors:function(){},equals:function(){},fromArray:function(){},toArray:function(){},fromAttribute:function(){},rotateAround:function(){}},ae.Vector3=function(r,t,e){(async()=>{this.x=r||0,this.y=t||0,this.z=e||0})()},ae.Vector3.prototype={constructor:ae.Vector3,set:function(r,t,e){return this.x=r,this.y=t,this.z=e,this},setScalar:function(){},setX:function(){},setY:function(e){return this.y=e,this},setZ:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(r,t){return void 0===t?(this.x+=r.x,this.y+=r.y,this.z+=r.z,this):this.addVectors(r,t)},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(r,t){return void 0===t?(this.x-=r.x,this.y-=r.y,this.z-=r.z,this):this.subVectors(r,t)},subScalar:function(){},subVectors:function(r,t){return this.x=r.x-t.x,this.y=r.y-t.y,this.z=r.z-t.z,this},multiply:function(){},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},multiplyVectors:function(){},applyEuler:function(){},applyAxisAngle:function(){},applyMatrix3:function(r){var a=this.x,t=this.y,o=this.z;return r=r.elements,this.x=r[0]*a+r[3]*t+r[6]*o,this.y=r[1]*a+r[4]*t+r[7]*o,this.z=r[2]*a+r[5]*t+r[8]*o,this},applyMatrix4:function(r){var a=this.x,t=this.y,o=this.z;return r=r.elements,this.x=r[0]*a+r[4]*t+r[8]*o+r[12],this.y=r[1]*a+r[5]*t+r[9]*o+r[13],this.z=r[2]*a+r[6]*t+r[10]*o+r[14],this},applyProjection:async function(e){var a=this.x,o=this.y,i=this.z,r=1/((e=e.elements)[3]*a+e[7]*o+e[11]*i+e[15]);return this.x=(e[0]*a+e[4]*o+e[8]*i+e[12])*r,this.y=(e[1]*a+e[5]*o+e[9]*i+e[13])*r,this.z=(e[2]*a+e[6]*o+e[10]*i+e[14])*r,this},applyQuaternion:function(){},project:function(){},unproject:function(){},transformDirection:function(){},divide:function(){},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},clampLength:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){},normalize:function(){return this.divideScalar(this.length())},setLength:function(){},lerp:function(){},lerpVectors:function(){},cross:function(r,t){if(void 0!==t)return this.crossVectors(r,t);var e=this.x,a=this.y,i=this.z;return this.x=a*r.z-i*r.y,this.y=i*r.x-e*r.z,this.z=e*r.y-a*r.x,this},crossVectors:function(){},projectOnVector:function(){},projectOnPlane:function(){},reflect:function(){},angleTo:function(){},distanceTo:function(){},distanceToSquared:function(){},setFromSpherical:function(){},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(){},setFromMatrixColumn:function(r,a){return"number"==typeof r&&(a=r=a),this.fromArray(r.elements,4*a)},equals:function(){},fromArray:function(r,t){return void 0===t&&(t=0),this.x=r[t],this.y=r[t+1],this.z=r[t+2],this},toArray:function(){},fromAttribute:function(){}},ae.Vector4=function(a,o,r,t){this.x=a||0,this.y=o||0,this.z=r||0,this.w=void 0===t?1:t},ae.Vector4.prototype={constructor:ae.Vector4,set:function(a,o,r,t){return this.x=a,this.y=o,this.z=r,this.w=t,this},setScalar:function(){},setX:function(){},setY:function(){},setZ:function(){},setW:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0===e.w?1:e.w,this},add:function(){},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(){},subScalar:function(){},subVectors:function(){},multiplyScalar:async function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=await e):this.w=this.z=this.y=this.x=0,this},applyMatrix4:function(){},divideScalar:function(){},setAxisAngleFromQuaternion:function(){},setAxisAngleFromRotationMatrix:function(){},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){},lengthManhattan:function(){},normalize:function(){},setLength:function(){},lerp:function(){},lerpVectors:function(){},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(){},toArray:function(){},fromAttribute:function(){}},ae.Euler=function(a,o,r,t){this._x=a||0,this._y=o||0,this._z=r||0,this._order=t||ae.Euler.DefaultOrder},ae.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],ae.Euler.DefaultOrder="XYZ",ae.Euler.prototype={constructor:ae.Euler,set:function(){},clone:function(){},copy:function(){},setFromRotationMatrix:function(){},setFromQuaternion:function(){},setFromVector3:function(){},reorder:new ae.Quaternion,equals:function(){},fromArray:function(){},toArray:function(){},toVector3:function(){},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},ae.Line3=function(){},ae.Line3.prototype={constructor:ae.Line3,set:function(){},clone:function(){},copy:function(){},center:function(){},delta:function(){},distanceSq:function(){},distance:function(){},at:function(){},closestPointToPointParameter:(new ae.Vector3,new ae.Vector3),closestPointToPoint:function(){},applyMatrix4:function(){},equals:function(){}},ae.Box2=function(){},ae.Box2.prototype={constructor:ae.Box2,set:function(){},setFromPoints:function(){},setFromCenterAndSize:new ae.Vector2,clone:function(){},copy:function(){},makeEmpty:function(){},isEmpty:function(){},center:function(){},size:function(){},expandByPoint:function(){},expandByVector:function(){},expandByScalar:function(){},containsPoint:function(){},containsBox:function(){},getParameter:function(){},intersectsBox:function(){},clampPoint:function(){},distanceToPoint:new ae.Vector2,intersect:function(){},union:function(){},translate:function(){},equals:function(){}},ae.Box3=function(r,t){this.min=void 0===r?new ae.Vector3(1/0,1/0,1/0):r,this.max=void 0===t?new ae.Vector3(-1/0,-1/0,-1/0):t},ae.Box3.prototype={constructor:ae.Box3,set:function(){},setFromArray:function(){},setFromPoints:function(){},setFromCenterAndSize:new ae.Vector3,setFromObject:function(){},clone:function(){},copy:function(){},makeEmpty:function(){},isEmpty:function(){},center:function(){},size:function(){},expandByPoint:function(){},expandByVector:function(){},expandByScalar:function(){},containsPoint:function(){},containsBox:function(){},getParameter:function(){},intersectsBox:function(){},intersectsSphere:function(){},intersectsPlane:function(){},clampPoint:function(){},distanceToPoint:new ae.Vector3,getBoundingSphere:new ae.Vector3,intersect:function(){},union:function(){},applyMatrix4:(new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3),translate:function(){},equals:function(){}},ae.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])},ae.Matrix3.prototype={constructor:ae.Matrix3,set:function(a,l,t,e,n,i,o,r,d){var s=this.elements;return s[0]=a,s[1]=e,s[2]=o,s[3]=l,s[4]=n,s[5]=r,s[6]=t,s[7]=i,s[8]=d,this},identity:function(){},clone:function(){},copy:function(){},setFromMatrix4:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToVector3Array:function(){},applyToBuffer:function(){},multiplyScalar:function(r){var t=this.elements;return t[0]*=r,t[3]*=r,t[6]*=r,t[1]*=r,t[4]*=r,t[7]*=r,t[2]*=r,t[5]*=r,t[8]*=r,this},determinant:function(){},getInverse:function(r,t){ae.Matrix4;var e=r.elements,a=this.elements,o=e[0],s=e[1],c=e[2],u=e[3],l=e[4],f=e[5],p=e[6],d=e[7],h=(e=e[8])*l-f*d,m=f*p-e*u,g=d*u-l*p,_=o*h+s*m+c*g;if(0==_){if(t)throw Error("THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return a[0]=h,a[1]=c*d-e*s,a[2]=f*s-c*l,a[3]=m,a[4]=e*o-c*p,a[5]=c*u-f*o,a[6]=g,a[7]=s*p-d*o,a[8]=l*o-s*u,this.multiplyScalar(1/_)},transpose:function(){var r=this.elements,t;return t=r[1],r[1]=r[3],r[3]=t,t=r[2],r[2]=r[6],r[6]=t,t=r[5],r[5]=r[7],r[7]=t,this},flattenToArrayOffset:function(){},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(){},fromArray:function(){},toArray:function(){}},ae.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},ae.Matrix4.prototype={constructor:ae.Matrix4,set:function(r,a,s,c,u,l,f,p,d,h,m,g,_,t,e,n){var i=this.elements;return i[0]=r,i[4]=a,i[8]=s,i[12]=c,i[1]=u,i[5]=l,i[9]=f,i[13]=p,i[2]=d,i[6]=h,i[10]=m,i[14]=g,i[3]=_,i[7]=t,i[11]=e,i[15]=n,this},identity:function(){},clone:function(){},copy:function(e){(async()=>{await this.elements.set(await e.elements)})()},copyPosition:function(){},extractBasis:function(){},makeBasis:function(){},extractRotation:function(){},makeRotationFromEuler:function(){},makeRotationFromQuaternion:function(e){var a=this.elements,o=e.x,i=e.y,n=e.z,p=e.w,d=n+n;e=o*(g=o+o);var f=o*(_=i+i),u=(o*=d,i*_),g=(i*=d,n*=d,p*g),_=p*_;return p*=d,a[0]=1-(u+n),a[4]=f-p,a[8]=o+_,a[1]=f+p,a[5]=1-(e+n),a[9]=i-g,a[2]=o-_,a[6]=i+g,a[10]=1-(e+u),a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this},lookAt:function(){},multiply:function(){},multiplyMatrices:async function(a,t){var e=a.elements,n=t.elements,T=this.elements,L=e[0],E=e[4],P=e[8],C=e[12],A=e[1],D=e[5],R=e[9],w=e[13],B=e[2],U=e[6],I=e[10],F=e[14],o=e[3],r=e[7],G=e[11],s=(e=e[15],n[0]),c=n[4],u=n[8],l=n[12],f=n[1],p=n[5],d=n[9],h=n[13],m=n[2],g=n[6],v=n[10],_=n[14],y=n[3],x=n[7],S=n[11];return n=n[15],T[0]=L*s+E*f+P*m+C*y,T[4]=L*c+E*p+P*g+C*x,T[8]=L*u+E*d+P*v+C*S,T[12]=L*l+E*h+P*_+C*n,T[1]=A*s+D*f+R*m+w*y,T[5]=A*c+D*p+R*g+w*x,T[9]=A*u+D*d+R*v+w*S,T[13]=A*l+D*h+R*_+w*n,T[2]=B*s+U*f+I*m+F*y,T[6]=B*c+U*p+I*g+F*x,T[10]=B*u+U*d+I*v+F*S,T[14]=B*l+U*h+I*_+F*n,T[3]=o*s+r*f+G*m+e*y,T[7]=o*c+r*p+G*g+e*x,T[11]=o*u+r*d+G*v+e*S,T[15]=o*l+r*h+G*_+e*n,this},multiplyToArray:function(){},multiplyScalar:function(r){var t=this.elements;return t[0]*=r,t[4]*=r,t[8]*=r,t[12]*=r,t[1]*=r,t[5]*=r,t[9]*=r,t[13]*=r,t[2]*=r,t[6]*=r,t[10]*=r,t[14]*=r,t[3]*=r,t[7]*=r,t[11]*=r,t[15]*=r,this},applyToVector3Array:function(){},applyToBuffer:function(){},determinant:function(){},transpose:function(){},flattenToArrayOffset:function(){},getPosition:function(){},setPosition:async function(r){var t=await this.elements;return t[12]=await r.x,t[13]=await r.y,t[14]=await r.z,this},getInverse:function(a,d){var m=this.elements,g=(f=a.elements)[0],h=f[1],_=f[2],v=f[3],y=f[4],x=f[5],S=f[6],e=f[7],n=f[8],M=f[9],t=f[10],T=f[11],i=f[12],o=f[13],r=f[14],b=M*r*e-o*t*e+o*S*T-x*r*T-M*S*(f=f[15])+x*t*f,s=i*t*e-n*r*e-i*S*T+y*r*T+n*S*f-y*t*f,c=n*o*e-i*M*e+i*x*T-y*o*T-n*x*f+y*M*f,u=i*M*S-n*o*S-i*x*t+y*o*t+n*x*r-y*M*r,l=g*b+h*s+_*c+v*u,f;if(0==l){if(d)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return m[0]=b,m[1]=o*t*v-M*r*v-o*_*T+h*r*T+M*_*f-h*t*f,m[2]=x*r*v-o*S*v+o*_*e-h*r*e-x*_*f+h*S*f,m[3]=M*S*v-x*t*v-M*_*e+h*t*e+x*_*T-h*S*T,m[4]=s,m[5]=n*r*v-i*t*v+i*_*T-g*r*T-n*_*f+g*t*f,m[6]=i*S*v-y*r*v-i*_*e+g*r*e+y*_*f-g*S*f,m[7]=y*t*v-n*S*v+n*_*e-g*t*e-y*_*T+g*S*T,m[8]=c,m[9]=i*M*v-n*o*v-i*h*T+g*o*T+n*h*f-g*M*f,m[10]=y*o*v-i*x*v+i*h*e-g*o*e-y*h*f+g*x*f,m[11]=n*x*v-y*M*v-n*h*e+g*M*e+y*h*T-g*x*T,m[12]=u,m[13]=n*o*_-i*M*_+i*h*t-g*o*t-n*h*r+g*M*r,m[14]=i*x*_-y*o*_-i*h*S+g*o*S+y*h*r-g*x*r,m[15]=y*M*_-n*x*_+n*h*S-g*M*S-y*h*t+g*x*t,this.multiplyScalar(1/l)},scale:function(r){var a=this.elements,t=r.x,o=r.y;return r=r.z,a[0]*=t,a[4]*=o,a[8]*=r,a[1]*=t,a[5]*=o,a[9]*=r,a[2]*=t,a[6]*=o,a[10]*=r,a[3]*=t,a[7]*=o,a[11]*=r,this},getMaxScaleOnAxis:function(){},makeTranslation:function(r,t,e){return this.set(1,0,0,r,0,1,0,t,0,0,1,e,0,0,0,1),this},makeRotationX:function(){},makeRotationY:function(){},makeRotationZ:function(){},makeRotationAxis:function(){},makeScale:function(){},compose:function(r,t,e){return this.makeRotationFromQuaternion(t),this.scale(e),this.setPosition(r),this},decompose:function(){},makeFrustum:function(a,o,r,i,l,t){var e=this.elements;return e[0]=2*l/(o-a),e[4]=0,e[8]=(o+a)/(o-a),e[12]=0,e[1]=0,e[5]=2*l/(i-r),e[9]=(i+r)/(i-r),e[13]=0,e[2]=0,e[6]=0,e[10]=-(t+l)/(t-l),e[14]=-2*t*l/(t-l),e[3]=0,e[7]=0,e[11]=-1,e[15]=0,this},makePerspective:function(e,a,r,i){var o=-(e=r*Math.tan(ae.Math.degToRad(.5*e)));return this.makeFrustum(o*a,e*a,o,e,r,i)},makeOrthographic:function(){},equals:function(){},fromArray:function(){},toArray:function(){}},ae.Ray=function(r,t){this.origin=void 0===r?new ae.Vector3:r,this.direction=void 0===t?new ae.Vector3:t},ae.Ray.prototype={constructor:ae.Ray,set:function(){},clone:function(){},copy:function(){},at:function(){},lookAt:function(){},recast:new ae.Vector3,closestPointToPoint:function(){},distanceToPoint:function(){},distanceSqToPoint:new ae.Vector3,distanceSqToSegment:(new ae.Vector3,new ae.Vector3,new ae.Vector3),intersectSphere:new ae.Vector3,intersectsSphere:function(){},distanceToPlane:function(){},intersectPlane:function(){},intersectsPlane:function(){},intersectBox:function(){},intersectsBox:new ae.Vector3,intersectTriangle:(new ae.Vector3,new ae.Vector3,new ae.Vector3,new ae.Vector3),applyMatrix4:function(){},equals:function(){}},ae.Sphere=function(r,t){this.center=void 0===r?new ae.Vector3:r,this.radius=void 0===t?0:t},ae.Sphere.prototype={constructor:ae.Sphere,set:function(){},setFromPoints:new ae.Box3,clone:function(){},copy:function(){},empty:function(){},containsPoint:function(){},distanceToPoint:function(){},intersectsSphere:function(){},intersectsBox:function(){},intersectsPlane:function(){},clampPoint:function(){},getBoundingBox:function(){},applyMatrix4:function(){},translate:function(){},equals:function(){}},ae.Frustum=function(e,a,i,r,n,o){this.planes=[void 0===e?new ae.Plane:e,void 0===a?new ae.Plane:a,void 0===i?new ae.Plane:i,void 0===r?new ae.Plane:r,void 0===n?new ae.Plane:n,void 0===o?new ae.Plane:o]},ae.Frustum.prototype={constructor:ae.Frustum,set:function(){},clone:function(){},copy:function(){},setFromMatrix:function(r){var a=this.planes;r=(i=r.elements)[0];var s=i[1],d=i[2],c=i[3],u=i[4],l=i[5],f=i[6],p=i[7],m=i[8],h=i[9],_=i[10],g=i[11],v=i[12],e=i[13],n=i[14],i=i[15];return a[0].setComponents(c-r,p-u,g-m,i-v).normalize(),a[1].setComponents(c+r,p+u,g+m,i+v).normalize(),a[2].setComponents(c+s,p+l,g+h,i+e).normalize(),a[3].setComponents(c-s,p-l,g-h,i-e).normalize(),a[4].setComponents(c-d,p-f,g-_,i-n).normalize(),a[5].setComponents(c+d,p+f,g+_,i+n).normalize(),this},intersectsObject:new ae.Sphere,intersectsSphere:function(){},intersectsBox:(new ae.Vector3,new ae.Vector3),containsPoint:function(){}},ae.Plane=function(r,t){this.normal=void 0===r?new ae.Vector3(1,0,0):r,this.constant=void 0===t?0:t},ae.Plane.prototype={constructor:ae.Plane,set:function(){},setComponents:function(a,o,r,t){return this.normal.set(a,o,r),this.constant=t,this},setFromNormalAndCoplanarPoint:function(){},setFromCoplanarPoints:(new ae.Vector3,new ae.Vector3),clone:function(){},copy:function(){},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){},distanceToPoint:function(){},distanceToSphere:function(){},projectPoint:function(){},orthoPoint:function(){},intersectLine:new ae.Vector3,intersectsLine:function(){},intersectsBox:function(){},intersectsSphere:function(){},coplanarPoint:function(){},applyMatrix4:(new ae.Vector3,new ae.Vector3,new ae.Matrix3),translate:function(){},equals:function(){}},ae.Spherical=function(){},ae.Spherical.prototype={constructor:ae.Spherical,set:function(){},clone:function(){},copy:function(){},makeSafe:function(){},setFromVector3:function(){}},ae.Math={generateUUID:function(){var t=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],a=Array(36),o=0,i;return function(){var e=0;for(e;36>e;e++)8==e||13===e||18===e||23===e?a[e]="-":14===e?a[e]="4":(2>=o&&(o=0|33554432+16777216*Math.random()),i=15&o,o>>=4,a[e]=t[19===e?8|3&i:i]);return a.join("")}}(),clamp:function(r,t,e){return Math.max(t,Math.min(e,r))},euclideanModulo:function(){},mapLinear:function(r,t,e,a,i){return a+(r-t)*(i-a)/(e-t)},smoothstep:function(){},smootherstep:function(){},random16:function(){},randInt:function(){},randFloat:function(r,t){return r+Math.random()*(t-r)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var r=Math.PI/180;return function(t){return t*r}}(),radToDeg:function(){var r=180/Math.PI;return function(t){return t*r}}(),isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(){}},ae.Spline=function(){},ae.Triangle=function(){},ae.Triangle.normal=new ae.Vector3,ae.Triangle.barycoordFromPoint=(new ae.Vector3,new ae.Vector3,new ae.Vector3),ae.Triangle.containsPoint=new ae.Vector3,ae.Triangle.prototype={constructor:ae.Triangle,set:function(){},setFromPointsAndIndices:function(){},clone:function(){},copy:function(){},area:(new ae.Vector3,new ae.Vector3),midpoint:function(){},normal:function(){},plane:function(){},barycoordFromPoint:function(){},containsPoint:function(){},equals:function(){}},ae.Interpolant=function(){},ae.Interpolant.prototype={constructor:ae.Interpolant,evaluate:function(){},settings:null,DefaultSettings_:{},getSettings_:function(){},copySampleValue_:function(){},interpolate_:function(){},intervalChanged_:function(){}},Object.assign(ae.Interpolant.prototype,{beforeStart_:ae.Interpolant.prototype.copySampleValue_,afterEnd_:ae.Interpolant.prototype.copySampleValue_}),ae.CubicInterpolant=function(){},ae.CubicInterpolant.prototype=Object.assign(Object.create(ae.Interpolant.prototype),{constructor:ae.CubicInterpolant,DefaultSettings_:{endingStart:ae.ZeroCurvatureEnding,endingEnd:ae.ZeroCurvatureEnding},intervalChanged_:function(){},interpolate_:function(){}}),ae.DiscreteInterpolant=function(){},ae.DiscreteInterpolant.prototype=Object.assign(Object.create(ae.Interpolant.prototype),{constructor:ae.DiscreteInterpolant,interpolate_:function(){}}),ae.LinearInterpolant=function(){},ae.LinearInterpolant.prototype=Object.assign(Object.create(ae.Interpolant.prototype),{constructor:ae.LinearInterpolant,interpolate_:function(){}}),ae.QuaternionLinearInterpolant=function(){},ae.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(ae.Interpolant.prototype),{constructor:ae.QuaternionLinearInterpolant,interpolate_:function(){}}),ae.Clock=function(){},ae.Clock.prototype={constructor:ae.Clock,start:function(){},stop:function(){},getElapsedTime:function(){},getDelta:function(){}},ae.EventDispatcher=function(){},ae.EventDispatcher.prototype={constructor:ae.EventDispatcher,apply:function(e){e.addEventListener=ae.EventDispatcher.prototype.addEventListener,e.hasEventListener=ae.EventDispatcher.prototype.hasEventListener,e.removeEventListener=ae.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=ae.EventDispatcher.prototype.dispatchEvent},addEventListener:function(r,t){void 0===this._listeners&&(this._listeners={});var e=this._listeners;void 0===e[r]&&(e[r]=[]),-1===e[r].indexOf(t)&&e[r].push(t)},hasEventListener:function(){},removeEventListener:function(){},dispatchEvent:function(r){if(void 0!==this._listeners){var t=this._listeners[r.type];if(void 0!==t){r.target=this;var e=[],a=t.length,i=0;for(e,a,i;i<a;i++)e[i]=t[i];for(i=0;i<a;i++)e[i].call(this,r)}}}},ae.Layers=function(){this.mask=1},ae.Layers.prototype={constructor:ae.Layers,set:function(){},enable:function(){},toggle:function(){},disable:function(){},test:function(e){return 0!=(this.mask&e.mask)}},(p=ae).Raycaster=function(){},p.Raycaster.prototype={constructor:p.Raycaster,linePrecision:1,set:function(){},setFromCamera:function(){},intersectObject:function(){},intersectObjects:function(){}},ae.Object3D=function(){Object.defineProperty(this,"id",{value:ae.Object3DIdCount++}),this.uuid=ae.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ae.Object3D.DefaultUp.clone();var a=new ae.Vector3,o=new ae.Euler,r=new ae.Quaternion,t=new ae.Vector3(1,1,1);o.onChange(function(){}),r.onChange(function(){}),Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:o},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:t},modelViewMatrix:{value:new ae.Matrix4},normalMatrix:{value:new ae.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new ae.Matrix4,this.matrixWorld=new ae.Matrix4,this.matrixAutoUpdate=ae.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ae.Layers,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},ae.Object3D.DefaultUp=new ae.Vector3(0,1,0),ae.Object3D.DefaultMatrixAutoUpdate=!0,ae.Object3D.prototype={constructor:ae.Object3D,applyMatrix:function(){},setRotationFromAxisAngle:function(){},setRotationFromEuler:function(){},setRotationFromMatrix:function(){},setRotationFromQuaternion:function(){},rotateOnAxis:new ae.Quaternion,rotateX:new ae.Vector3(1,0,0),rotateY:new ae.Vector3(0,1,0),rotateZ:new ae.Vector3(0,0,1),translateOnAxis:new ae.Vector3,translateX:new ae.Vector3(1,0,0),translateY:new ae.Vector3(0,1,0),translateZ:new ae.Vector3(0,0,1),localToWorld:function(){},worldToLocal:new ae.Matrix4,lookAt:new ae.Matrix4,add:function(r){var t=0;if(1<arguments.length){for(t;t<arguments.length;t++)this.add(arguments[t]);return this}return r===this||r instanceof ae.Object3D&&(null!==r.parent&&r.parent.remove(r),r.parent=this,r.dispatchEvent({type:"added"}),this.children.push(r)),this},remove:function(){},getObjectById:function(){},getObjectByName:function(){},getObjectByProperty:function(){},getWorldPosition:function(){},getWorldQuaternion:(new ae.Vector3,new ae.Vector3),getWorldRotation:new ae.Quaternion,getWorldScale:(new ae.Vector3,new ae.Quaternion),getWorldDirection:new ae.Quaternion,raycast:function(){},traverse:function(){},traverseVisible:function(){},traverseAncestors:function(){},updateMatrix:async function(){await this.matrix.compose(await this.position,await this.quaternion,await this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:async function(r){!0===(await this.matrixAutoUpdate)&&(await this.updateMatrix()),(!0===(await this.matrixWorldNeedsUpdate)||!0===r)&&(null===(await this.parent)?await this.matrixWorld.copy(await this.matrix):await this.matrixWorld.multiplyMatrices(await this.parent.matrixWorld,await this.matrix),this.matrixWorldNeedsUpdate=!1,r=!0);var a=0,o=await this.children.length;for(a,o;a<(await o);await a++)await this.children[await a].updateMatrixWorld(await r)},toJSON:function(){},clone:function(){},copy:function(){}},ae.EventDispatcher.prototype.apply(ae.Object3D.prototype),ae.Object3DIdCount=0,ae.Face3=function(e,a,i,r,n,o){(async()=>{this.a=e,this.b=a,this.c=i,this.normal=r instanceof ae.Vector3?r:new ae.Vector3,this.vertexNormals=Array.isArray(r)?r:[],this.color=n instanceof ae.Color?n:new ae.Color,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0===o?0:o})()},ae.Face3.prototype={constructor:ae.Face3,clone:function(){},copy:function(){}},ae.BufferAttribute=function(r,t){this.uuid=ae.Math.generateUUID(),this.array=r,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},ae.BufferAttribute.prototype={constructor:ae.BufferAttribute,get count(){return this.array.length/this.itemSize},setDynamic:function(){},copy:function(){},copyAt:function(){},copyArray:function(){},copyColorsArray:function(){},copyIndicesArray:function(){},copyVector2sArray:function(){},copyVector3sArray:function(){},copyVector4sArray:function(){},set:function(){},getX:function(){},setX:function(r,t){return this.array[r*this.itemSize]=t,this},getY:function(){},setY:function(){},getZ:function(){},setZ:function(){},getW:function(){},setW:function(){},setXY:function(e,a,r){return e*=this.itemSize,this.array[e+0]=a,this.array[e+1]=r,this},setXYZ:function(r,a,t,o){return r*=this.itemSize,this.array[r+0]=a,this.array[r+1]=t,this.array[r+2]=o,this},setXYZW:function(){},clone:function(){}},ae.Int8Attribute=function(){},ae.Uint8Attribute=function(){},ae.Uint8ClampedAttribute=function(){},ae.Int16Attribute=function(){},ae.Uint16Attribute=function(){},ae.Int32Attribute=function(){},ae.Uint32Attribute=function(){},ae.Float32Attribute=function(){},ae.Float64Attribute=function(){},ae.DynamicBufferAttribute=function(){},ae.InstancedBufferAttribute=function(){},ae.InstancedBufferAttribute.prototype=Object.create(ae.BufferAttribute.prototype),ae.InstancedBufferAttribute.prototype.constructor=ae.InstancedBufferAttribute,ae.InstancedBufferAttribute.prototype.copy=function(){},ae.InterleavedBuffer=function(){},ae.InterleavedBuffer.prototype={constructor:ae.InterleavedBuffer,setDynamic:function(){},copy:function(){},copyAt:function(){},set:function(){},clone:function(){}},ae.InstancedInterleavedBuffer=function(){},ae.InstancedInterleavedBuffer.prototype=Object.create(ae.InterleavedBuffer.prototype),ae.InstancedInterleavedBuffer.prototype.constructor=ae.InstancedInterleavedBuffer,ae.InstancedInterleavedBuffer.prototype.copy=function(){},ae.InterleavedBufferAttribute=function(){},ae.InterleavedBufferAttribute.prototype={constructor:ae.InterleavedBufferAttribute,setX:function(){},setY:function(){},setZ:function(){},setW:function(){},getX:function(){},getY:function(){},getZ:function(){},getW:function(){},setXY:function(){},setXYZ:function(){},setXYZW:function(){}},ae.Geometry=function(){Object.defineProperty(this,"id",{value:ae.GeometryIdCount++}),this.uuid=ae.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},ae.Geometry.prototype={constructor:ae.Geometry,applyMatrix:async function(t){var a=new ae.Matrix3().getNormalMatrix(t),o=0;for(c=this.vertices.length,a,o,c;o<c;o++)this.vertices[o].applyMatrix4(t);for(o=0,c=this.faces.length;o<c;o++){(t=this.faces[o]).normal.applyMatrix3(a).normalize();var i=0,n=t.vertexNormals.length;for(i,n;i<n;i++)t.vertexNormals[i].applyMatrix3(a).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0,this},rotateX:function(){},rotateY:function(){},rotateZ:function(){},translate:function(){var a;return function(o,r,t){return void 0===a&&(a=new ae.Matrix4),a.makeTranslation(o,r,t),this.applyMatrix(a),this}}(),scale:function(){},lookAt:function(){},fromBufferGeometry:async function(r){(async()=>{async function a(a,r,i,n){(async()=>{var o=void 0===d?[]:[p[a].clone(),p[r].clone(),p[i].clone()],t=void 0===m?[]:[s.colors[a].clone(),s.colors[r].clone(),s.colors[i].clone()];n=new ae.Face3(a,r,i,o,t,n),s.faces.push(n),void 0!==g&&s.faceVertexUvs[0].push([u[a].clone(),u[r].clone(),u[i].clone()]),void 0!==c&&s.faceVertexUvs[1].push([_[a].clone(),_[r].clone(),_[i].clone()])})()}var s=this,t=null===r.index?void 0:r.index.array,e=r.attributes,o=e.position.array,d=void 0===e.normal?void 0:e.normal.array,m=void 0===e.color?void 0:e.color.array,g=void 0===e.uv?void 0:e.uv.array,c=void 0===e.uv2?void 0:e.uv2.array;void 0!==c&&(this.faceVertexUvs[1]=[]);var p=[],u=[],_=[],f=e=0;for(p,u,_,f;e<o.length;e+=3,f+=2)s.vertices.push(new ae.Vector3(o[e],o[e+1],o[e+2])),void 0!==d&&p.push(new ae.Vector3(d[e],d[e+1],d[e+2])),void 0!==m&&s.colors.push(new ae.Color(m[e],m[e+1],m[e+2])),void 0!==g&&u.push(new ae.Vector2(g[f],g[f+1])),void 0!==c&&_.push(new ae.Vector2(c[f],c[f+1]));if(void 0===t)for(e=0;e<o.length/3;e+=3)a(e,e+1,e+2);else if(0<(o=r.groups).length)for(e=0;e<o.length;e++)for(var v=o[e],h=(f=h=v.start,h+v.count);f<h;f+=3)a(t[f],t[f+1],t[f+2],v.materialIndex);else(async()=>{for(e=0;e<t.length;e+=3)a(t[e],t[e+1],t[e+2]);await this.computeFaceNormals(),null!==r.boundingBox&&(this.boundingBox=r.boundingBox.clone()),null!==r.boundingSphere&&(this.boundingSphere=r.boundingSphere.clone())})()})()},center:function(){},normalize:function(){},computeFaceNormals:async function(){var a=await new ae.Vector3,t=await new ae.Vector3,e=0,o=await this.faces.length;for(a,t,e,o;e<(await o);await e++){var n=this.faces[e],l=this.vertices[n.a],i=this.vertices[n.b];a.subVectors(this.vertices[n.c],i),t.subVectors(l,i),a.cross(t),a.normalize(),n.normal.copy(a)}},computeVertexNormals:function(){},computeMorphNormals:function(){},computeTangents:function(){},computeLineDistances:function(){},computeBoundingBox:function(){},computeBoundingSphere:function(){},merge:function(){},mergeMesh:function(){},mergeVertices:function(){var t={},a=[],r=[],i=Math.pow(10,4),s,p,u;for(p=0,u=this.vertices.length;p<u;p++)s=this.vertices[p],void 0===t[s=Math.round(s.x*i)+"_"+Math.round(s.y*i)+"_"+Math.round(s.z*i)]?(t[s]=p,a.push(this.vertices[p]),r[p]=a.length-1):r[p]=r[t[s]];for(t=[],p=0,u=this.faces.length;p<u;p++)for((i=this.faces[p]).a=r[i.a],i.b=r[i.b],i.c=r[i.c],i=[i.a,i.b,i.c],s=0;3>s;s++)if(i[s]===i[(s+1)%3]){t.push(p);break}for(p=t.length-1;0<=p;p--)for(i=t[p],this.faces.splice(i,1),r=0,u=this.faceVertexUvs.length;r<u;r++)this.faceVertexUvs[r].splice(i,1);return p=this.vertices.length-a.length,this.vertices=a,p},sortFacesByMaterialIndex:function(){},toJSON:function(){},clone:function(){},copy:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}},ae.EventDispatcher.prototype.apply(ae.Geometry.prototype),ae.GeometryIdCount=0,ae.DirectGeometry=function(){},ae.DirectGeometry.prototype={constructor:ae.DirectGeometry,computeBoundingBox:ae.Geometry.prototype.computeBoundingBox,computeBoundingSphere:ae.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){},computeVertexNormals:function(){},computeGroups:function(){},fromGeometry:function(){},dispose:function(){}},ae.EventDispatcher.prototype.apply(ae.DirectGeometry.prototype),ae.BufferGeometry=function(){Object.defineProperty(this,"id",{value:ae.GeometryIdCount++}),this.uuid=ae.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.drawRange={start:0,count:1/0}},ae.BufferGeometry.prototype={constructor:ae.BufferGeometry,getIndex:function(){},setIndex:function(e){this.index=e},addAttribute:function(r,t,e){if(0==t instanceof ae.BufferAttribute&&0==t instanceof ae.InterleavedBufferAttribute)this.addAttribute(r,new ae.BufferAttribute(t,e));else{if("index"!==r)return this.attributes[r]=t,this;this.setIndex(t)}},getAttribute:function(){},removeAttribute:function(){},addGroup:function(){},clearGroups:function(){},setDrawRange:function(){},applyMatrix:function(){},rotateX:function(){},rotateY:function(){},rotateZ:function(){},translate:function(){},scale:function(){},lookAt:function(){},center:function(){},setFromObject:function(){},updateFromObject:function(){},fromGeometry:function(){},fromDirectGeometry:function(){},computeBoundingBox:new ae.Vector3,computeBoundingSphere:(new ae.Box3,new ae.Vector3),computeFaceNormals:function(){},computeVertexNormals:function(){},merge:function(){},normalizeNormals:function(){},toNonIndexed:function(){},toJSON:function(){},clone:function(){},copy:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}},ae.EventDispatcher.prototype.apply(ae.BufferGeometry.prototype),ae.BufferGeometry.MaxIndex=65535,ae.InstancedBufferGeometry=function(){},ae.InstancedBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.InstancedBufferGeometry.prototype.constructor=ae.InstancedBufferGeometry,ae.InstancedBufferGeometry.prototype.addGroup=function(){},ae.InstancedBufferGeometry.prototype.copy=function(){},ae.EventDispatcher.prototype.apply(ae.InstancedBufferGeometry.prototype),ae.Uniform=function(){},ae.Uniform.prototype={constructor:ae.Uniform,onUpdate:function(){}},ae.AnimationClip=function(){},ae.AnimationClip.prototype={constructor:ae.AnimationClip,resetDuration:function(){},trim:function(){},optimize:function(){}},Object.assign(ae.AnimationClip,{parse:function(){},toJSON:function(){},CreateFromMorphTargetSequence:function(){},findByName:function(){},CreateClipsFromMorphTargetSequences:function(){},parseAnimation:function(){}}),ae.AnimationMixer=function(){},ae.AnimationMixer.prototype={constructor:ae.AnimationMixer,clipAction:function(){},existingAction:function(){},stopAllAction:function(){},update:function(){},getRoot:function(){},uncacheClip:function(){},uncacheRoot:function(){},uncacheAction:function(){}},ae.EventDispatcher.prototype.apply(ae.AnimationMixer.prototype),ae.AnimationMixer._Action=function(){},ae.AnimationMixer._Action.prototype={constructor:ae.AnimationMixer._Action,play:function(){},stop:function(){},reset:function(){},isRunning:function(){},isScheduled:function(){},startAt:function(){},setLoop:function(){},setEffectiveWeight:function(){},getEffectiveWeight:function(){},fadeIn:function(){},fadeOut:function(){},crossFadeFrom:function(){},crossFadeTo:function(){},stopFading:function(){},setEffectiveTimeScale:function(){},getEffectiveTimeScale:function(){},setDuration:function(){},syncWith:function(){},halt:function(){},warp:function(){},stopWarping:function(){},getMixer:function(){},getClip:function(){},getRoot:function(){},_update:function(){},_updateWeight:function(){},_updateTimeScale:function(){},_updateTime:function(){},_setEndings:function(){},_scheduleFading:function(){}},Object.assign(ae.AnimationMixer.prototype,{_bindAction:function(){},_activateAction:function(){},_deactivateAction:function(){},_initMemoryManager:function(){},_isActiveAction:function(){},_addInactiveAction:function(){},_removeInactiveAction:function(){},_removeInactiveBindingsForAction:function(){},_lendAction:function(){},_takeBackAction:function(){},_addInactiveBinding:function(){},_removeInactiveBinding:function(){},_lendBinding:function(){},_takeBackBinding:function(){},_lendControlInterpolant:function(){},_takeBackControlInterpolant:function(){},_controlInterpolantsResultBuffer:new Float32Array(1)}),ae.AnimationObjectGroup=function(){},ae.AnimationObjectGroup.prototype={constructor:ae.AnimationObjectGroup,add:function(){},remove:function(){},uncache:function(){},subscribe_:function(){},unsubscribe_:function(){}},ae.AnimationUtils={arraySlice:function(){},convertArray:function(){},isTypedArray:function(){},getKeyframeOrder:function(){},sortedArray:function(){},flattenJSON:function(){}},ae.KeyframeTrack=function(){},ae.KeyframeTrack.prototype={constructor:ae.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ae.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(){},InterpolantFactoryMethodLinear:function(){},InterpolantFactoryMethodSmooth:function(){},setInterpolation:function(){},getInterpolation:function(){},getValueSize:function(){},shift:function(){},scale:function(){},trim:function(){},validate:function(){},optimize:function(){}},Object.assign(ae.KeyframeTrack,{parse:function(){},toJSON:function(){},_getTrackTypeForValueTypeName:function(){}}),ae.PropertyBinding=function(){},ae.PropertyBinding.prototype={constructor:ae.PropertyBinding,getValue:function(){},setValue:function(){},bind:function(){},unbind:function(){}},Object.assign(ae.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:ae.PropertyBinding.prototype.getValue,_setValue_unbound:ae.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(){},function(){},function(){},function(){}],SetterByBindingTypeAndVersioning:[[function(){},function(){},function(){}],[function(){},function(){},function(){}],[function(){},function(){},function(){}],[function(){},function(){},function(){}]]}),ae.PropertyBinding.Composite=function(){},ae.PropertyBinding.Composite.prototype={constructor:ae.PropertyBinding.Composite,getValue:function(){},setValue:function(){},bind:function(){},unbind:function(){}},ae.PropertyBinding.create=function(){},ae.PropertyBinding.parseTrackName=function(){},ae.PropertyBinding.findNode=function(){},ae.PropertyMixer=function(){},ae.PropertyMixer.prototype={constructor:ae.PropertyMixer,accumulate:function(){},apply:function(){},saveOriginalState:function(){},restoreOriginalState:function(){},_select:function(){},_slerp:function(){},_lerp:function(){}},ae.BooleanKeyframeTrack=function(){},ae.BooleanKeyframeTrack.prototype=Object.assign(Object.create(ae.KeyframeTrack.prototype),{constructor:ae.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:ae.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ae.NumberKeyframeTrack=function(){},ae.NumberKeyframeTrack.prototype=Object.assign(Object.create(ae.KeyframeTrack.prototype),{constructor:ae.NumberKeyframeTrack,ValueTypeName:"number"}),ae.QuaternionKeyframeTrack=function(){},ae.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(ae.KeyframeTrack.prototype),{constructor:ae.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:ae.InterpolateLinear,InterpolantFactoryMethodLinear:function(){},InterpolantFactoryMethodSmooth:void 0}),ae.StringKeyframeTrack=function(){},ae.StringKeyframeTrack.prototype=Object.assign(Object.create(ae.KeyframeTrack.prototype),{constructor:ae.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:ae.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ae.VectorKeyframeTrack=function(){},ae.VectorKeyframeTrack.prototype=Object.assign(Object.create(ae.KeyframeTrack.prototype),{constructor:ae.VectorKeyframeTrack,ValueTypeName:"vector"}),ae.Camera=function(){ae.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new ae.Matrix4,this.projectionMatrix=new ae.Matrix4},ae.Camera.prototype=Object.create(ae.Object3D.prototype),ae.Camera.prototype.constructor=ae.Camera,ae.Camera.prototype.getWorldDirection=new ae.Quaternion,ae.Camera.prototype.lookAt=new ae.Matrix4,ae.Camera.prototype.clone=function(){},ae.Camera.prototype.copy=function(){},ae.CubeCamera=function(){},ae.CubeCamera.prototype=Object.create(ae.Object3D.prototype),ae.CubeCamera.prototype.constructor=ae.CubeCamera,ae.OrthographicCamera=function(){},ae.OrthographicCamera.prototype=Object.create(ae.Camera.prototype),ae.OrthographicCamera.prototype.constructor=ae.OrthographicCamera,ae.OrthographicCamera.prototype.updateProjectionMatrix=function(){},ae.OrthographicCamera.prototype.copy=function(){},ae.OrthographicCamera.prototype.toJSON=function(){},ae.PerspectiveCamera=function(a,o,r,t){ae.Camera.call(this),this.type="PerspectiveCamera",this.focalLength=10,this.zoom=1,this.fov=void 0===a?50:a,this.aspect=void 0===o?1:o,this.near=void 0===r?.1:r,this.far=void 0===t?2e3:t,this.updateProjectionMatrix()},ae.PerspectiveCamera.prototype=Object.create(ae.Camera.prototype),ae.PerspectiveCamera.prototype.constructor=ae.PerspectiveCamera,ae.PerspectiveCamera.prototype.setLens=function(){},ae.PerspectiveCamera.prototype.setViewOffset=function(){},ae.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=ae.Math.radToDeg(2*Math.atan(Math.tan(.5*ae.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var a=(r=this.fullWidth/this.fullHeight)*(o=-(e=Math.tan(ae.Math.degToRad(.5*e))*this.near)),r=Math.abs(r*e-a),o=Math.abs(e-o);this.projectionMatrix.makeFrustum(a+this.x*r/this.fullWidth,a+(this.x+this.width)*r/this.fullWidth,e-(this.y+this.height)*o/this.fullHeight,e-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},ae.PerspectiveCamera.prototype.copy=function(){},ae.PerspectiveCamera.prototype.toJSON=function(){},ae.StereoCamera=function(){},ae.StereoCamera.prototype={constructor:ae.StereoCamera,update:(new ae.Matrix4,new ae.Matrix4)},ae.Light=function(){},ae.Light.prototype=Object.create(ae.Object3D.prototype),ae.Light.prototype.constructor=ae.Light,ae.Light.prototype.copy=function(){},ae.Light.prototype.toJSON=function(){},ae.LightShadow=function(){},ae.LightShadow.prototype={constructor:ae.LightShadow,copy:function(){},clone:function(){}},ae.AmbientLight=function(){},ae.AmbientLight.prototype=Object.create(ae.Light.prototype),ae.AmbientLight.prototype.constructor=ae.AmbientLight,ae.DirectionalLight=function(){},ae.DirectionalLight.prototype=Object.create(ae.Light.prototype),ae.DirectionalLight.prototype.constructor=ae.DirectionalLight,ae.DirectionalLight.prototype.copy=function(){},ae.HemisphereLight=function(){},ae.HemisphereLight.prototype=Object.create(ae.Light.prototype),ae.HemisphereLight.prototype.constructor=ae.HemisphereLight,ae.HemisphereLight.prototype.copy=function(){},ae.PointLight=function(){},ae.PointLight.prototype=Object.create(ae.Light.prototype),ae.PointLight.prototype.constructor=ae.PointLight,Object.defineProperty(ae.PointLight.prototype,"power",{get:function(){},set:function(){}}),ae.PointLight.prototype.copy=function(){},ae.SpotLight=function(){},ae.SpotLight.prototype=Object.create(ae.Light.prototype),ae.SpotLight.prototype.constructor=ae.SpotLight,Object.defineProperty(ae.SpotLight.prototype,"power",{get:function(){},set:function(){}}),ae.SpotLight.prototype.copy=function(){},ae.Cache={enabled:!1,files:{},add:function(r,t){!1!==this.enabled&&(this.files[r]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(){},clear:function(){}},ae.Loader=function(){},ae.Loader.prototype={constructor:ae.Loader,crossOrigin:void 0,extractUrlBase:function(){},initMaterials:function(){},createMaterial:function(){}},ae.Loader.Handlers={handlers:[],add:function(){},get:function(){}},ae.XHRLoader=function(){},ae.XHRLoader.prototype={constructor:ae.XHRLoader,load:function(){},setPath:function(){},setResponseType:function(){},setWithCredentials:function(){}},ae.FontLoader=function(){},ae.FontLoader.prototype={constructor:ae.FontLoader,load:function(){}},ae.ImageLoader=function(e){this.manager=void 0===e?ae.DefaultLoadingManager:e},ae.ImageLoader.prototype={constructor:ae.ImageLoader,load:async function(r,a,t){void 0!==this.path&&(r=this.path+r);var n=this,i=ae.Cache.get(r);if(void 0!==i)return n.manager.itemStart(r),a?setTimeout(async function(){},0):n.manager.itemEnd(r),i;var o=document.createElement("img");return o.addEventListener("load",async function(){ae.Cache.add(r,this),a&&a(this),n.manager.itemEnd(r)},!1),void 0!==t&&o.addEventListener("progress",async function(){},!1),o.addEventListener("error",async function(){},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),n.manager.itemStart(r),o.src=r,o},setCrossOrigin:async function(){},setPath:async function(){}},ae.JSONLoader=function(){},ae.JSONLoader.prototype={constructor:ae.JSONLoader,get statusDomElement(){},load:function(){},setTexturePath:function(){},parse:function(){}},ae.LoadingManager=function(a,t,e){var r=this,o=!1,l=0,s=0;this.onStart=void 0,this.onLoad=a,this.onProgress=t,this.onError=e,this.itemStart=function(e){s++,!1===o&&void 0!==r.onStart&&r.onStart(e,l,s),o=!0},this.itemEnd=function(e){l++,void 0!==r.onProgress&&r.onProgress(e,l,s),l===s&&(o=!1,void 0!==r.onLoad)&&r.onLoad()},this.itemError=function(){}},ae.DefaultLoadingManager=new ae.LoadingManager,ae.BufferGeometryLoader=function(){},ae.BufferGeometryLoader.prototype={constructor:ae.BufferGeometryLoader,load:function(){},parse:function(){}},ae.MaterialLoader=function(){},ae.MaterialLoader.prototype={constructor:ae.MaterialLoader,load:function(){},setTextures:function(){},getTexture:function(){},parse:function(){}},ae.ObjectLoader=function(){},ae.ObjectLoader.prototype={constructor:ae.ObjectLoader,load:function(){},setTexturePath:function(){},setCrossOrigin:function(){},parse:function(){},parseGeometries:function(){},parseMaterials:function(){},parseAnimations:function(){},parseImages:function(){},parseTextures:function(){},parseObject:new ae.Matrix4},ae.TextureLoader=function(){},ae.TextureLoader.prototype={constructor:ae.TextureLoader,load:function(){},setCrossOrigin:function(){},setPath:function(){}},ae.CubeTextureLoader=function(){},ae.CubeTextureLoader.prototype={constructor:ae.CubeTextureLoader,load:function(){},setCrossOrigin:function(){},setPath:function(){}},ae.DataTextureLoader=ae.BinaryTextureLoader=function(){},ae.BinaryTextureLoader.prototype={constructor:ae.BinaryTextureLoader,load:function(){}},ae.CompressedTextureLoader=function(){},ae.CompressedTextureLoader.prototype={constructor:ae.CompressedTextureLoader,load:function(){},setPath:function(){}},ae.Material=function(){Object.defineProperty(this,"id",{value:ae.MaterialIdCount++}),this.uuid=ae.Math.generateUUID(),this.name="",this.type="Material",this.side=ae.FrontSide,this.opacity=1,this.transparent=!1,this.blending=ae.NormalBlending,this.blendSrc=ae.SrcAlphaFactor,this.blendDst=ae.OneMinusSrcAlphaFactor,this.blendEquation=ae.AddEquation,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.depthFunc=ae.LessEqualDepth,this.colorWrite=this.depthWrite=this.depthTest=!0,this.precision=null,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.premultipliedAlpha=!1,this.overdraw=0,this._needsUpdate=this.visible=!0},ae.Material.prototype={constructor:ae.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){!0===e&&this.update(),this._needsUpdate=e},setValues:function(a){if(void 0!==a)for(var o in a){var r=a[o];if(void 0===r);else{var t=this[o];void 0===t||(t instanceof ae.Color?t.set(r):t instanceof ae.Vector3&&r instanceof ae.Vector3?t.copy(r):this[o]="overdraw"===o?+r:r)}}},toJSON:function(){},clone:function(){},copy:function(){},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},ae.EventDispatcher.prototype.apply(ae.Material.prototype),ae.MaterialIdCount=0,ae.LineBasicMaterial=function(){},ae.LineBasicMaterial.prototype=Object.create(ae.Material.prototype),ae.LineBasicMaterial.prototype.constructor=ae.LineBasicMaterial,ae.LineBasicMaterial.prototype.copy=function(){},ae.LineDashedMaterial=function(){},ae.LineDashedMaterial.prototype=Object.create(ae.Material.prototype),ae.LineDashedMaterial.prototype.constructor=ae.LineDashedMaterial,ae.LineDashedMaterial.prototype.copy=function(){},ae.MeshBasicMaterial=function(){},ae.MeshBasicMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshBasicMaterial.prototype.constructor=ae.MeshBasicMaterial,ae.MeshBasicMaterial.prototype.copy=function(){},ae.MeshLambertMaterial=function(){},ae.MeshLambertMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshLambertMaterial.prototype.constructor=ae.MeshLambertMaterial,ae.MeshLambertMaterial.prototype.copy=function(){},ae.MeshPhongMaterial=function(){},ae.MeshPhongMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshPhongMaterial.prototype.constructor=ae.MeshPhongMaterial,ae.MeshPhongMaterial.prototype.copy=function(){},ae.MeshStandardMaterial=function(){},ae.MeshStandardMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshStandardMaterial.prototype.constructor=ae.MeshStandardMaterial,ae.MeshStandardMaterial.prototype.copy=function(){},ae.MeshDepthMaterial=function(){},ae.MeshDepthMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshDepthMaterial.prototype.constructor=ae.MeshDepthMaterial,ae.MeshDepthMaterial.prototype.copy=function(){},ae.MeshNormalMaterial=function(){},ae.MeshNormalMaterial.prototype=Object.create(ae.Material.prototype),ae.MeshNormalMaterial.prototype.constructor=ae.MeshNormalMaterial,ae.MeshNormalMaterial.prototype.copy=function(){},ae.MultiMaterial=function(){},ae.MultiMaterial.prototype={constructor:ae.MultiMaterial,toJSON:function(){},clone:function(){}},ae.PointsMaterial=function(){},ae.PointsMaterial.prototype=Object.create(ae.Material.prototype),ae.PointsMaterial.prototype.constructor=ae.PointsMaterial,ae.PointsMaterial.prototype.copy=function(){},ae.ShaderMaterial=function(e){ae.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=ae.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=ae.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(e.attributes,this.setValues(e))},ae.ShaderMaterial.prototype=Object.create(ae.Material.prototype),ae.ShaderMaterial.prototype.constructor=ae.ShaderMaterial,ae.ShaderMaterial.prototype.copy=function(){},ae.ShaderMaterial.prototype.toJSON=function(){},ae.RawShaderMaterial=function(){},ae.RawShaderMaterial.prototype=Object.create(ae.ShaderMaterial.prototype),ae.RawShaderMaterial.prototype.constructor=ae.RawShaderMaterial,ae.SpriteMaterial=function(){},ae.SpriteMaterial.prototype=Object.create(ae.Material.prototype),ae.SpriteMaterial.prototype.constructor=ae.SpriteMaterial,ae.SpriteMaterial.prototype.copy=function(){},ae.Texture=function(a,s,o,t,e,n,i,r,p){Object.defineProperty(this,"id",{value:ae.TextureIdCount++}),this.uuid=ae.Math.generateUUID(),this.sourceFile=this.name="",this.image=void 0===a?ae.Texture.DEFAULT_IMAGE:a,this.mipmaps=[],this.mapping=void 0===s?ae.Texture.DEFAULT_MAPPING:s,this.wrapS=void 0===o?ae.ClampToEdgeWrapping:o,this.wrapT=void 0===t?ae.ClampToEdgeWrapping:t,this.magFilter=void 0===e?ae.LinearFilter:e,this.minFilter=void 0===n?ae.LinearMipMapLinearFilter:n,this.anisotropy=void 0===p?1:p,this.format=void 0===i?ae.RGBAFormat:i,this.type=void 0===r?ae.UnsignedByteType:r,this.offset=new ae.Vector2(0,0),this.repeat=new ae.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=ae.LinearEncoding,this.version=0,this.onUpdate=null},ae.Texture.DEFAULT_IMAGE=void 0,ae.Texture.DEFAULT_MAPPING=ae.UVMapping,ae.Texture.prototype={constructor:ae.Texture,set needsUpdate(e){!0===e&&this.version++},clone:function(){},copy:function(){},toJSON:function(){},dispose:function(){},transformUv:function(){}},ae.EventDispatcher.prototype.apply(ae.Texture.prototype),ae.TextureIdCount=0,ae.CanvasTexture=function(){},ae.CanvasTexture.prototype=Object.create(ae.Texture.prototype),ae.CanvasTexture.prototype.constructor=ae.CanvasTexture,ae.CubeTexture=function(){},ae.CubeTexture.prototype=Object.create(ae.Texture.prototype),ae.CubeTexture.prototype.constructor=ae.CubeTexture,Object.defineProperty(ae.CubeTexture.prototype,"images",{get:function(){},set:function(){}}),ae.CompressedTexture=function(){},ae.CompressedTexture.prototype=Object.create(ae.Texture.prototype),ae.CompressedTexture.prototype.constructor=ae.CompressedTexture,ae.DataTexture=function(){},ae.DataTexture.prototype=Object.create(ae.Texture.prototype),ae.DataTexture.prototype.constructor=ae.DataTexture,window.onload=ae.VideoTexture=async function(){},ae.VideoTexture.prototype=Object.create(ae.Texture.prototype),ae.VideoTexture.prototype.constructor=ae.VideoTexture,ae.Group=function(){},ae.Group.prototype=Object.create(ae.Object3D.prototype),ae.Group.prototype.constructor=ae.Group,ae.Points=function(){},ae.Points.prototype=Object.create(ae.Object3D.prototype),ae.Points.prototype.constructor=ae.Points,ae.Points.prototype.raycast=(new ae.Matrix4,new ae.Ray,new ae.Sphere),ae.Points.prototype.clone=function(){},ae.Line=function(){},ae.Line.prototype=Object.create(ae.Object3D.prototype),ae.Line.prototype.constructor=ae.Line,ae.Line.prototype.raycast=(new ae.Matrix4,new ae.Ray,new ae.Sphere),ae.Line.prototype.clone=function(){},ae.LineStrip=0,ae.LinePieces=1,ae.LineSegments=function(){},ae.LineSegments.prototype=Object.create(ae.Line.prototype),ae.LineSegments.prototype.constructor=ae.LineSegments,ae.Mesh=function(r,t){ae.Object3D.call(this),this.type="Mesh",this.geometry=void 0===r?new ae.Geometry:r,this.material=void 0===t?new ae.MeshBasicMaterial({color:16777215*Math.random()}):t,this.drawMode=ae.TrianglesDrawMode,this.updateMorphTargets()},ae.Mesh.prototype=Object.create(ae.Object3D.prototype),ae.Mesh.prototype.constructor=ae.Mesh,ae.Mesh.prototype.setDrawMode=function(){},ae.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};var r=0,a=this.geometry.morphTargets.length;for(r,a;r<a;r++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[r].name]=r}},ae.Mesh.prototype.getMorphTargetIndexByName=function(){},ae.Mesh.prototype.raycast=void 0,ae.Mesh.prototype.clone=function(){},ae.Bone=function(){},ae.Bone.prototype=Object.create(ae.Object3D.prototype),ae.Bone.prototype.constructor=ae.Bone,ae.Bone.prototype.copy=function(){},ae.Skeleton=function(){},ae.Skeleton.prototype.calculateInverses=function(){},ae.Skeleton.prototype.pose=function(){},ae.Skeleton.prototype.update=new ae.Matrix4,ae.Skeleton.prototype.clone=function(){},ae.SkinnedMesh=function(){},ae.SkinnedMesh.prototype=Object.create(ae.Mesh.prototype),ae.SkinnedMesh.prototype.constructor=ae.SkinnedMesh,ae.SkinnedMesh.prototype.bind=function(){},ae.SkinnedMesh.prototype.pose=function(){},ae.SkinnedMesh.prototype.normalizeSkinWeights=function(){},ae.SkinnedMesh.prototype.updateMatrixWorld=function(){},ae.SkinnedMesh.prototype.clone=function(){},ae.LOD=function(){},ae.LOD.prototype=Object.create(ae.Object3D.prototype),ae.LOD.prototype.constructor=ae.LOD,ae.LOD.prototype.addLevel=function(){},ae.LOD.prototype.getObjectForDistance=function(){},ae.LOD.prototype.raycast=new ae.Vector3,ae.LOD.prototype.update=(new ae.Vector3,new ae.Vector3),ae.LOD.prototype.copy=function(){},ae.LOD.prototype.toJSON=function(){},ae.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),o=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),t=new ae.BufferGeometry;return t.setIndex(new ae.BufferAttribute(a,1)),t.addAttribute("position",new ae.BufferAttribute(o,3)),t.addAttribute("uv",new ae.BufferAttribute(r,2)),function(){}}(),ae.Sprite.prototype=Object.create(ae.Object3D.prototype),ae.Sprite.prototype.constructor=ae.Sprite,ae.Sprite.prototype.raycast=new ae.Vector3,ae.Sprite.prototype.clone=function(){},ae.Particle=ae.Sprite,ae.LensFlare=function(){},ae.LensFlare.prototype=Object.create(ae.Object3D.prototype),ae.LensFlare.prototype.constructor=ae.LensFlare,ae.LensFlare.prototype.add=function(){},ae.LensFlare.prototype.updateLensFlares=function(){},ae.LensFlare.prototype.copy=function(){},ae.Scene=function(){ae.Object3D.call(this),this.type="Scene",this.overrideMaterial=this.fog=null,this.autoUpdate=!0},ae.Scene.prototype=Object.create(ae.Object3D.prototype),ae.Scene.prototype.constructor=ae.Scene,ae.Scene.prototype.copy=function(){},ae.Fog=function(){},ae.Fog.prototype.clone=function(){},ae.FogExp2=function(){},ae.FogExp2.prototype.clone=function(){},ae.ShaderChunk={},ae.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",ae.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",ae.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",ae.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",ae.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",ae.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",ae.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",ae.ShaderChunk.bsdfs="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",ae.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",ae.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",ae.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",ae.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",ae.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",ae.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",ae.ShaderChunk.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\nconst float cubeUV_textureSize = 1024.0;\nint getFaceFromDirection(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    int face = -1;\n    if( absDirection.x > absDirection.z ) {\n        if(absDirection.x > absDirection.y )\n            face = direction.x > 0.0 ? 0 : 3;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    else {\n        if(absDirection.z > absDirection.y )\n            face = direction.z > 0.0 ? 2 : 5;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    return face;\n}\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n    float dxRoughness = dFdx(roughness);\n    float dyRoughness = dFdy(roughness);\n    vec3 dx = dFdx( vec * scale * dxRoughness );\n    vec3 dy = dFdy( vec * scale * dyRoughness );\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\n    float mipLevel = 0.5 * log2(d);\n    return vec2(floor(mipLevel), fract(mipLevel));\n}\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n    float a = 16.0 * cubeUV_rcpTextureSize;\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n    float powScale = exp2_packed.x * exp2_packed.y;\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n    bool bRes = mipLevel == 0.0;\n    scale =  bRes && (scale < a) ? a : scale;\n    vec3 r;\n    vec2 offset;\n    int face = getFaceFromDirection(direction);\n    float rcpPowScale = 1.0 / powScale;\n    if( face == 0) {\n        r = vec3(direction.x, -direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 1) {\n        r = vec3(direction.y, direction.x, direction.z);\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 2) {\n        r = vec3(direction.z, direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 3) {\n        r = vec3(direction.x, direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else if( face == 4) {\n        r = vec3(direction.y, direction.x, -direction.z);\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else {\n        r = vec3(direction.z, -direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    r = normalize(r);\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n    vec2 base = offset + vec2( texelOffset );\n    return base + s * ( scale - 2.0 * texelOffset );\n}\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n    float roughnessVal = roughness* cubeUV_maxLods3;\n    float r1 = floor(roughnessVal);\n    float r2 = r1 + 1.0;\n    float t = fract(roughnessVal);\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n    float s = mipInfo.y;\n    float level0 = mipInfo.x;\n    float level1 = level0 + 1.0;\n    level1 = level1 > 5.0 ? 5.0 : level1;\n    level0 += min( floor( s + 0.5 ), 5.0 );\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n    vec4 result = mix(color10, color20, t);\n    return vec4(result.rgb, 1.0);\n}\n#endif\n",ae.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",ae.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",ae.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",ae.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",ae.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",ae.ShaderChunk.encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",ae.ShaderChunk.encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",ae.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",ae.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",ae.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n#endif\n",ae.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t#ifdef ENVMAP_MODE_REFLECTION\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t#else\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t#endif\n#endif\n",ae.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",ae.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",ae.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",ae.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",ae.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tdirectLight = getPointDirectLightIrradiance( pointLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",ae.ShaderChunk.lights_pars="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tIncidentLight getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tIncidentLight getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tIncidentLight getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",ae.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",ae.ShaderChunk.lights_phong_pars_fragment="#ifdef USE_ENVMAP\n\tvarying vec3 vWorldPosition;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",ae.ShaderChunk.lights_phong_pars_vertex="#ifdef USE_ENVMAP\n\tvarying vec3 vWorldPosition;\n#endif\n",ae.ShaderChunk.lights_phong_vertex="#ifdef USE_ENVMAP\n\tvWorldPosition = worldPosition.xyz;\n#endif\n",ae.ShaderChunk.lights_standard_fragment="StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n",ae.ShaderChunk.lights_standard_pars_fragment="struct StandardMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n};\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",ae.ShaderChunk.lights_template="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tdirectLight = getPointDirectLightIrradiance( pointLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n",ae.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",ae.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",ae.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",ae.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",ae.ShaderChunk.map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",ae.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",ae.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",ae.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",ae.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",ae.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",ae.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",ae.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",ae.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",ae.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",ae.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",ae.ShaderChunk.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",ae.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",ae.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",ae.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",ae.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\treturn dot( rgba_depth, bit_shift );\n\t}\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",ae.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",ae.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",ae.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",ae.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",ae.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",ae.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",ae.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",ae.ShaderChunk.specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",ae.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",ae.ShaderChunk.tonemapping_fragment="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",ae.ShaderChunk.tonemapping_pars_fragment="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",ae.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",ae.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",ae.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",ae.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",ae.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",ae.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",ae.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",ae.UniformsUtils={merge:function(r){var t={},e=0;for(t,e;e<r.length;e++){var a=this.clone(r[e]),n;for(n in a)t[n]=a[n]}return t},clone:function(e){var a={},t;for(t in e)for(var o in a[t]={},e[t]){var i=e[t][o];a[t][o]=i instanceof ae.Color||i instanceof ae.Vector2||i instanceof ae.Vector3||i instanceof ae.Vector4||i instanceof ae.Matrix3||i instanceof ae.Matrix4||i instanceof ae.Texture?i.clone():Array.isArray(i)?i.slice():i}return a}},ae.UniformsLib={common:{diffuse:{type:"c",value:new ae.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new ae.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new ae.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new ae.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"f"},coneCos:{type:"f"},penumbraCos:{type:"f"},decay:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"f"},distance:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new ae.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new ae.Vector4(0,0,1,1)}}},ae.ShaderChunk.cube_frag="uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\t#include <logdepthbuf_fragment>\n}\n",ae.ShaderChunk.cube_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.depth_frag="uniform float mNear;\nuniform float mFar;\nuniform float opacity;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}\n",ae.ShaderChunk.depth_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.depthRGBA_frag="#include <common>\n#include <logdepthbuf_pars_fragment>\nvec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}\n",ae.ShaderChunk.depthRGBA_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.distanceRGBA_frag="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\nvec4 pack1K ( float depth ) {\n\tdepth /= 1000.0;\n\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bitMsk;\n\treturn res;\n}\nfloat unpack1K ( vec4 color ) {\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\treturn dot( color, bitSh ) * 1000.0;\n}\nvoid main () {\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n}\n",ae.ShaderChunk.distanceRGBA_vert="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\tvWorldPosition = worldPosition;\n}\n",ae.ShaderChunk.equirect_frag="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <logdepthbuf_fragment>\n}\n",ae.ShaderChunk.equirect_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n}\n",ae.ShaderChunk.meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n",ae.ShaderChunk.meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <lights_phong_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_phong_vertex>\n\t#include <shadowmap_vertex>\n}\n",ae.ShaderChunk.meshstandard_frag="#define STANDARD\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_standard_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_standard_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.meshstandard_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n",ae.ShaderChunk.normal_frag="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n\t#include <logdepthbuf_fragment>\n}\n",ae.ShaderChunk.normal_vert="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",ae.ShaderChunk.points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",ae.ShaderChunk.points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",ae.ShaderLib={basic:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.common,ae.UniformsLib.aomap,ae.UniformsLib.fog]),vertexShader:ae.ShaderChunk.meshbasic_vert,fragmentShader:ae.ShaderChunk.meshbasic_frag},lambert:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.common,ae.UniformsLib.aomap,ae.UniformsLib.lightmap,ae.UniformsLib.emissivemap,ae.UniformsLib.fog,ae.UniformsLib.lights,{emissive:{type:"c",value:new ae.Color(0)}}]),vertexShader:ae.ShaderChunk.meshlambert_vert,fragmentShader:ae.ShaderChunk.meshlambert_frag},phong:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.common,ae.UniformsLib.aomap,ae.UniformsLib.lightmap,ae.UniformsLib.emissivemap,ae.UniformsLib.bumpmap,ae.UniformsLib.normalmap,ae.UniformsLib.displacementmap,ae.UniformsLib.fog,ae.UniformsLib.lights,{emissive:{type:"c",value:new ae.Color(0)},specular:{type:"c",value:new ae.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:ae.ShaderChunk.meshphong_vert,fragmentShader:ae.ShaderChunk.meshphong_frag},standard:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.common,ae.UniformsLib.aomap,ae.UniformsLib.lightmap,ae.UniformsLib.emissivemap,ae.UniformsLib.bumpmap,ae.UniformsLib.normalmap,ae.UniformsLib.displacementmap,ae.UniformsLib.roughnessmap,ae.UniformsLib.metalnessmap,ae.UniformsLib.fog,ae.UniformsLib.lights,{emissive:{type:"c",value:new ae.Color(0)},roughness:{type:"f",value:.5},metalness:{type:"f",value:0},envMapIntensity:{type:"f",value:1}}]),vertexShader:ae.ShaderChunk.meshstandard_vert,fragmentShader:ae.ShaderChunk.meshstandard_frag},points:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.points,ae.UniformsLib.fog]),vertexShader:ae.ShaderChunk.points_vert,fragmentShader:ae.ShaderChunk.points_frag},dashed:{uniforms:ae.UniformsUtils.merge([ae.UniformsLib.common,ae.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:ae.ShaderChunk.linedashed_vert,fragmentShader:ae.ShaderChunk.linedashed_frag},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:ae.ShaderChunk.depth_vert,fragmentShader:ae.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:ae.ShaderChunk.normal_vert,fragmentShader:ae.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:ae.ShaderChunk.cube_vert,fragmentShader:ae.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:ae.ShaderChunk.equirect_vert,fragmentShader:ae.ShaderChunk.equirect_frag},depthRGBA:{uniforms:{},vertexShader:ae.ShaderChunk.depthRGBA_vert,fragmentShader:ae.ShaderChunk.depthRGBA_frag},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new ae.Vector3(0,0,0)}},vertexShader:ae.ShaderChunk.distanceRGBA_vert,fragmentShader:ae.ShaderChunk.distanceRGBA_frag}},window.onload=ae.WebGLRenderer=function(t){function a(r,a,o,n){!0===y&&(r*=n,a*=n,o*=n),Pe.clearColor(r,a,o,n)}function s(){}function r(){}function o(){}async function h(){}function F(){}function f(a,r,o,t,i){var n;o.transparent?(t=oe,n=++Q):(t=q,n=++M),void 0===(n=t[n])?(n={id:a.id,object:a,geometry:r,material:o,z:ve.z,group:i},t.push(n)):(n.id=a.id,n.object=a,n.geometry=r,n.material=o,n.z=ve.z,n.group=i)}async function A(a,t){(async()=>{if(!1!==(await a.visible)){if(a.layers.test(t.layers))if(a instanceof(await ae.Light))await x.push(a);else if(a instanceof ae.Sprite)!1!==a.frustumCulled&&!0!==he.intersectsObject(a)||S.push(a);else if(a instanceof ae.LensFlare)J.push(a);else if(a instanceof ae.ImmediateRenderObject)!0===X.sortObjects&&(ve.setFromMatrixPosition(a.matrixWorld),ve.applyProjection(_e)),f(a,null,a.material,ve.z,null);else if((a instanceof ae.Mesh||a instanceof ae.Line||a instanceof ae.Points)&&(a instanceof ae.SkinnedMesh&&a.skeleton.update(),!1===a.frustumCulled||!0===he.intersectsObject(a))&&!0===(i=a.material).visible){!0===X.sortObjects&&(ve.setFromMatrixPosition(a.matrixWorld),ve.applyProjection(_e));var e=De.update(a);if(i instanceof ae.MultiMaterial)for(var o=e.groups,n=i.materials,i=0,s=o.length;i<s;i++){var d=o[i],c=n[d.materialIndex];!0===c.visible&&f(a,e,c,ve.z,d)}else f(a,e,i,ve.z,null)}for(i=0,s=(e=a.children).length;i<s;i++)A(e[i],t)}})()}async function C(a,t,e,o){(async()=>{var i=0,n=a.length;for(i,n;i<n;i++){var l=(d=a[i]).object,s=d.geometry,p=void 0===o?d.material:o,d=d.group;await l.modelViewMatrix.multiplyMatrices(await t.matrixWorldInverse,await l.matrixWorld),await l.normalMatrix.getNormalMatrix(await l.modelViewMatrix),(await l)instanceof ae.ImmediateRenderObject?(w(p),B(t,e,p,l),le="",l.render(async function(){})):await X.renderBufferDirect(await t,await e,await s,await p,await l,await d)}})()}async function w(e){e.side===ae.DoubleSide?Pe.disable(xe.CULL_FACE):Pe.enable(xe.CULL_FACE),Pe.setFlipSided(e.side===ae.BackSide),!0===e.transparent?Pe.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):Pe.setBlending(ae.NoBlending),Pe.setDepthFunc(e.depthFunc),Pe.setDepthTest(e.depthTest),Pe.setDepthWrite(e.depthWrite),Pe.setColorWrite(e.colorWrite),Pe.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}async function B(t,r,a,n){k=0;var d=Ae.get(a),c;if(void 0===d.program&&(a.needsUpdate=!0),void 0!==d.lightsHash&&d.lightsHash!==be.hash&&(a.needsUpdate=!0),a.needsUpdate){t:{var u=Ae.get(a),_=Re.getParameters(a,be,r,n),h=Re.getProgramCode(a,_),v=u.program,y=!0;if(void 0===v)a.addEventListener("dispose",o);else if(v.code!==h);else{if(void 0!==_.shaderID)break t;y=!1}if(y&&(_.shaderID?(v=ae.ShaderLib[_.shaderID],u.__webglShader={name:a.type,uniforms:ae.UniformsUtils.clone(v.uniforms),vertexShader:v.vertexShader,fragmentShader:v.fragmentShader}):u.__webglShader={name:a.type,uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader},a.__webglShader=u.__webglShader,v=Re.acquireProgram(a,_,h),u.program=v,a.program=v),_=v.getAttributes(),a.morphTargets)for(h=a.numSupportedMorphTargets=0;h<X.maxMorphTargets;h++)0<=_["morphTarget"+h]&&a.numSupportedMorphTargets++;if(a.morphNormals)for(h=a.numSupportedMorphNormals=0;h<X.maxMorphNormals;h++)0<=_["morphNormal"+h]&&a.numSupportedMorphNormals++;for(var x in u.uniformsList=[],_=u.__webglShader.uniforms,h=u.program.getUniforms(),_)(v=h[x])&&u.uniformsList.push([u.__webglShader.uniforms[x],v]);for((a instanceof ae.MeshPhongMaterial||a instanceof ae.MeshLambertMaterial||a instanceof ae.MeshStandardMaterial||a.lights)&&(u.lightsHash=be.hash,_.ambientLightColor.value=be.ambient,_.directionalLights.value=be.directional,_.spotLights.value=be.spot,_.pointLights.value=be.point,_.hemisphereLights.value=be.hemi,_.directionalShadowMap.value=be.directionalShadowMap,_.directionalShadowMatrix.value=be.directionalShadowMatrix,_.spotShadowMap.value=be.spotShadowMap,_.spotShadowMatrix.value=be.spotShadowMatrix,_.pointShadowMap.value=be.pointShadowMap,_.pointShadowMatrix.value=be.pointShadowMatrix),u.hasDynamicUniforms=!1,x=0,_=u.uniformsList.length;x<_;x++)if(!0===u.uniformsList[x][0].dynamic){u.hasDynamicUniforms=!0;break}}a.needsUpdate=!1}if(v=h=y=!1,x=(u=d.program).getUniforms(),_=d.__webglShader.uniforms,u.id!==P&&(xe.useProgram(u.program),P=u.id,v=h=y=!0),a.id!==ne&&(ne=a.id,h=!0),(y||t!==pe)&&(xe.uniformMatrix4fv(x.projectionMatrix,!1,t.projectionMatrix.elements),Ce.logarithmicDepthBuffer&&xe.uniform1f(x.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==pe&&(pe=t,v=h=!0),(a instanceof ae.ShaderMaterial||a instanceof ae.MeshPhongMaterial||a instanceof ae.MeshStandardMaterial||a.envMap)&&void 0!==x.cameraPosition&&(ve.setFromMatrixPosition(t.matrixWorld),xe.uniform3f(x.cameraPosition,ve.x,ve.y,ve.z)),(a instanceof ae.MeshPhongMaterial||a instanceof ae.MeshLambertMaterial||a instanceof ae.MeshBasicMaterial||a instanceof ae.MeshStandardMaterial||a instanceof ae.ShaderMaterial||a.skinning)&&void 0!==x.viewMatrix&&xe.uniformMatrix4fv(x.viewMatrix,!1,t.matrixWorldInverse.elements),void 0!==x.toneMappingExposure&&xe.uniform1f(x.toneMappingExposure,X.toneMappingExposure),void 0!==x.toneMappingWhitePoint&&xe.uniform1f(x.toneMappingWhitePoint,X.toneMappingWhitePoint)),a.skinning&&(n.bindMatrix&&void 0!==x.bindMatrix&&xe.uniformMatrix4fv(x.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&void 0!==x.bindMatrixInverse&&xe.uniformMatrix4fv(x.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Ce.floatVertexTextures&&n.skeleton&&n.skeleton.useVertexTexture?(void 0!==x.boneTexture&&(y=i(),xe.uniform1i(x.boneTexture,y),X.setTexture(n.skeleton.boneTexture,y)),void 0!==x.boneTextureWidth&&xe.uniform1i(x.boneTextureWidth,n.skeleton.boneTextureWidth),void 0!==x.boneTextureHeight&&xe.uniform1i(x.boneTextureHeight,n.skeleton.boneTextureHeight)):n.skeleton&&n.skeleton.boneMatrices&&void 0!==x.boneGlobalMatrices&&xe.uniformMatrix4fv(x.boneGlobalMatrices,!1,n.skeleton.boneMatrices)),h&&((a instanceof ae.MeshPhongMaterial||a instanceof ae.MeshLambertMaterial||a instanceof ae.MeshStandardMaterial||a.lights)&&(h=v,_.ambientLightColor.needsUpdate=h,_.directionalLights.needsUpdate=h,_.pointLights.needsUpdate=h,_.spotLights.needsUpdate=h,_.hemisphereLights.needsUpdate=h),r&&a.fog&&(_.fogColor.value=r.color,r instanceof ae.Fog?(_.fogNear.value=r.near,_.fogFar.value=r.far):r instanceof ae.FogExp2&&(_.fogDensity.value=r.density)),(a instanceof ae.MeshBasicMaterial||a instanceof ae.MeshLambertMaterial||a instanceof ae.MeshPhongMaterial||a instanceof ae.MeshStandardMaterial)&&(_.opacity.value=a.opacity,_.diffuse.value=a.color,a.emissive&&_.emissive.value.copy(a.emissive).multiplyScalar(a.emissiveIntensity),_.map.value=a.map,_.specularMap.value=a.specularMap,_.alphaMap.value=a.alphaMap,a.aoMap&&(_.aoMap.value=a.aoMap,_.aoMapIntensity.value=a.aoMapIntensity),a.map?c=a.map:a.specularMap?c=a.specularMap:a.displacementMap?c=a.displacementMap:a.normalMap?c=a.normalMap:a.bumpMap?c=a.bumpMap:a.roughnessMap?c=a.roughnessMap:a.metalnessMap?c=a.metalnessMap:a.alphaMap?c=a.alphaMap:a.emissiveMap&&(c=a.emissiveMap),void 0!==c&&(c instanceof ae.WebGLRenderTarget&&(c=c.texture),r=c.offset,c=c.repeat,_.offsetRepeat.value.set(r.x,r.y,c.x,c.y)),_.envMap.value=a.envMap,_.flipEnvMap.value=a.envMap instanceof ae.WebGLRenderTargetCube?1:-1,_.reflectivity.value=a.reflectivity,_.refractionRatio.value=a.refractionRatio),a instanceof ae.LineBasicMaterial?(_.diffuse.value=a.color,_.opacity.value=a.opacity):a instanceof ae.LineDashedMaterial?(_.diffuse.value=a.color,_.opacity.value=a.opacity,_.dashSize.value=a.dashSize,_.totalSize.value=a.dashSize+a.gapSize,_.scale.value=a.scale):a instanceof ae.PointsMaterial?(_.diffuse.value=a.color,_.opacity.value=a.opacity,_.size.value=a.size*me,_.scale.value=p.clientHeight/2,_.map.value=a.map,null!==a.map&&(c=a.map.offset,a=a.map.repeat,_.offsetRepeat.value.set(c.x,c.y,a.x,a.y))):a instanceof ae.MeshLambertMaterial?(a.lightMap&&(_.lightMap.value=a.lightMap,_.lightMapIntensity.value=a.lightMapIntensity),a.emissiveMap&&(_.emissiveMap.value=a.emissiveMap)):a instanceof ae.MeshPhongMaterial?(_.specular.value=a.specular,_.shininess.value=Math.max(a.shininess,1e-4),a.lightMap&&(_.lightMap.value=a.lightMap,_.lightMapIntensity.value=a.lightMapIntensity),a.emissiveMap&&(_.emissiveMap.value=a.emissiveMap),a.bumpMap&&(_.bumpMap.value=a.bumpMap,_.bumpScale.value=a.bumpScale),a.normalMap&&(_.normalMap.value=a.normalMap,_.normalScale.value.copy(a.normalScale)),a.displacementMap&&(_.displacementMap.value=a.displacementMap,_.displacementScale.value=a.displacementScale,_.displacementBias.value=a.displacementBias)):a instanceof ae.MeshStandardMaterial?(_.roughness.value=a.roughness,_.metalness.value=a.metalness,a.roughnessMap&&(_.roughnessMap.value=a.roughnessMap),a.metalnessMap&&(_.metalnessMap.value=a.metalnessMap),a.lightMap&&(_.lightMap.value=a.lightMap,_.lightMapIntensity.value=a.lightMapIntensity),a.emissiveMap&&(_.emissiveMap.value=a.emissiveMap),a.bumpMap&&(_.bumpMap.value=a.bumpMap,_.bumpScale.value=a.bumpScale),a.normalMap&&(_.normalMap.value=a.normalMap,_.normalScale.value.copy(a.normalScale)),a.displacementMap&&(_.displacementMap.value=a.displacementMap,_.displacementScale.value=a.displacementScale,_.displacementBias.value=a.displacementBias),a.envMap&&(_.envMapIntensity.value=a.envMapIntensity)):a instanceof ae.MeshDepthMaterial?(_.mNear.value=t.near,_.mFar.value=t.far,_.opacity.value=a.opacity):a instanceof ae.MeshNormalMaterial&&(_.opacity.value=a.opacity),E(d.uniformsList)),xe.uniformMatrix4fv(x.modelViewMatrix,!1,n.modelViewMatrix.elements),x.normalMatrix&&xe.uniformMatrix3fv(x.normalMatrix,!1,n.normalMatrix.elements),void 0!==x.modelMatrix&&xe.uniformMatrix4fv(x.modelMatrix,!1,n.matrixWorld.elements),!0===d.hasDynamicUniforms){for(a=[],c=0,r=(d=d.uniformsList).length;c<r;c++)void 0!==(_=(x=d[c][0]).onUpdateCallback)&&(_.bind(x)(n,t),a.push(d[c]));E(a)}return u}async function i(){var e=await k;return Ce.maxTextures,k+=1,e}async function d(r,a,o,l){var u;if("1i"===(await a))await xe.uniform1i(o,l);else if("1f"===a)xe.uniform1f(o,l);else if("2f"===a)xe.uniform2f(o,l[0],l[1]);else if("3f"===a)xe.uniform3f(o,l[0],l[1],l[2]);else if("4f"===a)xe.uniform4f(o,l[0],l[1],l[2],l[3]);else if("1iv"===a)xe.uniform1iv(o,l);else if("3iv"===a)xe.uniform3iv(o,l);else if("1fv"===a)xe.uniform1fv(o,l);else if("2fv"===a)xe.uniform2fv(o,l);else if("3fv"===a)xe.uniform3fv(o,l);else if("4fv"===a)xe.uniform4fv(o,l);else if("Matrix2fv"===a)xe.uniformMatrix2fv(o,!1,l);else if("Matrix3fv"===a)xe.uniformMatrix3fv(o,!1,l);else if("Matrix4fv"===a)xe.uniformMatrix4fv(o,!1,l);else if("i"===a)await xe.uniform1i(o,l);else if("f"===a)xe.uniform1f(o,l);else if("v2"===a)xe.uniform2f(o,l.x,l.y);else if("v3"===a)xe.uniform3f(o,l.x,l.y,l.z);else if("v4"===a)xe.uniform4f(o,l.x,l.y,l.z,l.w);else if("c"===a)xe.uniform3f(o,l.r,l.g,l.b);else if("s"===a)for(var f in r=r.properties){u=r[f];var g=o[f],h=l[f];d(u,u.type,g,h)}else if("sa"===a){r=r.properties,a=0;var v=l.length;for(v;a<v;a++)for(f in r)u=r[f],g=o[a][f],h=l[a][f],d(u,u.type,g,h)}else if("iv1"===a)xe.uniform1iv(o,l);else if("iv"===a)xe.uniform3iv(o,l);else if("fv1"===a)xe.uniform1fv(o,l);else if("fv"===a)xe.uniform3fv(o,l);else if("v2v"===a){for(void 0===r._array&&(r._array=new Float32Array(2*l.length)),u=a=0,f=l.length;a<f;a++,u+=2)r._array[u+0]=l[a].x,r._array[u+1]=l[a].y;xe.uniform2fv(o,r._array)}else if("v3v"===a){for(void 0===r._array&&(r._array=new Float32Array(3*l.length)),u=a=0,f=l.length;a<f;a++,u+=3)r._array[u+0]=l[a].x,r._array[u+1]=l[a].y,r._array[u+2]=l[a].z;xe.uniform3fv(o,r._array)}else if("v4v"===a){for(void 0===r._array&&(r._array=new Float32Array(4*l.length)),u=a=0,f=l.length;a<f;a++,u+=4)r._array[u+0]=l[a].x,r._array[u+1]=l[a].y,r._array[u+2]=l[a].z,r._array[u+3]=l[a].w;xe.uniform4fv(o,r._array)}else if("m2"===a)xe.uniformMatrix2fv(o,!1,l.elements);else if("m3"===a)xe.uniformMatrix3fv(o,!1,l.elements);else if("m3v"===a){for(void 0===r._array&&(r._array=new Float32Array(9*l.length)),a=0,f=l.length;a<f;a++)l[a].flattenToArrayOffset(r._array,9*a);xe.uniformMatrix3fv(o,!1,r._array)}else if("m4"===a)xe.uniformMatrix4fv(o,!1,l.elements);else if("m4v"===a){for(void 0===r._array&&(r._array=new Float32Array(16*l.length)),a=0,f=l.length;a<f;a++)l[a].flattenToArrayOffset(r._array,16*a);xe.uniformMatrix4fv(o,!1,r._array)}else if("t"===a)u=i(),await xe.uniform1i(await o,await u),(await l)&&((await l)instanceof ae.CubeTexture||Array.isArray(await l.image)&&6===(await l.image.length)?await(await l,void(await u)):(await l)instanceof ae.WebGLRenderTargetCube?await(await l.texture,void(await u)):(await l)instanceof ae.WebGLRenderTarget?await X.setTexture(await l.texture,await u):await X.setTexture(await l,await u));else if("tv"===a){for(void 0===r._array&&(r._array=[]),a=0,f=r.value.length;a<f;a++)r._array[a]=i();for(xe.uniform1iv(o,r._array),a=0,f=r.value.length;a<f;a++)l=r.value[a],u=r._array[a],l&&(l instanceof ae.CubeTexture||l.image instanceof Array&&6===l.image.length||(l instanceof ae.WebGLRenderTarget?X.setTexture(l.texture,u):l instanceof ae.WebGLRenderTargetCube?l.texture:X.setTexture(l,u)))}}function E(r){(async()=>{var t=0,a=await r.length,i;for(i,t,a;t<(await a);t++)!1!==(i=r[t][0]).needsUpdate&&d(i,i.type,r[t][1],i.value)})()}function b(r,t,e){e?(xe.texParameteri(r,xe.TEXTURE_WRAP_S,n(t.wrapS)),xe.texParameteri(r,xe.TEXTURE_WRAP_T,n(t.wrapT)),xe.texParameteri(r,xe.TEXTURE_MAG_FILTER,n(t.magFilter)),xe.texParameteri(r,xe.TEXTURE_MIN_FILTER,n(t.minFilter))):(xe.texParameteri(r,xe.TEXTURE_WRAP_S,xe.CLAMP_TO_EDGE),xe.texParameteri(r,xe.TEXTURE_WRAP_T,xe.CLAMP_TO_EDGE),t.wrapS===ae.ClampToEdgeWrapping&&(t.wrapT,ae.ClampToEdgeWrapping),xe.texParameteri(r,xe.TEXTURE_MAG_FILTER,void t.magFilter),xe.texParameteri(r,xe.TEXTURE_MIN_FILTER,void t.minFilter),t.minFilter!==ae.NearestFilter&&(t.minFilter,ae.LinearFilter)),(e=Ee.get("EXT_texture_filter_anisotropic"))&&(1<t.anisotropy||Ae.get(t).__currentAnisotropy)&&(xe.texParameterf(r,e.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,X.getMaxAnisotropy())),Ae.get(t).__currentAnisotropy=t.anisotropy)}function Z(e){return ae.Math.isPowerOfTwo(e.width)&&ae.Math.isPowerOfTwo(e.height)}function n(r){var t;if(r===ae.RepeatWrapping)return xe.REPEAT;if(r===ae.ClampToEdgeWrapping)return xe.CLAMP_TO_EDGE;if(r===ae.MirroredRepeatWrapping)return xe.MIRRORED_REPEAT;if(r===ae.NearestFilter)return xe.NEAREST;if(r===ae.NearestMipMapNearestFilter)return xe.NEAREST_MIPMAP_NEAREST;if(r===ae.NearestMipMapLinearFilter)return xe.NEAREST_MIPMAP_LINEAR;if(r===ae.LinearFilter)return xe.LINEAR;if(r===ae.LinearMipMapNearestFilter)return xe.LINEAR_MIPMAP_NEAREST;if(r===ae.LinearMipMapLinearFilter)return xe.LINEAR_MIPMAP_LINEAR;if(r===ae.UnsignedByteType)return xe.UNSIGNED_BYTE;if(r===ae.UnsignedShort4444Type)return xe.UNSIGNED_SHORT_4_4_4_4;if(r===ae.UnsignedShort5551Type)return xe.UNSIGNED_SHORT_5_5_5_1;if(r===ae.UnsignedShort565Type)return xe.UNSIGNED_SHORT_5_6_5;if(r===ae.ByteType)return xe.BYTE;if(r===ae.ShortType)return xe.SHORT;if(r===ae.UnsignedShortType)return xe.UNSIGNED_SHORT;if(r===ae.IntType)return xe.INT;if(r===ae.UnsignedIntType)return xe.UNSIGNED_INT;if(r===ae.FloatType)return xe.FLOAT;if(r===ae.AlphaFormat)return xe.ALPHA;if(r===ae.RGBFormat)return xe.RGB;if(r===ae.RGBAFormat)return xe.RGBA;if(r===ae.LuminanceFormat)return xe.LUMINANCE;if(r===ae.LuminanceAlphaFormat)return xe.LUMINANCE_ALPHA;if(r===ae.AddEquation)return xe.FUNC_ADD;if(r===ae.SubtractEquation)return xe.FUNC_SUBTRACT;if(r===ae.ReverseSubtractEquation)return xe.FUNC_REVERSE_SUBTRACT;if(r===ae.ZeroFactor)return xe.ZERO;if(r===ae.OneFactor)return xe.ONE;if(r===ae.SrcColorFactor)return xe.SRC_COLOR;if(r===ae.OneMinusSrcColorFactor)return xe.ONE_MINUS_SRC_COLOR;if(r===ae.SrcAlphaFactor)return xe.SRC_ALPHA;if(r===ae.OneMinusSrcAlphaFactor)return xe.ONE_MINUS_SRC_ALPHA;if(r===ae.DstAlphaFactor)return xe.DST_ALPHA;if(r===ae.OneMinusDstAlphaFactor)return xe.ONE_MINUS_DST_ALPHA;if(r===ae.DstColorFactor)return xe.DST_COLOR;if(r===ae.OneMinusDstColorFactor)return xe.ONE_MINUS_DST_COLOR;if(r===ae.SrcAlphaSaturateFactor)return xe.SRC_ALPHA_SATURATE;if(null!==(t=Ee.get("WEBGL_compressed_texture_s3tc"))){if(r===ae.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===ae.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===ae.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===ae.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(t=Ee.get("WEBGL_compressed_texture_pvrtc"))){if(r===ae.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===ae.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===ae.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===ae.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(t=Ee.get("WEBGL_compressed_texture_etc1"))&&r===ae.RGB_ETC1_Format)return t.COMPRESSED_RGB_ETC1_WEBGL;if(null!==(t=Ee.get("EXT_blend_minmax"))){if(r===ae.MinEquation)return t.MIN_EXT;if(r===ae.MaxEquation)return t.MAX_EXT}return 0}var p=void 0===(t=t||{}).canvas?document.createElement("canvas"):t.canvas,l=void 0===t.context?null:t.context,c=void 0!==t.alpha&&t.alpha,g=void 0===t.depth||t.depth,_=void 0===t.stencil||t.stencil,v=void 0!==t.antialias&&t.antialias,y=void 0===t.premultipliedAlpha||t.premultipliedAlpha,m=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,x=[],q=[],M=-1,oe=[],Q=-1,D=new Float32Array(8),S=[],J=[];this.domElement=p,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.gammaFactor=2,this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1,this.toneMapping=ae.LinearToneMapping,this.toneMappingWhitePoint=this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var X=this,P=null,R=null,U=null,ne=-1,le="",pe=null,V=new ae.Vector4,O=null,H=new ae.Vector4,k=0,W=new ae.Color(0),K=0,ie=p.width,de=p.height,me=1,ge=new ae.Vector4(0,0,ie,de),fe=new ae.Vector4(0,0,ie,de),he=new ae.Frustum,_e=new ae.Matrix4,ve=new ae.Vector3,be={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[],shadowsPointLight:0},Le={geometries:0,textures:0},ye={calls:0,vertices:0,faces:0,points:0},xe;this.info={render:ye,memory:Le,programs:null};try{if(c={alpha:c,depth:g,stencil:_,antialias:v,premultipliedAlpha:y,preserveDrawingBuffer:m},null===(xe=l||p.getContext("webgl",c)||p.getContext("experimental-webgl",c))){if(null!==p.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}void 0===xe.getShaderPrecisionFormat&&(xe.getShaderPrecisionFormat=function(){}),p.addEventListener("webglcontextlost",function(){},!1)}catch(e){}var Ee=new ae.WebGLExtensions(xe);Ee.get("OES_standard_derivatives"),Ee.get("ANGLE_instanced_arrays"),Ee.get("OES_element_index_uint")&&(ae.BufferGeometry.MaxIndex=4294967296);var Ce=new ae.WebGLCapabilities(xe,Ee,t),Pe=new ae.WebGLState(xe,Ee,n),Ae=new ae.WebGLProperties,De=new ae.WebGLObjects(xe,Ae,this.info),Re=new ae.WebGLPrograms(this,Ce),$=new ae.WebGLLights;this.info.programs=Re.programs;var we=new ae.WebGLBufferRenderer(xe,Ee,ye),Be=new ae.WebGLIndexedBufferRenderer(xe,Ee,ye);Pe.init(),Pe.scissor(V.copy(ge).multiplyScalar(me)),Pe.viewport(H.copy(fe).multiplyScalar(me)),a(W.r,W.g,W.b,K),this.context=xe,this.capabilities=Ce,this.extensions=Ee,this.properties=Ae,this.state=Pe;var Ue=new ae.WebGLShadowMap(this,be,De);this.shadowMap=Ue;var Ie=new ae.SpritePlugin(this,S),Me=new ae.LensFlarePlugin(this,J);this.getContext=function(){},this.getContextAttributes=function(){},this.forceContextLoss=function(){},this.getMaxAnisotropy=function(){},this.getPrecision=function(){return Ce.precision},this.getPixelRatio=function(){},this.setPixelRatio=function(e){void 0!==e&&(me=e,this.setSize(fe.z,fe.w,!1))},this.getSize=function(){},this.setSize=async function(r,t,e){ie=r,de=t,(async()=>{p.width=r*me,p.height=t*me})(),!1!==e&&(p.style.width=r+"px",p.style.height=t+"px"),await this.setViewport(0,0,r,t)},this.setViewport=function(a,o,r,t){Pe.viewport(fe.set(a,o,r,t))},this.setScissor=function(){},this.setScissorTest=function(){},this.getClearColor=function(){},this.setClearColor=function(e,t){W.set(e),K=void 0===t?1:t,a(W.r,W.g,W.b,K)},this.getClearAlpha=function(){},this.setClearAlpha=function(){},this.clear=async function(a,o,r){var t=0;(void 0===a||a)&&(t|=xe.COLOR_BUFFER_BIT),(void 0===o||o)&&(t|=xe.DEPTH_BUFFER_BIT),(void 0===r||r)&&(t|=xe.STENCIL_BUFFER_BIT),await xe.clear(await t)},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.clearTarget=function(){},this.resetGLState=function(){},this.dispose=function(){},this.renderBufferImmediate=function(){},this.renderBufferDirect=async function(r,a,i,s,d,p){(async()=>{await w(await s);var e=await B(await r,await a,await s,await d),t=!1;if((r=(await i.id)+"_"+(await e.id)+"_"+(await s.wireframe))!==(await le)&&(le=r,t=!0),void 0!==(a=await d.morphTargetInfluences)){r=[];var l=0;for(t=await a.length;l<(await t);l++)g=await a[await l],r.push([await g,await l]);r.sort(await u),8<(await r.length)&&(r.length=8);var u=await i.morphAttributes;for(l=0,t=await r.length;(await l)<(await t);await l++)g=await r[await l],D[l]=g[0],0===g[0]?(!0===s.morphTargets&&i.removeAttribute("morphTarget"+l),!0===s.morphNormals&&i.removeAttribute("morphNormal"+l)):(a=g[1],!0===s.morphTargets&&u.position&&i.addAttribute("morphTarget"+l,u.position[a]),!0===s.morphNormals&&u.normal&&i.addAttribute("morphNormal"+l,u.normal[a]));null!==(r=await e.getUniforms()).morphTargetInfluences&&(await xe.uniform1fv(await r.morphTargetInfluences,await D)),t=!0}if(a=await i.index,l=i.attributes.position,!0===s.wireframe&&(a=De.getWireframeAttribute(i)),null===a?r=we:(r=Be).setIndex(a),t){var m;if(t=void 0,i instanceof ae.InstancedBufferGeometry&&null===(m=Ee.get("ANGLE_instanced_arrays")));else{void 0===t&&(t=0),Pe.initAttributes();var g=i.attributes,h;for(h in e=e.getAttributes(),u=s.defaultAttributeValues,e){var y=e[h];if(0<=y)if(void 0!==(L=g[h])){var S=L.itemSize,M=De.getAttributeBuffer(L);if(L instanceof ae.InterleavedBufferAttribute){var b=L.data,T=b.stride,L=L.offset;b instanceof ae.InstancedInterleavedBuffer?(Pe.enableAttributeAndDivisor(y,b.meshPerAttribute,m),void 0===i.maxInstancedCount&&(i.maxInstancedCount=b.meshPerAttribute*b.count)):Pe.enableAttribute(y),xe.bindBuffer(xe.ARRAY_BUFFER,M),xe.vertexAttribPointer(y,S,xe.FLOAT,!1,T*b.array.BYTES_PER_ELEMENT,(t*T+L)*b.array.BYTES_PER_ELEMENT)}else L instanceof ae.InstancedBufferAttribute?(Pe.enableAttributeAndDivisor(y,L.meshPerAttribute,m),void 0===i.maxInstancedCount&&(i.maxInstancedCount=L.meshPerAttribute*L.count)):Pe.enableAttribute(y),xe.bindBuffer(xe.ARRAY_BUFFER,M),xe.vertexAttribPointer(y,S,xe.FLOAT,!1,0,4*(t*S))}else if(void 0!==u&&void 0!==(S=u[h]))switch(S.length){case 2:xe.vertexAttrib2fv(y,S);break;case 3:xe.vertexAttrib3fv(y,S);break;case 4:xe.vertexAttrib4fv(y,S);break;default:xe.vertexAttrib1fv(y,S);}}Pe.disableUnusedAttributes()}null!==a&&xe.bindBuffer(xe.ELEMENT_ARRAY_BUFFER,De.getAttributeBuffer(a))}if(m=1/0,null===a?void 0!==l&&(m=l.count):m=a.count,h=i.drawRange.start,a=i.drawRange.count,l=null===p?0:p.start,t=null===p?1/0:p.count,p=await Math.max(0,h,l),m=(await Math.min(0+m,h+a,l+t))-1,m=await Math.max(0,m-p+1),!(d instanceof ae.Mesh))d instanceof ae.Line?(void 0===(s=s.linewidth)&&(s=1),Pe.setLineWidth(s*(null===R?me:1)),d instanceof ae.LineSegments?r.setMode(xe.LINES):r.setMode(xe.LINE_STRIP)):d instanceof ae.Points&&r.setMode(xe.POINTS);else if(!0===s.wireframe)Pe.setLineWidth(s.wireframeLinewidth*(null===R?me:1)),r.setMode(xe.LINES);else switch(d.drawMode){case ae.TrianglesDrawMode:r.setMode(xe.TRIANGLES);break;case ae.TriangleStripDrawMode:r.setMode(xe.TRIANGLE_STRIP);break;case ae.TriangleFanDrawMode:r.setMode(xe.TRIANGLE_FAN);}(await i)instanceof ae.InstancedBufferGeometry?0<(await i.maxInstancedCount)&&(await r.renderInstances(await i,await p,await m)):await r.render(await p,await m)})()},this.render=async function(t,a,i,p){(async()=>{if(0==a instanceof ae.Camera);else{var o=t.fog;le="",ne=-1,pe=null,!0===(await t.autoUpdate)&&(await t.updateMatrixWorld()),null===a.parent&&a.updateMatrixWorld(),a.matrixWorldInverse.getInverse(a.matrixWorld),_e.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),await he.setFromMatrix(await _e),x.length=0,Q=M=-1,S.length=0,J.length=0,A(t,a),q.length=M+1,oe.length=Q+1,!0===(await X.sortObjects)&&(await(await q.sort(await h),await oe.sort(await F)));var e=x,n=0,l=0,s=0,u=a.matrixWorldInverse,m=0,f=0,g=0,v=0,y=0,T,L,P,w,I,G;for(T=be.shadowsPointLight=0,L=e.length;T<L;T++)if(w=(P=e[T]).color,I=P.intensity,G=P.distance,P instanceof ae.AmbientLight)n+=w.r*I,l+=w.g*I,s+=w.b*I;else if(P instanceof ae.DirectionalLight){var N=$.get(P);N.color.copy(P.color).multiplyScalar(P.intensity),N.direction.setFromMatrixPosition(P.matrixWorld),ve.setFromMatrixPosition(P.target.matrixWorld),N.direction.sub(ve),N.direction.transformDirection(u),(N.shadow=P.castShadow)&&(N.shadowBias=P.shadow.bias,N.shadowRadius=P.shadow.radius,N.shadowMapSize=P.shadow.mapSize,be.shadows[y++]=P),be.directionalShadowMap[m]=P.shadow.map,be.directionalShadowMatrix[m]=P.shadow.matrix,be.directional[m++]=N}else P instanceof ae.SpotLight?((N=$.get(P)).position.setFromMatrixPosition(P.matrixWorld),N.position.applyMatrix4(u),N.color.copy(w).multiplyScalar(I),N.distance=G,N.direction.setFromMatrixPosition(P.matrixWorld),ve.setFromMatrixPosition(P.target.matrixWorld),N.direction.sub(ve),N.direction.transformDirection(u),N.coneCos=Math.cos(P.angle),N.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),N.decay=0===P.distance?0:P.decay,(N.shadow=P.castShadow)&&(N.shadowBias=P.shadow.bias,N.shadowRadius=P.shadow.radius,N.shadowMapSize=P.shadow.mapSize,be.shadows[y++]=P),be.spotShadowMap[g]=P.shadow.map,be.spotShadowMatrix[g]=P.shadow.matrix,be.spot[g++]=N):P instanceof ae.PointLight?((N=$.get(P)).position.setFromMatrixPosition(P.matrixWorld),N.position.applyMatrix4(u),N.color.copy(P.color).multiplyScalar(P.intensity),N.distance=P.distance,N.decay=0===P.distance?0:P.decay,(N.shadow=P.castShadow)&&(N.shadowBias=P.shadow.bias,N.shadowRadius=P.shadow.radius,N.shadowMapSize=P.shadow.mapSize,be.shadows[y++]=P),be.pointShadowMap[f]=P.shadow.map,void 0===be.pointShadowMatrix[f]&&(be.pointShadowMatrix[f]=new ae.Matrix4),ve.setFromMatrixPosition(P.matrixWorld).negate(),be.pointShadowMatrix[f].identity().setPosition(ve),be.point[f++]=N):P instanceof ae.HemisphereLight&&((N=$.get(P)).direction.setFromMatrixPosition(P.matrixWorld),N.direction.transformDirection(u),N.direction.normalize(),N.skyColor.copy(P.color).multiplyScalar(I),N.groundColor.copy(P.groundColor).multiplyScalar(I),be.hemi[v++]=N);be.ambient[0]=n,be.ambient[1]=l,be.ambient[2]=s,be.directional.length=m,be.spot.length=g,be.point.length=f,be.hemi.length=v,be.shadows.length=y,be.hash=m+","+f+","+g+","+v+","+y,Ue.render(t,a),ye.calls=0,ye.vertices=0,ye.faces=0,ye.points=0,void 0===i&&(i=null),await this.setRenderTarget(await i),(this.autoClear||p)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),t.overrideMaterial?(p=t.overrideMaterial,C(q,a,o,p),C(oe,a,o,p)):(Pe.setBlending(ae.NoBlending),C(q,a,o),C(oe,a,o)),Ie.render(t,a),Me.render(t,a,H),i&&(t=i.texture).generateMipmaps&&Z(i)&&t.minFilter!==ae.NearestFilter&&t.minFilter!==ae.LinearFilter&&(t=i instanceof ae.WebGLRenderTargetCube?xe.TEXTURE_CUBE_MAP:xe.TEXTURE_2D,i=Ae.get(i.texture).__webglTexture,Pe.bindTexture(t,i),xe.generateMipmap(t),Pe.bindTexture(t,null)),Pe.setDepthTest(!0),Pe.setDepthWrite(!0),Pe.setColorWrite(!0)}})()},this.setFaceCulling=function(){},this.setTexture=async function(r,a){var o=await Ae.get(r);if(!(0<r.version&&o.__version!==r.version))Pe.activeTexture(xe.TEXTURE0+a),await Pe.bindTexture(xe.TEXTURE_2D,o.__webglTexture);else if(void 0===(i=r.image));else if(!1===i.complete);else{void 0===o.__webglInit&&(o.__webglInit=!0,r.addEventListener("dispose",s),o.__webglTexture=xe.createTexture(),Le.textures++),Pe.activeTexture(xe.TEXTURE0+a),Pe.bindTexture(xe.TEXTURE_2D,o.__webglTexture),xe.pixelStorei(xe.UNPACK_FLIP_Y_WEBGL,r.flipY),xe.pixelStorei(xe.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),xe.pixelStorei(xe.UNPACK_ALIGNMENT,r.unpackAlignment);var t=function(a,o){if(a.width>o||a.height>o){var r=o/Math.max(a.width,a.height),t=document.createElement("canvas");return t.width=Math.floor(a.width*r),t.height=Math.floor(a.height*r),t.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,t.width,t.height),t}return a}(r.image,Ce.maxTextureSize);(r.wrapS!==ae.ClampToEdgeWrapping||r.wrapT!==ae.ClampToEdgeWrapping||r.minFilter!==ae.NearestFilter&&r.minFilter!==ae.LinearFilter)&&!1===Z(t)&&((i=t)instanceof HTMLImageElement||i instanceof HTMLCanvasElement?((l=document.createElement("canvas")).width=ae.Math.nearestPowerOfTwo(i.width),l.height=ae.Math.nearestPowerOfTwo(i.height),l.getContext("2d").drawImage(i,0,0,l.width,l.height),t=l):t=i);var i=Z(t),l=n(r.format),p=n(r.type);b(xe.TEXTURE_2D,r,i);var d=r.mipmaps,c=0,u=d.length;if(r instanceof ae.DataTexture){if(0<d.length&&i){for(c,u;c<u;c++)t=d[c],Pe.texImage2D(xe.TEXTURE_2D,c,l,t.width,t.height,0,l,p,t.data);r.generateMipmaps=!1}else Pe.texImage2D(xe.TEXTURE_2D,0,l,t.width,t.height,0,l,p,t.data);}else if(r instanceof ae.CompressedTexture)for(c=0,u=d.length;c<u;c++)t=d[c],r.format!==ae.RGBAFormat&&r.format!==ae.RGBFormat?-1<Pe.getCompressedTextureFormats().indexOf(l)&&Pe.compressedTexImage2D(xe.TEXTURE_2D,c,l,t.width,t.height,0,t.data):Pe.texImage2D(xe.TEXTURE_2D,c,l,t.width,t.height,0,l,p,t.data);else if(0<d.length&&i){for(c=0,u=d.length;c<u;c++)t=d[c],Pe.texImage2D(xe.TEXTURE_2D,c,l,l,p,t);r.generateMipmaps=!1}else Pe.texImage2D(xe.TEXTURE_2D,0,l,l,p,t);r.generateMipmaps&&i&&xe.generateMipmap(xe.TEXTURE_2D),o.__version=r.version,r.onUpdate&&r.onUpdate(r)}},this.getCurrentRenderTarget=function(){return R},this.setRenderTarget=async function(a){if((R=a)&&void 0===Ae.get(a).__webglFramebuffer){var t=Ae.get(a),o=Ae.get(a.texture);a.addEventListener("dispose",r),o.__webglTexture=xe.createTexture(),Le.textures++;var n=a instanceof ae.WebGLRenderTargetCube,l=ae.Math.isPowerOfTwo(a.width)&&ae.Math.isPowerOfTwo(a.height),p=0;if(n)for(t.__webglFramebuffer=[],p;6>p;p++)t.__webglFramebuffer[p]=xe.createFramebuffer();else t.__webglFramebuffer=xe.createFramebuffer();if(n){for(Pe.bindTexture(xe.TEXTURE_CUBE_MAP,o.__webglTexture),b(xe.TEXTURE_CUBE_MAP,a.texture,l),p=0;6>p;p++)t.__webglFramebuffer[p],xe.COLOR_ATTACHMENT0,xe.TEXTURE_CUBE_MAP_POSITIVE_X;a.texture.generateMipmaps&&l&&xe.generateMipmap(xe.TEXTURE_CUBE_MAP),Pe.bindTexture(xe.TEXTURE_CUBE_MAP,null)}else Pe.bindTexture(xe.TEXTURE_2D,o.__webglTexture),b(xe.TEXTURE_2D,a.texture,l),t.__webglFramebuffer,xe.COLOR_ATTACHMENT0,xe.TEXTURE_2D,a.texture.generateMipmaps&&l&&xe.generateMipmap(xe.TEXTURE_2D),Pe.bindTexture(xe.TEXTURE_2D,null);if(a.depthBuffer){if(t=Ae.get(a),a instanceof ae.WebGLRenderTargetCube)for(t.__webglDepthbuffer=[],o=0;6>o;o++)xe.bindFramebuffer(xe.FRAMEBUFFER,t.__webglFramebuffer[o]),t.__webglDepthbuffer[o]=xe.createRenderbuffer(),t.__webglDepthbuffer[o];else xe.bindFramebuffer(xe.FRAMEBUFFER,t.__webglFramebuffer),t.__webglDepthbuffer=xe.createRenderbuffer(),t.__webglDepthbuffer;xe.bindFramebuffer(xe.FRAMEBUFFER,null)}}t=(await a)instanceof ae.WebGLRenderTargetCube,a?(o=Ae.get(a),o=t?o.__webglFramebuffer[a.activeCubeFace]:o.__webglFramebuffer,V.copy(a.scissor),O=a.scissorTest,H.copy(a.viewport)):(o=null,await V.copy(ge).multiplyScalar(me),O=!1,await H.copy(fe).multiplyScalar(me)),U!==o&&(xe.bindFramebuffer(xe.FRAMEBUFFER,o),U=o),Pe.scissor(V),Pe.setScissorTest(O),Pe.viewport(H),t&&(t=Ae.get(a.texture),xe.framebufferTexture2D(xe.FRAMEBUFFER,xe.COLOR_ATTACHMENT0,xe.TEXTURE_CUBE_MAP_POSITIVE_X+a.activeCubeFace,t.__webglTexture,a.activeMipMapLevel))},this.readRenderTargetPixels=function(){}},ae.WebGLRenderTarget=function(){},ae.WebGLRenderTarget.prototype={constructor:ae.WebGLRenderTarget,setSize:function(){},clone:function(){},copy:function(){},dispose:function(){}},ae.EventDispatcher.prototype.apply(ae.WebGLRenderTarget.prototype),ae.WebGLRenderTargetCube=function(){},ae.WebGLRenderTargetCube.prototype=Object.create(ae.WebGLRenderTarget.prototype),ae.WebGLRenderTargetCube.prototype.constructor=ae.WebGLRenderTargetCube,ae.WebGLBufferRenderer=function(){this.setMode=function(){},this.render=function(){},this.renderInstances=function(){}},ae.WebGLIndexedBufferRenderer=function(a,t,o){var n,l,d;this.setMode=function(e){n=e},this.setIndex=function(e){e.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(l=a.UNSIGNED_INT,d=4):(l=a.UNSIGNED_SHORT,d=2)},this.render=async function(t,e){await a.drawElements(n,e,l,t*d),o.calls++,o.vertices+=e,n===a.TRIANGLES&&(o.faces+=e/3)},this.renderInstances=function(){}},ae.WebGLExtensions=function(a){var o={};this.get=async function(r){return void 0===o[r]?(t="EXT_texture_filter_anisotropic"===r?a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===r?a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===r?a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):"WEBGL_compressed_texture_etc1"===r?a.getExtension("WEBGL_compressed_texture_etc1"):a.getExtension(r),o[r]=t):o[r];var t}},ae.WebGLCapabilities=function(e,r,a){function o(r){if("highp"===r){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";r="mediump"}return"mediump"===r&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}this.getMaxPrecision=o,this.precision=void 0===a.precision?"highp":a.precision,this.logarithmicDepthBuffer=void 0!==a.logarithmicDepthBuffer&&a.logarithmicDepthBuffer,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=0<this.maxVertexTextures,this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures,(a=o(this.precision))!==this.precision&&(this.precision=a),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!r.get("EXT_frag_depth"))},ae.WebGLGeometries=function(r,t,a){(async()=>{function o(){}var t={};this.get=function(e){var i=e.geometry,n;return void 0===t[i.id]?(i.addEventListener("dispose",o),i instanceof ae.BufferGeometry?n=i:i instanceof ae.Geometry&&(void 0===i._bufferGeometry&&(i._bufferGeometry=new ae.BufferGeometry().setFromObject(e)),n=i._bufferGeometry),t[i.id]=n,a.memory.geometries++,n):t[i.id]}})()},ae.WebGLLights=function(){this.get=function(){}},ae.WebGLObjects=function(a,i,e){function t(r,n){var e=r instanceof ae.InterleavedBufferAttribute?r.data:r,t=i.get(e);void 0===t.__webglBuffer?(t.__webglBuffer=a.createBuffer(),a.bindBuffer(n,t.__webglBuffer),a.bufferData(n,e.array,e.dynamic?a.DYNAMIC_DRAW:a.STATIC_DRAW),t.version=e.version):t.version!==e.version&&(a.bindBuffer(n,t.__webglBuffer),!1===e.dynamic||-1===e.updateRange.count?a.bufferSubData(n,0,e.array):0===e.updateRange.count||(a.bufferSubData(n,e.updateRange.offset*e.array.BYTES_PER_ELEMENT,e.array.subarray(e.updateRange.offset,e.updateRange.offset+e.updateRange.count)),e.updateRange.count=0),t.version=e.version)}var o=new ae.WebGLGeometries(a,i,e);this.getAttributeBuffer=function(e){return e instanceof ae.InterleavedBufferAttribute?i.get(e.data).__webglBuffer:i.get(e).__webglBuffer},this.getWireframeAttribute=function(){},this.update=function(e){var r=o.get(e);e.geometry instanceof ae.Geometry&&r.updateFromObject(e),e=r.index;var i=r.attributes,s=0;for(var p in null!==e&&t(e,a.ELEMENT_ARRAY_BUFFER),i)t(i[p],a.ARRAY_BUFFER);for(p in e=r.morphAttributes)for(s,n=(i=e[p]).length;s<n;s++)t(i[s],a.ARRAY_BUFFER);return r}},ae.WebGLProgram=function(){function a(e){switch(e){case ae.LinearEncoding:return["Linear","( value )"];case ae.sRGBEncoding:return["sRGB","( value )"];case ae.RGBEEncoding:return["RGBE","( value )"];case ae.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case ae.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case ae.RGBDEncoding:return["RGBD","( value, 256.0 )"];case ae.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+e);}}function r(e,o){var r=a(o);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function o(e,o){var r=a(o);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function t(r,t){var e;switch(t){case ae.LinearToneMapping:e="Linear";break;case ae.ReinhardToneMapping:e="Reinhard";break;case ae.Uncharted2ToneMapping:e="Uncharted2";break;case ae.CineonToneMapping:e="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+t);}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function l(e){return""!==e}function e(r,t){return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function n(e){return e.replace(/#include +<([\w\d.]+)>/g,function(a,t){var e=ae.ShaderChunk[t];if(void 0===e)throw Error("Can not resolve #include <"+t+">");return n(e)})}var p=0;return function(a,i,c,u){var m=a.context,f=c.extensions,h=c.defines,T=c.__webglShader.vertexShader,L=c.__webglShader.fragmentShader,E="SHADOWMAP_TYPE_BASIC";u.shadowMapType===ae.PCFShadowMap?E="SHADOWMAP_TYPE_PCF":u.shadowMapType===ae.PCFSoftShadowMap&&(E="SHADOWMAP_TYPE_PCF_SOFT");var C="ENVMAP_TYPE_CUBE",P="ENVMAP_MODE_REFLECTION",A="ENVMAP_BLENDING_MULTIPLY";if(u.envMap){switch(c.envMap.mapping){case ae.CubeReflectionMapping:case ae.CubeRefractionMapping:C="ENVMAP_TYPE_CUBE";break;case ae.CubeUVReflectionMapping:case ae.CubeUVRefractionMapping:C="ENVMAP_TYPE_CUBE_UV";break;case ae.EquirectangularReflectionMapping:case ae.EquirectangularRefractionMapping:C="ENVMAP_TYPE_EQUIREC";break;case ae.SphericalReflectionMapping:C="ENVMAP_TYPE_SPHERE";}switch(c.envMap.mapping){case ae.CubeRefractionMapping:case ae.EquirectangularRefractionMapping:P="ENVMAP_MODE_REFRACTION";}switch(c.combine){case ae.MultiplyOperation:A="ENVMAP_BLENDING_MULTIPLY";break;case ae.MixOperation:A="ENVMAP_BLENDING_MIX";break;case ae.AddOperation:A="ENVMAP_BLENDING_ADD";}}var D=0<a.gammaFactor?a.gammaFactor:1,w=(f=function(t,r,a){return[(t=t||{}).derivatives||r.envMapCubeUV||r.bumpMap||r.normalMap||r.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||r.logarithmicDepthBuffer)&&a.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&a.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||r.envMap)&&a.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(l).join("\n")}(f,u,a.extensions),function(e){var r=[],t;for(t in e){var a=e[t];!1!==a&&r.push("#define "+t+" "+a)}return r.join("\n")}(h)),R=m.createProgram(),U,I;return c instanceof ae.RawShaderMaterial?a=h="":(h=["precision "+u.precision+" float;","precision "+u.precision+" int;","#define SHADER_NAME "+c.__webglShader.name,w,u.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+D,"#define MAX_BONES "+u.maxBones,u.map?"#define USE_MAP":"",u.envMap?"#define USE_ENVMAP":"",u.envMap?"#define "+P:"",u.lightMap?"#define USE_LIGHTMAP":"",u.aoMap?"#define USE_AOMAP":"",u.emissiveMap?"#define USE_EMISSIVEMAP":"",u.bumpMap?"#define USE_BUMPMAP":"",u.normalMap?"#define USE_NORMALMAP":"",u.displacementMap&&u.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",u.specularMap?"#define USE_SPECULARMAP":"",u.roughnessMap?"#define USE_ROUGHNESSMAP":"",u.metalnessMap?"#define USE_METALNESSMAP":"",u.alphaMap?"#define USE_ALPHAMAP":"",u.vertexColors?"#define USE_COLOR":"",u.flatShading?"#define FLAT_SHADED":"",u.skinning?"#define USE_SKINNING":"",u.useVertexTexture?"#define BONE_TEXTURE":"",u.morphTargets?"#define USE_MORPHTARGETS":"",u.morphNormals&&!1===u.flatShading?"#define USE_MORPHNORMALS":"",u.doubleSided?"#define DOUBLE_SIDED":"",u.flipSided?"#define FLIP_SIDED":"",u.shadowMapEnabled?"#define USE_SHADOWMAP":"",u.shadowMapEnabled?"#define "+E:"",0<u.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",u.sizeAttenuation?"#define USE_SIZEATTENUATION":"",u.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",u.logarithmicDepthBuffer&&a.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(l).join("\n"),a=[f,"precision "+u.precision+" float;","precision "+u.precision+" int;","#define SHADER_NAME "+c.__webglShader.name,w,u.alphaTest?"#define ALPHATEST "+u.alphaTest:"","#define GAMMA_FACTOR "+D,u.useFog&&u.fog?"#define USE_FOG":"",u.useFog&&u.fogExp?"#define FOG_EXP2":"",u.map?"#define USE_MAP":"",u.envMap?"#define USE_ENVMAP":"",u.envMap?"#define "+C:"",u.envMap?"#define "+P:"",u.envMap?"#define "+A:"",u.lightMap?"#define USE_LIGHTMAP":"",u.aoMap?"#define USE_AOMAP":"",u.emissiveMap?"#define USE_EMISSIVEMAP":"",u.bumpMap?"#define USE_BUMPMAP":"",u.normalMap?"#define USE_NORMALMAP":"",u.specularMap?"#define USE_SPECULARMAP":"",u.roughnessMap?"#define USE_ROUGHNESSMAP":"",u.metalnessMap?"#define USE_METALNESSMAP":"",u.alphaMap?"#define USE_ALPHAMAP":"",u.vertexColors?"#define USE_COLOR":"",u.flatShading?"#define FLAT_SHADED":"",u.doubleSided?"#define DOUBLE_SIDED":"",u.flipSided?"#define FLIP_SIDED":"",u.shadowMapEnabled?"#define USE_SHADOWMAP":"",u.shadowMapEnabled?"#define "+E:"",0<u.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",u.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",u.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",u.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",u.logarithmicDepthBuffer&&a.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",u.envMap&&a.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",u.toneMapping===ae.NoToneMapping?"":"#define TONE_MAPPING",u.toneMapping===ae.NoToneMapping?"":ae.ShaderChunk.tonemapping_pars_fragment,u.toneMapping===ae.NoToneMapping?"":t("toneMapping",u.toneMapping),u.outputEncoding||u.mapEncoding||u.envMapEncoding||u.emissiveMapEncoding?ae.ShaderChunk.encodings_pars_fragment:"",u.mapEncoding?r("mapTexelToLinear",u.mapEncoding):"",u.envMapEncoding?r("envMapTexelToLinear",u.envMapEncoding):"",u.emissiveMapEncoding?r("emissiveMapTexelToLinear",u.emissiveMapEncoding):"",u.outputEncoding?o("linearToOutputTexel",u.outputEncoding):"","\n"].filter(l).join("\n")),T=e(T=n(T),u),L=e(L=n(L),u),0==c instanceof ae.ShaderMaterial&&(T=void 0,L=void 0),L=a+L,T=ae.WebGLShader(m,m.VERTEX_SHADER,h+T),L=ae.WebGLShader(m,m.FRAGMENT_SHADER,L),m.attachShader(R,T),m.attachShader(R,L),void 0===c.index0AttributeName?!0===u.morphTargets&&m.bindAttribLocation(R,0,"position"):m.bindAttribLocation(R,0,c.index0AttributeName),m.linkProgram(R),u=m.getProgramInfoLog(R),E=m.getShaderInfoLog(T),C=m.getShaderInfoLog(L),A=P=!0,!1===m.getProgramParameter(R,m.LINK_STATUS)?P=!1:""===u&&(""===E||""===C)&&(A=!1),A&&(this.diagnostics={runnable:P,material:c,programLog:u,vertexShader:{log:E,prefix:h},fragmentShader:{log:C,prefix:a}}),m.deleteShader(T),m.deleteShader(L),this.getUniforms=function(){var a={},t=m.getProgramParameter(R,m.ACTIVE_UNIFORMS),e=0;if(void 0===U){for(a,t,e;e<t;e++){var o=m.getActiveUniform(R,e).name,n=m.getUniformLocation(R,o);if(l=/^([\w\d_]+)\.([\w\d_]+)$/.exec(o)){o=l[1];var l=l[2];(p=a[o])||(p=a[o]={}),p[l]=n}else if(l=/^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/.exec(o)){var p=l[1],u=(o=l[2],l=l[3],a[p]);u||(u=a[p]=[]),(p=u[o])||(p=u[o]={}),p[l]=n}else(l=/^([\w\d_]+)\[0\]$/.exec(o))?a[p=l[1]]=n:a[o]=n}U=a}return U},this.getAttributes=function(){var r={},e=m.getProgramParameter(R,m.ACTIVE_ATTRIBUTES),a=0,o;if(void 0===I){for(r,e,a,o;a<e;a++)r[o=m.getActiveAttrib(R,a).name]=m.getAttribLocation(R,o);I=r}return I},this.destroy=function(){},Object.defineProperties(this,{uniforms:{get:function(){}},attributes:{get:function(){}}}),this.id=p++,this.code=i,this.usedTimes=1,this.program=R,this.vertexShader=T,this.fragmentShader=L,this}}(),ae.WebGLPrograms=function(a,s){function t(r,t){var e;return r?r instanceof ae.Texture?e=r.encoding:r instanceof ae.WebGLRenderTarget&&(e=r.texture.encoding):e=ae.LinearEncoding,e===ae.LinearEncoding&&t&&(e=ae.GammaEncoding),e}var o=[],p={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"standard",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},r=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","pointLightShadows","toneMapping","physicallyCorrectLights","shadowMapType","alphaTest","doubleSided","flipSided"];this.getParameters=function(o,d,r,i){var e=p[o.type],n;s.floatVertexTextures&&i&&i.skeleton&&i.skeleton.useVertexTexture?n=1024:(n=Math.floor((s.maxVertexUniforms-20)/4),void 0!==i&&i instanceof ae.SkinnedMesh&&(n=Math.min(i.skeleton.bones.length,n),i.skeleton.bones.length));var c=a.getPrecision();return null!==o.precision&&(c=s.getMaxPrecision(o.precision),o.precision),{shaderID:e,precision:c,supportsVertexTextures:s.vertexTextures,outputEncoding:t(a.getCurrentRenderTarget(),a.gammaOutput),map:!!o.map,mapEncoding:t(o.map,a.gammaInput),envMap:!!o.envMap,envMapMode:o.envMap&&o.envMap.mapping,envMapEncoding:t(o.envMap,a.gammaInput),envMapCubeUV:!!o.envMap&&(o.envMap.mapping===ae.CubeUVReflectionMapping||o.envMap.mapping===ae.CubeUVRefractionMapping),lightMap:!!o.lightMap,aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,emissiveMapEncoding:t(o.emissiveMap,a.gammaInput),bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,displacementMap:!!o.displacementMap,roughnessMap:!!o.roughnessMap,metalnessMap:!!o.metalnessMap,specularMap:!!o.specularMap,alphaMap:!!o.alphaMap,combine:o.combine,vertexColors:o.vertexColors,fog:r,useFog:o.fog,fogExp:r instanceof ae.FogExp2,flatShading:o.shading===ae.FlatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:s.logarithmicDepthBuffer,skinning:o.skinning,maxBones:n,useVertexTexture:s.floatVertexTextures&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:o.morphTargets,morphNormals:o.morphNormals,maxMorphTargets:a.maxMorphTargets,maxMorphNormals:a.maxMorphNormals,numDirLights:d.directional.length,numPointLights:d.point.length,numSpotLights:d.spot.length,numHemiLights:d.hemi.length,pointLightShadows:d.shadowsPointLight,shadowMapEnabled:a.shadowMap.enabled&&i.receiveShadow&&0<d.shadows.length,shadowMapType:a.shadowMap.type,toneMapping:a.toneMapping,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:o.premultipliedAlpha,alphaTest:o.alphaTest,doubleSided:o.side===ae.DoubleSide,flipSided:o.side===ae.BackSide}},this.getProgramCode=function(a,n){var o=[];if(n.shaderID?o.push(n.shaderID):(o.push(a.fragmentShader),o.push(a.vertexShader)),void 0!==a.defines)for(var t in a.defines)o.push(t),o.push(a.defines[t]);for(t=0;t<r.length;t++){var l=r[t];o.push(l),o.push(n[l])}return o.join()},this.acquireProgram=function(i,t,e){var n=0,s=o.length,l,c;for(l,c,n,s;n<s;n++)if((c=o[n]).code===e){++(l=c).usedTimes;break}return void 0===l&&(l=new ae.WebGLProgram(a,e,i,t),o.push(l)),l},this.releaseProgram=function(){},this.programs=o},ae.WebGLProperties=function(){(async()=>{var r={};this.get=function(t){t=t.uuid;var a=r[t];return void 0===a&&(a={},r[t]=a),a},this.delete=function(){},this.clear=function(){}})()},ae.WebGLShader=function(a,o,r){var t=a.createShader(o);return a.shaderSource(t,r),a.compileShader(t),a.getShaderParameter(t,a.COMPILE_STATUS),a.getShaderInfoLog(t),t},ae.WebGLShadowMap=function(a,l,M){var u=a.context,p=a.state,m=new ae.Frustum,d=new ae.Matrix4,h=new ae.Vector2,y=new ae.Vector3,g=new ae.Vector3,_=[],v=[,,,,],o=[,,,,],t=[new ae.Vector3(1,0,0),new ae.Vector3(-1,0,0),new ae.Vector3(0,0,1),new ae.Vector3(0,0,-1),new ae.Vector3(0,1,0),new ae.Vector3(0,-1,0)],e=[new ae.Vector3(0,1,0),new ae.Vector3(0,1,0),new ae.Vector3(0,1,0),new ae.Vector3(0,1,0),new ae.Vector3(0,0,1),new ae.Vector3(0,0,-1)],n=[new ae.Vector4,new ae.Vector4,new ae.Vector4,new ae.Vector4,new ae.Vector4,new ae.Vector4],i=ae.ShaderLib.depthRGBA,r=ae.UniformsUtils.clone(i.uniforms),f=ae.ShaderLib.distanceRGBA,s=ae.UniformsUtils.clone(f.uniforms),c=0;for(u,p,m,d,h,y,g,_,v,o,t,e,n,i,r,f,s,c;4!=c;++c){var T=0!=(1&c),E=0!=(2&c),C=new ae.ShaderMaterial({uniforms:r,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,morphTargets:T,skinning:E});v[c]=C,T=new ae.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:s,vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,morphTargets:T,skinning:E}),o[c]=T}var b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ae.PCFShadowMap,this.cullFace=ae.CullFaceFront,this.render=async function(){var i=l.shadows,r,c;if(0!==i.length&&!1!==b.enabled&&(!1!==b.autoUpdate||!1!==b.needsUpdate)){p.clearColor(1,1,1,1),p.disable(u.BLEND),p.enable(u.CULL_FACE),u.frontFace(u.CCW),u.cullFace(b.cullFace===ae.CullFaceFront?u.FRONT:u.BACK),p.setDepthTest(!0),p.setScissorTest(!1);var v=0,x=i.length;for(v,x;v<x;v++){var T=i[v],S=T.shadow,L=S.camera;if(h.copy(S.mapSize),T instanceof ae.PointLight){r=6,c=!0;var E=h.x,C=h.y;n[0].set(2*E,C,E,C),n[1].set(0,C,E,C),n[2].set(3*E,C,E,C),n[3].set(E,C,E,C),n[4].set(3*E,0,E,C),n[5].set(E,0,E,C),h.x*=4,h.y*=2}else r=1,c=!1;for(null===S.map&&(S.map=new ae.WebGLRenderTarget(h.x,h.y,{minFilter:ae.NearestFilter,magFilter:ae.NearestFilter,format:ae.RGBAFormat}),T instanceof ae.SpotLight&&(L.aspect=h.x/h.y),L.updateProjectionMatrix()),E=S.map,S=S.matrix,g.setFromMatrixPosition(T.matrixWorld),L.position.copy(g),a.setRenderTarget(E),a.clear(),E=0;E<r;E++){c?(y.copy(L.position),y.add(t[E]),L.up.copy(e[E]),L.lookAt(y),p.viewport(n[E])):(y.setFromMatrixPosition(T.target.matrixWorld),L.lookAt(y)),L.updateMatrixWorld(),L.matrixWorldInverse.getInverse(L.matrixWorld),S.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),S.multiply(L.projectionMatrix),S.multiply(L.matrixWorldInverse),d.multiplyMatrices(L.projectionMatrix,L.matrixWorldInverse),m.setFromMatrix(d),_.length=0,C=0;var P=_.length;for(P;C<P;C++){var A=_[C],R=M.update(A),w=R.groups,B=B.materials,I=0,F=w.length;if((B=A.material)instanceof ae.MultiMaterial)for(w,B,I,F;I<F;I++){var G=w[I],V=B[G.materialIndex];!0===V.visible&&(V=void 0,a.renderBufferDirect(L,null,R,V,A,G))}else V=void 0,a.renderBufferDirect(L,null,R,V,A,null)}}}r=a.getClearColor(),c=a.getClearAlpha(),a.setClearColor(r,c),p.enable(u.BLEND),b.cullFace===ae.CullFaceFront&&u.cullFace(u.BACK),b.needsUpdate=!1}}},ae.WebGLState=function(a,t,e){var p=this,i=new ae.Vector4,n=new Uint8Array(16),l=new Uint8Array(16),o=new Uint8Array(16),s={},f=null,h=null,v=null,y=null,A=null,R=null,w=null,U=!1,r=null,d=null,m=null,I=null,F=null,G=null,N=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),k={},V=new ae.Vector4,B=null,z=null,H=new ae.Vector4,X=new ae.Vector4,Y=a.createTexture(),j;a.bindTexture(a.TEXTURE_2D,Y),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR),a.texImage2D(a.TEXTURE_2D,0,a.RGB,1,1,0,a.RGB,a.UNSIGNED_BYTE,new Uint8Array(3)),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(a.DEPTH_TEST),a.depthFunc(a.LEQUAL),a.frontFace(a.CCW),a.cullFace(a.BACK),this.enable(a.CULL_FACE),this.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA)},this.initAttributes=async function(){var r=0,a=n.length;for(r,a;r<a;r++)n[r]=0},this.enableAttribute=async function(e){n[e]=1,0===l[e]&&(a.enableVertexAttribArray(e),l[e]=1),0!==o[e]&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(e,0),o[e]=0)},this.enableAttributeAndDivisor=function(){},this.disableUnusedAttributes=async function(){var t=0,r=l.length;for(t,r;t<r;t++)l[t]!==n[t]&&(a.disableVertexAttribArray(t),l[t]=0)},this.enable=function(e){!0!==s[e]&&(a.enable(e),s[e]=!0)},this.disable=async function(e){!1!==(await s[await e])&&(await a.disable(await e),s[e]=!1)},this.getCompressedTextureFormats=function(){},this.setBlending=async function(o,n,r,i,l,s,c,u){o===ae.NoBlending?this.disable(a.BLEND):this.enable(a.BLEND),(o!==f||u!==U)&&(o===ae.AdditiveBlending?u?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE,a.ONE,a.ONE)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):o===ae.SubtractiveBlending?u?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):o===ae.MultiplyBlending?u?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ZERO,a.ZERO,a.SRC_COLOR,a.SRC_ALPHA)):(a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):u?(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)):(a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),f=o,U=u),o===ae.CustomBlending?(l=l||n,s=s||r,c=c||i,(n!==h||l!==A)&&(a.blendEquationSeparate(e(n),e(l)),h=n,A=l),(r!==v||i!==y||s!==R||c!==w)&&(a.blendFuncSeparate(e(r),e(i),e(s),e(c)),v=r,y=i,R=s,w=c)):w=R=A=y=v=h=null},this.setDepthFunc=function(e){r!==e&&(e?e===ae.NeverDepth?a.depthFunc(a.NEVER):e===ae.AlwaysDepth?a.depthFunc(a.ALWAYS):e===ae.LessDepth?a.depthFunc(a.LESS):e===ae.LessEqualDepth?a.depthFunc(a.LEQUAL):e===ae.EqualDepth?a.depthFunc(a.EQUAL):e===ae.GreaterEqualDepth?a.depthFunc(a.GEQUAL):e===ae.GreaterDepth?a.depthFunc(a.GREATER):e===ae.NotEqualDepth?a.depthFunc(a.NOTEQUAL):a.depthFunc(a.LEQUAL):a.depthFunc(a.LEQUAL),r=e)},this.setDepthTest=async function(t){t?this.enable(a.DEPTH_TEST):this.disable(a.DEPTH_TEST)},this.setDepthWrite=function(t){d!==t&&(a.depthMask(t),d=t)},this.setColorWrite=function(t){m!==t&&(a.colorMask(t,t,t,t),m=t)},this.setStencilFunc=function(){},this.setStencilOp=function(){},this.setStencilTest=function(){},this.setStencilWrite=function(){},this.setFlipSided=function(t){I!==t&&(t?a.frontFace(a.CW):a.frontFace(a.CCW),I=t)},this.setLineWidth=function(){},this.setPolygonOffset=async function(t,e,r){t?this.enable(a.POLYGON_OFFSET_FILL):this.disable(a.POLYGON_OFFSET_FILL),t&&(F!==e||G!==r)&&(a.polygonOffset(e,r),F=e,G=r)},this.getScissorTest=function(){},this.setScissorTest=function(t){t?this.enable(a.SCISSOR_TEST):this.disable(a.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=a.TEXTURE0+N-1),j!==t&&(a.activeTexture(t),j=t)},this.bindTexture=async function(e,o){void 0===j&&p.activeTexture();var r=k[j];void 0===r&&(r={type:void 0,texture:void 0},k[j]=r),(r.type!==e||r.texture!==o)&&(a.bindTexture(e,o||Y),r.type=e,r.texture=o)},this.compressedTexImage2D=function(){},this.texImage2D=async function(){try{a.texImage2D.apply(a,arguments)}catch(e){}},this.clearColor=function(n,t,e,r){i.set(n,t,e,r),!1===V.equals(i)&&(a.clearColor(n,t,e,r),V.copy(i))},this.clearDepth=function(t){B!==t&&(a.clearDepth(t),B=t)},this.clearStencil=function(t){z!==t&&(a.clearStencil(t),z=t)},this.scissor=function(t){!1===H.equals(t)&&(a.scissor(t.x,t.y,t.z,t.w),H.copy(t))},this.viewport=function(t){!1===X.equals(t)&&(a.viewport(t.x,t.y,t.z,t.w),X.copy(t))},this.reset=function(){}},ae.LensFlarePlugin=function(a,m){var h=a.context,_=a.state,e,d,v,o,n,p,x,L,E,P,R,B,H,W,X,Y;this.render=async function(t,r,s){if(0!==m.length){t=new ae.Vector3;var i=s.w/s.z,l=.5*s.z,u=.5*s.w,f=16/s.w,S=new ae.Vector2(f*i,f),y=new ae.Vector3(1,1,0),g=new ae.Vector2(1,1);if(void 0===H){f=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var M=new Uint16Array([0,1,2,0,2,3]);R=h.createBuffer(),B=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,R),h.bufferData(h.ARRAY_BUFFER,f,h.STATIC_DRAW),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,B),h.bufferData(h.ELEMENT_ARRAY_BUFFER,M,h.STATIC_DRAW),X=h.createTexture(),Y=h.createTexture(),_.bindTexture(h.TEXTURE_2D,X),h.texImage2D(h.TEXTURE_2D,0,h.RGB,16,16,0,h.RGB,h.UNSIGNED_BYTE,null),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),_.bindTexture(h.TEXTURE_2D,Y),h.texImage2D(h.TEXTURE_2D,0,h.RGBA,16,16,0,h.RGBA,h.UNSIGNED_BYTE,null),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST),h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST),f=(W=0<h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},M=h.createProgram();var T=h.createShader(h.FRAGMENT_SHADER),b=h.createShader(h.VERTEX_SHADER),C="precision "+a.getPrecision()+" float;\n";h.shaderSource(T,C+f.fragmentShader),h.shaderSource(b,C+f.vertexShader),h.compileShader(T),h.compileShader(b),h.attachShader(M,T),h.attachShader(M,b),h.linkProgram(M),H=M,E=h.getAttribLocation(H,"position"),P=h.getAttribLocation(H,"uv"),e=h.getUniformLocation(H,"renderType"),d=h.getUniformLocation(H,"map"),v=h.getUniformLocation(H,"occlusionMap"),o=h.getUniformLocation(H,"opacity"),n=h.getUniformLocation(H,"color"),p=h.getUniformLocation(H,"scale"),x=h.getUniformLocation(H,"rotation"),L=h.getUniformLocation(H,"screenPosition")}for(h.useProgram(H),_.initAttributes(),_.enableAttribute(E),_.enableAttribute(P),_.disableUnusedAttributes(),h.uniform1i(v,0),h.uniform1i(d,1),h.bindBuffer(h.ARRAY_BUFFER,R),h.vertexAttribPointer(E,2,h.FLOAT,!1,16,0),h.vertexAttribPointer(P,2,h.FLOAT,!1,16,8),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,B),_.disable(h.CULL_FACE),_.setDepthWrite(!1),M=0,T=m.length;M<T;M++)if(f=16/s.w,S.set(f*i,f),b=m[M],t.set(b.matrixWorld.elements[12],b.matrixWorld.elements[13],b.matrixWorld.elements[14]),t.applyMatrix4(r.matrixWorldInverse),t.applyProjection(r.projectionMatrix),y.copy(t),g.x=y.x*l+l,g.y=y.y*u+u,W||0<g.x&&g.x<s.z&&0<g.y&&g.y<s.w){_.activeTexture(h.TEXTURE0),_.bindTexture(h.TEXTURE_2D,null),_.activeTexture(h.TEXTURE1),_.bindTexture(h.TEXTURE_2D,X),h.copyTexImage2D(h.TEXTURE_2D,0,h.RGB,s.x+g.x-8,s.y+g.y-8,16,16,0),h.uniform1i(e,0),h.uniform2f(p,S.x,S.y),h.uniform3f(L,y.x,y.y,y.z),_.disable(h.BLEND),_.enable(h.DEPTH_TEST),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0),_.activeTexture(h.TEXTURE0),_.bindTexture(h.TEXTURE_2D,Y),h.copyTexImage2D(h.TEXTURE_2D,0,h.RGBA,s.x+g.x-8,s.y+g.y-8,16,16,0),h.uniform1i(e,1),_.disable(h.DEPTH_TEST),_.activeTexture(h.TEXTURE1),_.bindTexture(h.TEXTURE_2D,X),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0),b.positionScreen.copy(y),b.customUpdateCallback?b.customUpdateCallback(b):b.updateLensFlares(),h.uniform1i(e,2),_.enable(h.BLEND),C=0;var F=b.lensFlares.length,G;for(G,F;C<F;C++).001<(G=b.lensFlares[C]).opacity&&.001<G.scale&&(y.x=G.x,y.y=G.y,y.z=G.z,f=G.size*G.scale/s.w,S.x=f*i,S.y=f,h.uniform3f(L,y.x,y.y,y.z),h.uniform2f(p,S.x,S.y),h.uniform1f(x,G.rotation),h.uniform1f(o,G.opacity),h.uniform3f(n,G.color.r,G.color.g,G.color.b),_.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst),a.setTexture(G.texture,1),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0))}_.enable(h.CULL_FACE),_.enable(h.DEPTH_TEST),_.setDepthWrite(!0),a.resetGLState()}}},ae.SpritePlugin=function(a,d){function l(){}var u=a.context,s=a.state,i=new ae.Vector3,o=new ae.Quaternion,t=new ae.Vector3,n,c,f,v,x,E,S,H,W,X,Y,j,q,Z,Q,K,J,$,ee,te,re;this.render=function(e,r){if(0!==d.length){if(void 0===te){var p=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),_=new Uint16Array([0,1,2,0,2,3]);$=u.createBuffer(),ee=u.createBuffer(),u.bindBuffer(u.ARRAY_BUFFER,$),u.bufferData(u.ARRAY_BUFFER,p,u.STATIC_DRAW),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,ee),u.bufferData(u.ELEMENT_ARRAY_BUFFER,_,u.STATIC_DRAW),p=u.createProgram(),_=u.createShader(u.VERTEX_SHADER);var y=u.createShader(u.FRAGMENT_SHADER);u.shaderSource(_,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),u.shaderSource(y,["precision "+a.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),u.compileShader(_),u.compileShader(y),u.attachShader(p,_),u.attachShader(p,y),u.linkProgram(p),te=p,K=u.getAttribLocation(te,"position"),J=u.getAttribLocation(te,"uv"),n=u.getUniformLocation(te,"uvOffset"),c=u.getUniformLocation(te,"uvScale"),f=u.getUniformLocation(te,"rotation"),v=u.getUniformLocation(te,"scale"),x=u.getUniformLocation(te,"color"),E=u.getUniformLocation(te,"map"),S=u.getUniformLocation(te,"opacity"),H=u.getUniformLocation(te,"modelViewMatrix"),W=u.getUniformLocation(te,"projectionMatrix"),X=u.getUniformLocation(te,"fogType"),Y=u.getUniformLocation(te,"fogDensity"),j=u.getUniformLocation(te,"fogNear"),q=u.getUniformLocation(te,"fogFar"),Z=u.getUniformLocation(te,"fogColor"),Q=u.getUniformLocation(te,"alphaTest"),(p=document.createElement("canvas")).width=8,p.height=8,(_=p.getContext("2d")).fillStyle="white",_.fillRect(0,0,8,8),(re=new ae.Texture(p)).needsUpdate=!0}u.useProgram(te),s.initAttributes(),s.enableAttribute(K),s.enableAttribute(J),s.disableUnusedAttributes(),s.disable(u.CULL_FACE),s.enable(u.BLEND),u.bindBuffer(u.ARRAY_BUFFER,$),u.vertexAttribPointer(K,2,u.FLOAT,!1,16,0),u.vertexAttribPointer(J,2,u.FLOAT,!1,16,8),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,ee),u.uniformMatrix4fv(W,!1,r.projectionMatrix.elements),s.activeTexture(u.TEXTURE0),u.uniform1i(E,0),_=p=0,(y=e.fog)?(u.uniform3f(Z,y.color.r,y.color.g,y.color.b),y instanceof ae.Fog?(u.uniform1f(j,y.near),u.uniform1f(q,y.far),u.uniform1i(X,1),_=p=1):y instanceof ae.FogExp2&&(u.uniform1f(Y,y.density),u.uniform1i(X,2),_=p=2)):(u.uniform1i(X,0),_=p=0),y=0;var T=d.length;for(T;y<T;y++)(L=d[y]).modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,L.matrixWorld),L.z=-L.modelViewMatrix.elements[14];d.sort(l);var b=[];for(y=0,T=d.length;y<T;y++){var M=(L=d[y]).material,L;u.uniform1f(Q,M.alphaTest),u.uniformMatrix4fv(H,!1,L.modelViewMatrix.elements),L.matrixWorld.decompose(i,o,t),b[0]=t.x,b[1]=t.y,L=0,e.fog&&M.fog&&(L=_),p!==L&&(u.uniform1i(X,L),p=L),null===M.map?(u.uniform2f(n,0,0),u.uniform2f(c,1,1)):(u.uniform2f(n,M.map.offset.x,M.map.offset.y),u.uniform2f(c,M.map.repeat.x,M.map.repeat.y)),u.uniform1f(S,M.opacity),u.uniform3f(x,M.color.r,M.color.g,M.color.b),u.uniform1f(f,M.rotation),u.uniform2fv(v,b),s.setBlending(M.blending,M.blendEquation,M.blendSrc,M.blendDst),s.setDepthTest(M.depthTest),s.setDepthWrite(M.depthWrite),M.map&&M.map.image&&M.map.image.width?a.setTexture(M.map,0):a.setTexture(re,0),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0)}s.enable(u.CULL_FACE),a.resetGLState()}}},Object.defineProperties(ae.Box2.prototype,{empty:{value:function(){}},isIntersectionBox:{value:function(){}}}),Object.defineProperties(ae.Box3.prototype,{empty:{value:function(){}},isIntersectionBox:{value:function(){}},isIntersectionSphere:{value:function(){}}}),Object.defineProperties(ae.Matrix3.prototype,{multiplyVector3:{value:function(){}},multiplyVector3Array:{value:function(){}}}),Object.defineProperties(ae.Matrix4.prototype,{extractPosition:{value:function(){}},setRotationFromQuaternion:{value:function(){}},multiplyVector3:{value:function(){}},multiplyVector4:{value:function(){}},multiplyVector3Array:{value:function(){}},rotateAxis:{value:function(){}},crossVector:{value:function(){}},translate:{value:function(){}},rotateX:{value:function(){}},rotateY:{value:function(){}},rotateZ:{value:function(){}},rotateByAxis:{value:function(){}}}),Object.defineProperties(ae.Plane.prototype,{isIntersectionLine:{value:function(){}}}),Object.defineProperties(ae.Quaternion.prototype,{multiplyVector3:{value:function(){}}}),Object.defineProperties(ae.Ray.prototype,{isIntersectionBox:{value:function(){}},isIntersectionPlane:{value:function(){}},isIntersectionSphere:{value:function(){}}}),Object.defineProperties(ae.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){}},setEulerFromQuaternion:{value:function(){}},getPositionFromMatrix:{value:function(){}},getScaleFromMatrix:{value:function(){}},getColumnFromMatrix:{value:function(){}}}),ae.Face4=function(){},ae.Vertex=function(){},Object.defineProperties(ae.Object3D.prototype,{eulerOrder:{get:function(){},set:function(){}},getChildByName:{value:function(){}},renderDepth:{set:function(){}},translate:{value:function(){}},useQuaternion:{get:function(){},set:function(){}}}),Object.defineProperties(ae,{PointCloud:{value:function(){}},ParticleSystem:{value:function(){}}}),Object.defineProperties(ae.Light.prototype,{onlyShadow:{set:function(){}},shadowCameraFov:{set:function(){}},shadowCameraLeft:{set:function(){}},shadowCameraRight:{set:function(){}},shadowCameraTop:{set:function(){}},shadowCameraBottom:{set:function(){}},shadowCameraNear:{set:function(){}},shadowCameraFar:{set:function(){}},shadowCameraVisible:{set:function(){}},shadowBias:{set:function(){}},shadowDarkness:{set:function(){}},shadowMapWidth:{set:function(){}},shadowMapHeight:{set:function(){}}}),Object.defineProperties(ae.BufferAttribute.prototype,{length:{get:function(){}}}),Object.defineProperties(ae.BufferGeometry.prototype,{drawcalls:{get:function(){}},offsets:{get:function(){}},addIndex:{value:function(){}},addDrawCall:{value:function(){}},clearDrawCalls:{value:function(){}},computeTangents:{value:function(){}},computeOffsets:{value:function(){}}}),Object.defineProperties(ae.Material.prototype,{wrapAround:{get:function(){},set:function(){}},wrapRGB:{get:function(){}}}),Object.defineProperties(ae,{PointCloudMaterial:{value:function(){}},ParticleBasicMaterial:{value:function(){}},ParticleSystemMaterial:{value:function(){}}}),Object.defineProperties(ae.MeshPhongMaterial.prototype,{metal:{get:function(){},set:function(){}}}),Object.defineProperties(ae.ShaderMaterial.prototype,{derivatives:{get:function(){},set:function(){}}}),Object.defineProperties(ae.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){}},supportsHalfFloatTextures:{value:function(){}},supportsStandardDerivatives:{value:function(){}},supportsCompressedTextureS3TC:{value:function(){}},supportsCompressedTexturePVRTC:{value:function(){}},supportsBlendMinMax:{value:function(){}},supportsVertexTextures:{value:function(){}},supportsInstancedArrays:{value:function(){}},enableScissorTest:{value:function(){}},initMaterial:{value:function(){}},addPrePlugin:{value:function(){}},addPostPlugin:{value:function(){}},updateShadowMap:{value:function(){}},shadowMapEnabled:{get:function(){},set:function(){}},shadowMapType:{get:function(){},set:function(){}},shadowMapCullFace:{get:function(){},set:function(){}}}),Object.defineProperties(ae.WebGLRenderTarget.prototype,{wrapS:{get:function(){},set:function(){}},wrapT:{get:function(){},set:function(){}},magFilter:{get:function(){},set:function(){}},minFilter:{get:function(){},set:function(){}},anisotropy:{get:function(){},set:function(){}},offset:{get:function(){},set:function(){}},repeat:{get:function(){},set:function(){}},format:{get:function(){},set:function(){}},type:{get:function(){},set:function(){}},generateMipmaps:{get:function(){},set:function(){}}}),ae.GeometryUtils={merge:function(){},center:function(){}},ae.ImageUtils={crossOrigin:void 0,loadTexture:function(){},loadTextureCube:function(){},loadCompressedTexture:function(){},loadCompressedTextureCube:function(){}},window.onload=ae.Projector=function(){},window.onload=ae.CanvasRenderer=function(){},ae.MeshFaceMaterial=ae.MultiMaterial,ae.CurveUtils={tangentQuadraticBezier:function(){},tangentCubicBezier:function(){},tangentSpline:function(){},interpolate:function(){}},ae.SceneUtils={createMultiMaterialObject:function(){},detach:function(){},attach:function(){}},ae.ShapeUtils={area:function(){},triangulate:function(){},triangulateShape:function(){},isClockWise:function(){},b2:function(){},b3:function(){}},ae.Curve=function(){},ae.Curve.prototype={constructor:ae.Curve,getPoint:function(){},getPointAt:function(){},getPoints:function(){},getSpacedPoints:function(){},getLength:function(){},getLengths:function(){},updateArcLengths:function(){},getUtoTmapping:function(){},getTangent:function(){},getTangentAt:function(){}},ae.Curve.create=function(r,t){return r.prototype=Object.create(ae.Curve.prototype),r.prototype.constructor=r,r.prototype.getPoint=t,r},ae.CurvePath=function(){},ae.CurvePath.prototype=Object.create(ae.Curve.prototype),ae.CurvePath.prototype.constructor=ae.CurvePath,ae.CurvePath.prototype.add=function(){},ae.CurvePath.prototype.closePath=function(){},ae.CurvePath.prototype.getPoint=function(){},ae.CurvePath.prototype.getLength=function(){},ae.CurvePath.prototype.getCurveLengths=function(){},ae.CurvePath.prototype.createPointsGeometry=function(){},ae.CurvePath.prototype.createSpacedPointsGeometry=function(){},ae.CurvePath.prototype.createGeometry=function(){},ae.Font=function(){},ae.Font.prototype={constructor:ae.Font,generateShapes:function(){}},ae.Path=function(){},ae.Path.prototype=Object.create(ae.CurvePath.prototype),ae.Path.prototype.constructor=ae.Path,ae.Path.prototype.fromPoints=function(){},ae.Path.prototype.moveTo=function(){},ae.Path.prototype.lineTo=function(){},ae.Path.prototype.quadraticCurveTo=function(){},ae.Path.prototype.bezierCurveTo=function(){},ae.Path.prototype.splineThru=function(){},ae.Path.prototype.arc=function(){},ae.Path.prototype.absarc=function(){},ae.Path.prototype.ellipse=function(){},ae.Path.prototype.absellipse=function(){},ae.Path.prototype.getSpacedPoints=function(){},ae.Path.prototype.getPoints=function(){},ae.Path.prototype.toShapes=function(){},ae.Shape=function(){},ae.Shape.prototype=Object.create(ae.Path.prototype),ae.Shape.prototype.constructor=ae.Shape,ae.Shape.prototype.extrude=function(){},ae.Shape.prototype.makeGeometry=function(){},ae.Shape.prototype.getPointsHoles=function(){},ae.Shape.prototype.extractAllPoints=function(){},ae.Shape.prototype.extractPoints=function(){},ae.LineCurve=function(){},ae.LineCurve.prototype=Object.create(ae.Curve.prototype),ae.LineCurve.prototype.constructor=ae.LineCurve,ae.LineCurve.prototype.getPoint=function(){},ae.LineCurve.prototype.getPointAt=function(){},ae.LineCurve.prototype.getTangent=function(){},ae.QuadraticBezierCurve=function(){},ae.QuadraticBezierCurve.prototype=Object.create(ae.Curve.prototype),ae.QuadraticBezierCurve.prototype.constructor=ae.QuadraticBezierCurve,ae.QuadraticBezierCurve.prototype.getPoint=function(){},ae.QuadraticBezierCurve.prototype.getTangent=function(){},ae.CubicBezierCurve=function(){},ae.CubicBezierCurve.prototype=Object.create(ae.Curve.prototype),ae.CubicBezierCurve.prototype.constructor=ae.CubicBezierCurve,ae.CubicBezierCurve.prototype.getPoint=function(){},ae.CubicBezierCurve.prototype.getTangent=function(){},ae.SplineCurve=function(){},ae.SplineCurve.prototype=Object.create(ae.Curve.prototype),ae.SplineCurve.prototype.constructor=ae.SplineCurve,ae.SplineCurve.prototype.getPoint=function(){},ae.EllipseCurve=function(){},ae.EllipseCurve.prototype=Object.create(ae.Curve.prototype),ae.EllipseCurve.prototype.constructor=ae.EllipseCurve,ae.EllipseCurve.prototype.getPoint=function(){},ae.ArcCurve=function(){},ae.ArcCurve.prototype=Object.create(ae.EllipseCurve.prototype),ae.ArcCurve.prototype.constructor=ae.ArcCurve,ae.LineCurve3=ae.Curve.create(function(){},function(){}),ae.QuadraticBezierCurve3=ae.Curve.create(function(){},function(){}),ae.CubicBezierCurve3=ae.Curve.create(function(){},function(){}),ae.SplineCurve3=ae.Curve.create(function(){},function(){}),ae.CatmullRomCurve3=function(){function e(){}return new ae.Vector3,new e,new e,new e,e.prototype.init=function(){},e.prototype.initNonuniformCatmullRom=function(){},e.prototype.initCatmullRom=function(){},e.prototype.calc=function(){},ae.Curve.create(function(){},function(){})}(),ae.ClosedSplineCurve3=function(){},ae.ClosedSplineCurve3.prototype=Object.create(ae.CatmullRomCurve3.prototype),ae.BoxGeometry=function(){},ae.BoxGeometry.prototype=Object.create(ae.Geometry.prototype),ae.BoxGeometry.prototype.constructor=ae.BoxGeometry,ae.CubeGeometry=ae.BoxGeometry,ae.BoxBufferGeometry=function(){},ae.BoxBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.BoxBufferGeometry.prototype.constructor=ae.BoxBufferGeometry,ae.CircleGeometry=function(){},ae.CircleGeometry.prototype=Object.create(ae.Geometry.prototype),ae.CircleGeometry.prototype.constructor=ae.CircleGeometry,ae.CircleBufferGeometry=function(){},ae.CircleBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.CircleBufferGeometry.prototype.constructor=ae.CircleBufferGeometry,ae.CylinderBufferGeometry=function(a,m,x,S,M,r,L,E){function i(t){var r,n,l;l=new ae.Vector2;var c=new ae.Vector3,h=!0===t?a:m,x=!0===t?1:-1;for(n=v,r=1;r<=S;r++)y.setXYZ(v,0,e*x,0),u.setXYZ(v,0,x,0),!0===t?(l.x=r/S,l.y=0):(l.x=(r-1)/S,l.y=1),f.setXY(v,l.x,l.y),v++;for(l=v,r=0;r<=S;r++){var M=r/S;c.x=h*Math.sin(M*E+L),c.y=e*x,c.z=h*Math.cos(M*E+L),y.setXYZ(v,c.x,c.y,c.z),u.setXYZ(v,0,x,0),f.setXY(v,M,!0===t?1:0),v++}for(r=0;r<S;r++)c=n+r,h=l+r,!0===t?(g.setX(_,h),_++,g.setX(_,h+1)):(g.setX(_,h+1),_++,g.setX(_,h)),_++,g.setX(_,c),_++}ae.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:a,radiusBottom:m,height:x,radialSegments:S,heightSegments:M,openEnded:r,thetaStart:L,thetaLength:E},a=void 0===a?20:a,m=void 0===m?20:m,x=void 0===x?100:x,S=Math.floor(S)||8,M=Math.floor(M)||1,r=void 0!==r&&r,L=void 0===L?0:L,E=void 0===E?2*Math.PI:E;var l=function(){var t=(S+1)*(M+1);return!1===r&&(t+=2*(S+1)+2*S),t}(),s=function(){var t=6*(S*M);return!1===r&&(t+=6*S),t}(),g=new ae.BufferAttribute(new(65535<s?Uint32Array:Uint16Array)(s),1),y=new ae.BufferAttribute(new Float32Array(3*l),3),u=new ae.BufferAttribute(new Float32Array(3*l),3),f=new ae.BufferAttribute(new Float32Array(2*l),2),v=0,_=0,C=[],e=x/2;(function(){var t=new ae.Vector3,o=new ae.Vector3,n=(m-a)/x,l,c;for(c=0;c<=M;c++){var T=[],P=c/M,A=P*(m-a)+a;for(l=0;l<=S;l++){var h=l/S;o.x=A*Math.sin(h*E+L),o.y=-P*x+e,o.z=A*Math.cos(h*E+L),y.setXYZ(v,o.x,o.y,o.z),t.copy(o),(0===a&&0===c||0===m&&c===M)&&(t.x=Math.sin(h*E+L),t.z=Math.cos(h*E+L)),t.setY(Math.sqrt(t.x*t.x+t.z*t.z)*n).normalize(),u.setXYZ(v,t.x,t.y,t.z),f.setXY(v,h,1-P),T.push(v),v++}C.push(T)}for(l=0;l<S;l++)for(c=0;c<M;c++)t=C[c+1][l],o=C[c+1][l+1],n=C[c][l+1],g.setX(_,C[c][l]),_++,g.setX(_,t),_++,g.setX(_,n),_++,g.setX(_,t),_++,g.setX(_,o),_++,g.setX(_,n),_++})(),!1===r&&(0<a&&i(!0),0<m&&i(!1)),this.setIndex(g),this.addAttribute("position",y),this.addAttribute("normal",u),this.addAttribute("uv",f)},ae.CylinderBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.CylinderBufferGeometry.prototype.constructor=ae.CylinderBufferGeometry,ae.CylinderGeometry=function(a,l,s,o,t,e,n,i){ae.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:l,height:s,radialSegments:o,heightSegments:t,openEnded:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new ae.CylinderBufferGeometry(a,l,s,o,t,e,n,i)),this.mergeVertices()},ae.CylinderGeometry.prototype=Object.create(ae.Geometry.prototype),ae.CylinderGeometry.prototype.constructor=ae.CylinderGeometry,ae.EdgesGeometry=function(){},ae.EdgesGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.EdgesGeometry.prototype.constructor=ae.EdgesGeometry,ae.ExtrudeGeometry=function(){},ae.ExtrudeGeometry.prototype=Object.create(ae.Geometry.prototype),ae.ExtrudeGeometry.prototype.constructor=ae.ExtrudeGeometry,ae.ExtrudeGeometry.prototype.addShapeList=function(){},ae.ExtrudeGeometry.prototype.addShape=function(){},ae.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(){},generateSideWallUV:function(){}},ae.ShapeGeometry=function(){},ae.ShapeGeometry.prototype=Object.create(ae.Geometry.prototype),ae.ShapeGeometry.prototype.constructor=ae.ShapeGeometry,ae.ShapeGeometry.prototype.addShapeList=function(){},ae.ShapeGeometry.prototype.addShape=function(){},ae.LatheBufferGeometry=function(){},ae.LatheBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.LatheBufferGeometry.prototype.constructor=ae.LatheBufferGeometry,ae.LatheGeometry=function(){},ae.LatheGeometry.prototype=Object.create(ae.Geometry.prototype),ae.LatheGeometry.prototype.constructor=ae.LatheGeometry,ae.PlaneGeometry=function(a,o,r,t){(async()=>{ae.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:a,height:o,widthSegments:r,heightSegments:t},await this.fromBufferGeometry(new ae.PlaneBufferGeometry(a,o,r,t))})()},ae.PlaneGeometry.prototype=Object.create(ae.Geometry.prototype),ae.PlaneGeometry.prototype.constructor=ae.PlaneGeometry,ae.PlaneBufferGeometry=function(a,o,i,p){(async()=>{ae.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:a,height:o,widthSegments:i,heightSegments:p};var e=a/2,t=o/2;i=Math.floor(i)||1,p=Math.floor(p)||1;var d=i+1,l=p+1,c=a/i,u=o/p;o=new Float32Array(3*(d*l)),a=new Float32Array(3*(d*l));var _=new Float32Array(2*(d*l)),g=0,h=0,v=0;for(_,g,h,v;v<l;v++)for(var x=v*u-t,M=0;M<d;M++)o[g]=M*c-e,o[g+1]=-x,a[g+2]=1,_[h]=M/i,_[h+1]=1-v/p,g+=3,h+=2;for(g=0,e=new(65535<o.length/3?Uint32Array:Uint16Array)(6*(i*p)),v=0;v<p;v++)for(M=0;M<i;M++)t=M+d*(v+1),l=M+1+d*(v+1),c=M+1+d*v,e[g]=M+d*v,e[g+1]=t,e[g+2]=c,e[g+3]=t,e[g+4]=l,e[g+5]=c,g+=6;this.setIndex(new ae.BufferAttribute(e,1)),this.addAttribute("position",new ae.BufferAttribute(o,3)),this.addAttribute("normal",new ae.BufferAttribute(a,3)),this.addAttribute("uv",new ae.BufferAttribute(_,2))})()},ae.PlaneBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.PlaneBufferGeometry.prototype.constructor=ae.PlaneBufferGeometry,ae.RingBufferGeometry=function(){},ae.RingBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.RingBufferGeometry.prototype.constructor=ae.RingBufferGeometry,ae.RingGeometry=function(){},ae.RingGeometry.prototype=Object.create(ae.Geometry.prototype),ae.RingGeometry.prototype.constructor=ae.RingGeometry,ae.SphereGeometry=function(){},ae.SphereGeometry.prototype=Object.create(ae.Geometry.prototype),ae.SphereGeometry.prototype.constructor=ae.SphereGeometry,ae.SphereBufferGeometry=function(){},ae.SphereBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.SphereBufferGeometry.prototype.constructor=ae.SphereBufferGeometry,ae.TextGeometry=function(){},ae.TextGeometry.prototype=Object.create(ae.ExtrudeGeometry.prototype),ae.TextGeometry.prototype.constructor=ae.TextGeometry,ae.TorusBufferGeometry=function(){},ae.TorusBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.TorusBufferGeometry.prototype.constructor=ae.TorusBufferGeometry,ae.TorusGeometry=function(){},ae.TorusGeometry.prototype=Object.create(ae.Geometry.prototype),ae.TorusGeometry.prototype.constructor=ae.TorusGeometry,ae.TorusKnotBufferGeometry=function(){},ae.TorusKnotBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.TorusKnotBufferGeometry.prototype.constructor=ae.TorusKnotBufferGeometry,ae.TorusKnotGeometry=function(){},ae.TorusKnotGeometry.prototype=Object.create(ae.Geometry.prototype),ae.TorusKnotGeometry.prototype.constructor=ae.TorusKnotGeometry,ae.TubeGeometry=function(){},ae.TubeGeometry.prototype=Object.create(ae.Geometry.prototype),ae.TubeGeometry.prototype.constructor=ae.TubeGeometry,ae.TubeGeometry.NoTaper=function(){},ae.TubeGeometry.SinusoidalTaper=function(){},ae.TubeGeometry.FrenetFrames=function(){},ae.PolyhedronGeometry=function(){},ae.PolyhedronGeometry.prototype=Object.create(ae.Geometry.prototype),ae.PolyhedronGeometry.prototype.constructor=ae.PolyhedronGeometry,ae.DodecahedronGeometry=function(){},ae.DodecahedronGeometry.prototype=Object.create(ae.PolyhedronGeometry.prototype),ae.DodecahedronGeometry.prototype.constructor=ae.DodecahedronGeometry,ae.IcosahedronGeometry=function(){},ae.IcosahedronGeometry.prototype=Object.create(ae.PolyhedronGeometry.prototype),ae.IcosahedronGeometry.prototype.constructor=ae.IcosahedronGeometry,ae.OctahedronGeometry=function(){},ae.OctahedronGeometry.prototype=Object.create(ae.PolyhedronGeometry.prototype),ae.OctahedronGeometry.prototype.constructor=ae.OctahedronGeometry,ae.TetrahedronGeometry=function(){},ae.TetrahedronGeometry.prototype=Object.create(ae.PolyhedronGeometry.prototype),ae.TetrahedronGeometry.prototype.constructor=ae.TetrahedronGeometry,ae.ParametricGeometry=function(){},ae.ParametricGeometry.prototype=Object.create(ae.Geometry.prototype),ae.ParametricGeometry.prototype.constructor=ae.ParametricGeometry,ae.WireframeGeometry=function(){},ae.WireframeGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.WireframeGeometry.prototype.constructor=ae.WireframeGeometry,ae.AxisHelper=function(){},ae.AxisHelper.prototype=Object.create(ae.LineSegments.prototype),ae.AxisHelper.prototype.constructor=ae.AxisHelper,ae.ArrowHelper=async function(){return new ae.Geometry().vertices.push(new ae.Vector3(0,0,0),new ae.Vector3(0,1,0)),new ae.CylinderGeometry(0,.5,1,5,1).translate(0,-.5,0)}(),ae.ArrowHelper.prototype=Object.create(ae.Object3D.prototype),ae.ArrowHelper.prototype.constructor=ae.ArrowHelper,ae.ArrowHelper.prototype.setDirection=new ae.Vector3,ae.ArrowHelper.prototype.setLength=function(){},ae.ArrowHelper.prototype.setColor=function(){},ae.BoxHelper=function(){},ae.BoxHelper.prototype=Object.create(ae.LineSegments.prototype),ae.BoxHelper.prototype.constructor=ae.BoxHelper,ae.BoxHelper.prototype.update=new ae.Box3,ae.BoundingBoxHelper=function(){},ae.BoundingBoxHelper.prototype=Object.create(ae.Mesh.prototype),ae.BoundingBoxHelper.prototype.constructor=ae.BoundingBoxHelper,ae.BoundingBoxHelper.prototype.update=function(){},ae.CameraHelper=function(){},ae.CameraHelper.prototype=Object.create(ae.LineSegments.prototype),ae.CameraHelper.prototype.constructor=ae.CameraHelper,ae.CameraHelper.prototype.update=(new ae.Vector3,new ae.Camera),ae.DirectionalLightHelper=function(){},ae.DirectionalLightHelper.prototype=Object.create(ae.Object3D.prototype),ae.DirectionalLightHelper.prototype.constructor=ae.DirectionalLightHelper,ae.DirectionalLightHelper.prototype.dispose=function(){},ae.DirectionalLightHelper.prototype.update=(new ae.Vector3,new ae.Vector3,new ae.Vector3),ae.EdgesHelper=function(){},ae.EdgesHelper.prototype=Object.create(ae.LineSegments.prototype),ae.EdgesHelper.prototype.constructor=ae.EdgesHelper,ae.FaceNormalsHelper=function(){},ae.FaceNormalsHelper.prototype=Object.create(ae.LineSegments.prototype),ae.FaceNormalsHelper.prototype.constructor=ae.FaceNormalsHelper,ae.FaceNormalsHelper.prototype.update=(new ae.Vector3,new ae.Vector3,new ae.Matrix3),ae.GridHelper=function(){},ae.GridHelper.prototype=Object.create(ae.LineSegments.prototype),ae.GridHelper.prototype.constructor=ae.GridHelper,ae.GridHelper.prototype.setColors=function(){},ae.HemisphereLightHelper=function(){},ae.HemisphereLightHelper.prototype=Object.create(ae.Object3D.prototype),ae.HemisphereLightHelper.prototype.constructor=ae.HemisphereLightHelper,ae.HemisphereLightHelper.prototype.dispose=function(){},ae.HemisphereLightHelper.prototype.update=new ae.Vector3,ae.PointLightHelper=function(){},ae.PointLightHelper.prototype=Object.create(ae.Mesh.prototype),ae.PointLightHelper.prototype.constructor=ae.PointLightHelper,ae.PointLightHelper.prototype.dispose=function(){},ae.PointLightHelper.prototype.update=function(){},ae.SkeletonHelper=function(){},ae.SkeletonHelper.prototype=Object.create(ae.LineSegments.prototype),ae.SkeletonHelper.prototype.constructor=ae.SkeletonHelper,ae.SkeletonHelper.prototype.getBoneList=function(){},ae.SkeletonHelper.prototype.update=function(){},ae.SpotLightHelper=function(){},ae.SpotLightHelper.prototype=Object.create(ae.Object3D.prototype),ae.SpotLightHelper.prototype.constructor=ae.SpotLightHelper,ae.SpotLightHelper.prototype.dispose=function(){},ae.SpotLightHelper.prototype.update=(new ae.Vector3,new ae.Vector3),ae.VertexNormalsHelper=function(){},ae.VertexNormalsHelper.prototype=Object.create(ae.LineSegments.prototype),ae.VertexNormalsHelper.prototype.constructor=ae.VertexNormalsHelper,ae.VertexNormalsHelper.prototype.update=(new ae.Vector3,new ae.Vector3,new ae.Matrix3),ae.WireframeHelper=function(){},ae.WireframeHelper.prototype=Object.create(ae.LineSegments.prototype),ae.WireframeHelper.prototype.constructor=ae.WireframeHelper,ae.ImmediateRenderObject=function(){},ae.ImmediateRenderObject.prototype=Object.create(ae.Object3D.prototype),ae.ImmediateRenderObject.prototype.constructor=ae.ImmediateRenderObject,ae.MorphBlendMesh=function(){},ae.MorphBlendMesh.prototype=Object.create(ae.Mesh.prototype),ae.MorphBlendMesh.prototype.constructor=ae.MorphBlendMesh,ae.MorphBlendMesh.prototype.createAnimation=function(){},ae.MorphBlendMesh.prototype.autoCreateAnimations=function(){},ae.MorphBlendMesh.prototype.setAnimationDirectionForward=function(){},ae.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(){},ae.MorphBlendMesh.prototype.setAnimationFPS=function(){},ae.MorphBlendMesh.prototype.setAnimationDuration=function(){},ae.MorphBlendMesh.prototype.setAnimationWeight=function(){},ae.MorphBlendMesh.prototype.setAnimationTime=function(){},ae.MorphBlendMesh.prototype.getAnimationTime=function(){},ae.MorphBlendMesh.prototype.getAnimationDuration=function(){},ae.MorphBlendMesh.prototype.playAnimation=function(){},ae.MorphBlendMesh.prototype.stopAnimation=function(){},ae.MorphBlendMesh.prototype.update=function(){};var y="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(y._gsQueue||(y._gsQueue=[])).push(function(){var e;y._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,t,i){var n=function(r,t,e){i.call(this,r,t,e),this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=n.prototype.render},l=1e-10,c=i._internals,e=(c.isSelector,c.isArray,n.prototype=i.to({},.1,{}));return n.version="3.6.0",e.constructor=n,e.kill()._gc=!1,n.killTweensOf=n.killDelayedCallsTo=i.killTweensOf,n.getTweensOf=i.getTweensOf,n.lagSmoothing=i.lagSmoothing,n.ticker=i.ticker,n.render=i.render,e.invalidate=function(){},e.updateTo=function(){},e.render=async function(a,u,o){(async()=>{this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var t=this._dirty?this.totalDuration():this._totalDuration,r=this._time,e=this._totalTime,d=this._cycle,n=this._duration,i=this._rawPrevTime,s,m,f,g,_,S,M,T;if(a>=t?(this._totalTime=t,this._cycle=this._repeat,this._yoyo&&0!=(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=n,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(s=!0,m="onComplete",o=o||this._timeline.autoRemoveChildren),0===n&&(this._initted||!this.vars.lazy||o)&&(this._startTime===this._timeline._duration&&(a=0),(0==a||0>i||i===l)&&i!==a&&(o=!0,i>l&&(m="onReverseComplete")),this._rawPrevTime=T=!u||a||i===a?a:l)):1e-7>a?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==e||0===n&&0<i)&&(m="onReverseComplete",s=this._reversed),0>a&&(this._active=!1,0===n&&(this._initted||!this.vars.lazy||o)&&(0<=i&&(o=!0),this._rawPrevTime=T=!u||a||i===a?a:l)),this._initted||(o=!0)):(this._totalTime=this._time=await a,0!==this._repeat&&(g=n+this._repeatDelay,this._cycle=this._totalTime/g>>0,0!==this._cycle&&this._cycle===this._totalTime/g&&this._cycle--,this._time=this._totalTime-this._cycle*g,this._yoyo&&0!=(1&this._cycle)&&(this._time=n-this._time),this._time>n?this._time=n:0>this._time&&(this._time=0)),this._easeType?(_=this._time/n,(1===(S=this._easeType)||3===S&&.5<=_)&&(_=1-_),3===S&&(_*=2),1===(M=this._easePower)?_*=_:2===M?_*=_*_:3===M?_*=_*_*_:4===M&&(_*=_*_*_*_),this.ratio=1===(await S)?1-(await _):2===(await S)?await _:.5>(await this._time)/(await n)?(await _)/2:1-(await _)/2):this.ratio=await this._ease.getRatio((await this._time)/(await n))),r!==this._time||o||d!==this._cycle){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!o&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=r,this._totalTime=e,this._rawPrevTime=i,this._cycle=d,c.lazyTweens.push(this),void(this._lazy=[a,u]);this._time&&!s?this.ratio=this._ease.getRatio(this._time/n):s&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==r&&0<=a&&(this._active=!0),0===e&&(2===this._initted&&0<a&&this._init(),this._startAt&&(0<=a?this._startAt.render(a,u,o):m||(m="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===n)&&(u||this._callback("onStart"))),f=await this._firstPT;f;)f.f?f.t[f.p]((await f.c)*(await this.ratio)+(await f.s)):f.t[f.p]=(await f.c)*(await this.ratio)+(await f.s),f=f._next;this._onUpdate&&(0>a&&this._startAt&&this._startTime&&this._startAt.render(a,u,o),u||(this._totalTime!==e||s)&&this._callback("onUpdate")),this._cycle!==d&&(u||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),m&&(!this._gc||o)&&(0>a&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(a,u,o),s&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!u&&this.vars[m]&&this._callback(m),0===n&&this._rawPrevTime===l&&T!==l&&(this._rawPrevTime=0))}else(await e)!==this._totalTime&&this._onUpdate&&(u||this._callback("onUpdate"))})()},n.to=function(r,t,e){return new n(r,t,e)},n.from=function(){},n.fromTo=function(a,o,r,t){return t.startAt=r,t.immediateRender=0!=t.immediateRender&&0!=r.immediateRender,new n(a,o,t)},n.staggerTo=n.allTo=function(){},n.staggerFrom=n.allFrom=function(){},n.staggerFromTo=n.allFromTo=function(){},n.delayedCall=function(){},n.set=function(){},n.isTweening=function(){},n.getAllTweens=function(){},n.killAll=function(){},n.killChildTweensOf=function(){},n.pauseAll=function(){},n.resumeAll=function(){},n.globalTimeScale=async function(){},e.progress=function(){},e.totalProgress=function(){},e.time=function(){},e.duration=function(){},e.totalDuration=function(e){return arguments.length?-1===this._repeat?this:this.duration((e-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},e.repeat=function(){},e.repeatDelay=function(){},e.yoyo=function(){},n},!0),y._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(a,u,t){var n=function(a){u.call(this,a),this._labels={},this.autoRemoveChildren=!0===this.vars.autoRemoveChildren,this.smoothChildTiming=!0===this.vars.smoothChildTiming,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var r=this.vars,t,i;for(i in r)t=r[i],o(t)&&-1!==t.join("").indexOf("{self}")&&(r[i]=this._swapSelfInParams(t));o(r.tweens)&&this.add(r.tweens,0,r.align,r.stagger)},r=t._internals,e=n._internals={},o=(r.isSelector,r.isArray),i=(r.lazyTweens,r.lazyRender,y._gsDefine.globals,e.pauseCallback=function(){},n.prototype=new u);return n.version="3.6.0",i.constructor=n,i.kill()._gc=i._forcingPlayhead=i._hasPause=!1,i.to=function(){},i.from=function(){},i.fromTo=function(){},i.staggerTo=function(){},i.staggerFrom=function(){},i.staggerFromTo=function(){},i.call=function(){},i.set=function(){},n.exportRoot=function(){},i.add=function(i,l,s,m){var v,y,x,S,M,T;if("number"!=typeof l&&(l=this._parseTimeOrLabel(l,0,!0,i)),!(i instanceof a)){if(i instanceof Array||i&&i.push&&o(i)){for(s=s||"normal",m=m||0,v=l,y=i.length,x=0;y>x;x++)o(S=i[x])&&(S=new n({tweens:S})),this.add(S,v),"string"!=typeof S&&"function"!=typeof S&&("sequence"===s?v=S._startTime+S.totalDuration()/S._timeScale:"start"===s&&(S._startTime-=S.delay())),v+=m;return this._uncache(!0)}if("string"==typeof i)return this.addLabel(i,l);if("function"!=typeof i)throw"Cannot add "+i+" into the timeline; it is not a tween, timeline, function, or string.";i=t.delayedCall(0,i)}if(u.prototype.add.call(this,i,l),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(T=(M=this).rawTime()>i._startTime;M._timeline;)T&&M._timeline.smoothChildTiming?M.totalTime(M._totalTime,!0):M._gc&&M._enabled(!0,!1),M=M._timeline;return this},i.remove=function(){},i._remove=function(){},i.append=function(){},i.insert=i.insertMultiple=function(){},i.appendMultiple=function(){},i.addLabel=function(){},i.addPause=function(){},i.removeLabel=function(){},i.getLabelTime=function(){},i._parseTimeOrLabel=function(){},i.seek=function(){},i.stop=function(){},i.gotoAndPlay=function(){},i.gotoAndStop=function(){},i.render=function(){},i._hasPausedChild=function(){},i.getChildren=function(){},i.getTweensOf=function(){},i.recent=function(){},i._contains=function(){},i.shiftChildren=function(){},i._kill=function(a,o){if(!a&&!o)return this._enabled(!1,!1);var r=o?this.getTweensOf(o):this.getChildren(!0,!0,!1),t=r.length,i=!1;for(r,t,i;-1<--t;)r[t]._kill(a,o)&&(i=!0);return i},i.clear=function(){},i.invalidate=function(){},i._enabled=function(a,t){if(a===this._gc)var r=this._first;for(r;r;)r._enabled(a,!0),r=r._next;return u.prototype._enabled.call(this,a,t)},i.totalTime=function(){this._forcingPlayhead=!0;var e=a.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,e},i.duration=function(e){return arguments.length?(0!==this.duration()&&0!==e&&this.timeScale(this._duration/e),this):(this._dirty&&this.totalDuration(),this._duration)},i.totalDuration=function(r){if(!arguments.length){if(this._dirty){var t=0,a=this._last,l=999999999999,s,p;for(s,p,t,a,l;a;)s=a._prev,a._dirty&&a.totalDuration(),a._startTime>l&&this._sortChildren&&!a._paused?this.add(a,a._startTime-a._delay):l=a._startTime,0>a._startTime&&!a._paused&&(t-=a._startTime,this._timeline.smoothChildTiming&&(this._startTime+=a._startTime/this._timeScale),this.shiftChildren(-a._startTime,!1,-9999999999),l=0),(p=a._startTime+a._totalDuration/a._timeScale)>t&&(t=p),a=s;this._duration=this._totalDuration=t,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==r&&this.timeScale(this._totalDuration/r),this},i.paused=function(){},i.usesFrames=function(){},i.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},n},!0),y._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(a,o,r){var n=function(e){a.call(this,e),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._dirty=!0},d=1e-10,l=o._internals,m=l.lazyTweens,u=l.lazyRender,e=(new r(null,null,1,0),n.prototype=new a);return e.constructor=n,e.kill()._gc=!1,n.version="3.6.0",e.invalidate=function(){},e.addCallback=function(){},e.removeCallback=function(){},e.removePause=function(){},e.tweenTo=function(){},e.tweenFromTo=function(){},e.render=async function(t,a,i){(async()=>{this._gc&&this._enabled(!0,!1);var r=this._dirty?this.totalDuration():this._totalDuration,n=this._duration,o=this._time,s=this._totalTime,p=this._startTime,l=this._timeScale,c=this._rawPrevTime,g=this._paused,f=this._cycle,_,v,y,x,S,M,b;if(t>=r)this._locked||(this._totalTime=r,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(v=!0,x="onComplete",S=!!this._timeline.autoRemoveChildren,0===this._duration&&(0===t||0>c||c===d)&&c!==t&&this._first&&(S=!0,c>d&&(x="onReverseComplete"))),this._rawPrevTime=this._duration||!a||t||this._rawPrevTime===t?t:d,this._yoyo&&0!=(1&this._cycle)?this._time=t=0:(this._time=n,t=n+1e-4);else if(1e-7>t){if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==o||0===n&&c!==d&&(0<c||0>t&&0<=c)&&!this._locked)&&(x="onReverseComplete",v=this._reversed),0>t)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(S=v=!0,x="onReverseComplete"):0<=c&&this._first&&(S=!0),this._rawPrevTime=t;else{if(this._rawPrevTime=n||!a||t||this._rawPrevTime===t?t:d,0===t&&v)for(_=this._first;_&&0===_._startTime;)_._duration||(v=!1),_=_._next;t=0,this._initted||(S=!0)}}else if(0===(await n)&&0>(await c)&&(S=!0),this._time=this._rawPrevTime=t,this._locked||(this._totalTime=await t,0!==this._repeat&&(M=n+this._repeatDelay,this._cycle=(await this._totalTime)/(await M)>>0,0!==this._cycle&&this._cycle===this._totalTime/M&&this._cycle--,this._time=this._totalTime-this._cycle*M,this._yoyo&&0!=(1&this._cycle)&&(this._time=(await n)-(await this._time)),this._time>n?(this._time=n,t=n+1e-4):0>this._time?this._time=t=0:t=this._time)),this._hasPause&&!this._forcingPlayhead&&!a){if((t=this._time)>=o)for(_=this._first;_&&t>=_._startTime&&!b;)_._duration||"isPause"!==_.data||_.ratio||0===_._startTime&&0===this._rawPrevTime||(b=_),_=_._next;else for(_=this._last;_&&_._startTime>=t&&!b;)_._duration||"isPause"===_.data&&0<_._rawPrevTime&&(b=_),_=_._prev;b&&(this._time=t=b._startTime,this._totalTime=t+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==f&&!this._locked){var L=this._yoyo&&0!=(1&f),A=L===(this._yoyo&&0!=(1&this._cycle)),I=this._totalTime,R=this._cycle,F=this._rawPrevTime,B=this._time;if(this._totalTime=f*n,f>this._cycle?L=!L:this._totalTime+=n,this._time=o,this._rawPrevTime=0===n?c-1e-4:c,this._cycle=f,this._locked=!0,o=L?0:n,this.render(o,a,0===n),a||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),A&&(o=L?n+1e-4:-1e-4,this.render(o,!0,!1)),this._locked=!1,this._paused&&!g)return;this._time=B,this._totalTime=I,this._cycle=R,this._rawPrevTime=F}if(this._time!==o&&this._first||i||S||b){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==s&&0<t&&(this._active=!0),0===s&&this.vars.onStart&&0!==this._totalTime&&(a||this._callback("onStart")),this._time>=o)for(_=this._first;_&&(y=_._next,!this._paused||g);)(_._active||_._startTime<=this._time&&!_._paused&&!_._gc)&&(b===_&&this.pause(),_._reversed?_.render((_._dirty?_.totalDuration():_._totalDuration)-(t-_._startTime)*_._timeScale,a,i):_.render((t-_._startTime)*_._timeScale,a,i)),_=y;else for(_=this._last;_&&(y=_._prev,!this._paused||g);){if(_._active||o>=_._startTime&&!_._paused&&!_._gc){if(b===_){for(b=_._prev;b&&b.endTime()>this._time;)b.render(b._reversed?b.totalDuration()-(t-b._startTime)*b._timeScale:(t-b._startTime)*b._timeScale,a,i),b=b._prev;b=null,this.pause()}_._reversed?_.render((_._dirty?_.totalDuration():_._totalDuration)-(t-_._startTime)*_._timeScale,a,i):_.render((t-_._startTime)*_._timeScale,a,i)}_=y}this._onUpdate&&(a||(m.length&&u(),this._callback("onUpdate"))),x&&(this._locked||this._gc||(p===this._startTime||l!==this._timeScale)&&(0===this._time||r>=this.totalDuration())&&(v&&(m.length&&u(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!a&&this.vars[x]&&this._callback(x)))}else s!==this._totalTime&&this._onUpdate&&(a||this._callback("onUpdate"))})()},e.getActive=function(){},e.getLabelAfter=function(){},e.getLabelBefore=function(){},e.getLabelsArray=function(){},e.progress=function(r,t){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!=(1&this._cycle)?1-r:r)+this._cycle*(this._duration+this._repeatDelay),t):this._time/this.duration()},e.totalProgress=function(){},e.totalDuration=function(e){return arguments.length?-1===this._repeat?this:this.duration((e-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(a.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},e.time=function(){},e.repeat=function(){},e.repeatDelay=function(){},e.yoyo=function(){},e.currentLabel=function(){},n},!0),function(){Math.PI,y._gsDefine.globals;var r=y._gsDefine.plugin({propName:"bezier",priority:-1,version:"3.6.0",API:2,global:!0,init:function(){},set:function(){}}),t=r.prototype;r.bezierThrough=function(){},r.cubicToQuadratic=function(){},r._autoCSS=!0,r.quadraticToCubic=function(){},r._cssRegister=function(){},t._roundProps=function(){},t._kill=function(){}}(),y._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],async function(r,a){var i=await function(){r.call(this,"css"),this._overwriteProps.length=0,this.setRatio=i.prototype.setRatio},n=(y._gsDefine.globals,{}),t=i.prototype=new r("css");t.constructor=i,i.version="3.6.0",i.API=2,i.defaultTransformPerspective=0,i.defaultSkewType="compensated",i.defaultSmoothOrigin=!0,t="px",i.suffixMap={top:t,right:t,bottom:t,left:t,width:t,height:t,fontSize:t,padding:t,margin:t,perspective:t,lineHeight:""},Math.PI,Math.PI;var c=document,l=await function(e){return c.createElementNS?c.createElementNS("http://www.w3.org/1999/xhtml",e):c.createElement(e)},o=l("div"),m=(l("img"),i._internals={_specialProps:n}),s=navigator.userAgent,p=(await function(){var r=s.indexOf("Android"),t=l("a");(_=-1!==s.indexOf("Safari")&&-1===s.indexOf("Chrome")&&(-1===r||3<+s.substr(r+8,1)))&&s.substr(s.indexOf("Version/")+8,1),v=-1!==s.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(s)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(s))&&(x=parseFloat(RegExp.$1)),t&&(t.style.cssText="top:1px;opacity:.55;",/^0.55/.test(t.style.opacity))}(),""),f=await function(r,a){var l=(a=a||o).style,i,d;if(void 0!==l[r])return r;for(r=r.charAt(0).toUpperCase()+r.substr(1),i=["O","Moz","ms","Ms","Webkit"],d=5;-1<--d&&void 0===l[i[d]+r];);return 0<=d?((p=3===d?"ms":i[d]).toLowerCase(),p+r):null},g=(c.defaultView&&c.defaultView.getComputedStyle,i.getStyle=function(){},m.convertToPixels=async function(){},m.calculateOffset=function(){}),d=(i.parseColor=function(){},"(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b"),_,v,x;for(t in{aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]})d+="|"+t+"\\b";d=RegExp(d+")","gi"),i.colorStringFilter=function(){},a.defaultStringFilter||(a.defaultStringFilter=i.colorStringFilter);var S=await function(a,o){if(null==a)return function(){};var r=o?(a.match(d)||[""])[0]:"",t=a.split(r).join("").match(/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi)||[];return 0<(a.substr(0,a.indexOf(t[0])),a.charAt(a.length-1),a.indexOf(" "),t.length)&&t[0].replace(/(?:\d|\-\d|\.\d|\-\.\d)+/g,"")},E=function(e){return e=e.split(",")},P=(m._setPluginRatio=function(){},m._parseToProxy=function(){},m.CSSPropTween=function(){}),L=(i.parseComplex=function(){},9);for((t=P.prototype).l=t.pr=0;0<--L;)t["xn"+L]=0,t["xs"+L]="";t.xs0="",t._next=t._prev=t.xfirst=t.data=t.plugin=t.setRatio=t.rxp=null,t.appendXtra=function(){};var A=function(r,t){t=t||{},this.p=t.prefix&&f(r)||r,n[r]=n[this.p]=this,this.format=t.formatter||S(t.defaultValue,t.color,t.collapsible,t.multi),t.parser&&(this.parse=t.parser),this.clrs=t.color,this.multi=t.multi,this.keyword=t.keyword,this.dflt=t.defaultValue,this.pr=t.priority||0},F=m._registerComplexSpecialProp=function(r,t,a){"object"!=typeof t&&(t={parser:a});var n=r.split(","),l=t.defaultValue,s;for(a=a||[l],s=0;n.length>s;s++)t.prefix=0===s&&t.prefix,t.defaultValue=a[s]||l,new A(n[s],t)},G=function(e){n[e]||(e.charAt(0).toUpperCase(),e.substr(1),F(e,{}))};(t=A.prototype).parseComplex=function(){},t.parse=function(){},i.registerSpecialProp=function(){},i.useSVGTransformAttr=_||v;var D=f("transform"),w=f("transformOrigin"),N=null!==f("perspective"),R=m.Transform=function(){},U=window.SVGElement,B=c.documentElement;for(async function(){window.addEventListener("DOMContentLoaded",()=>{})}(),m.getTransform=function(){},m.set3DTransformRatio=m.setTransformRatio=function(){},(t=R.prototype).x=t.y=t.z=t.skewX=t.skewY=t.rotation=t.rotationX=t.rotationY=t.zOrigin=t.xPercent=t.yPercent=t.xOffset=t.yOffset=0,t.scaleX=t.scaleY=t.scaleZ=1,F("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(){},prefix:!0}),F("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),F("borderRadius",{defaultValue:"0px",parser:function(){},prefix:!0,formatter:S("0px 0px 0px 0px",!1)}),F("backgroundPosition",{defaultValue:"0 0",parser:function(){},formatter:g}),F("backgroundSize",{defaultValue:"0 0",formatter:g}),F("perspective",{defaultValue:"0px",prefix:!0}),F("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),F("transformStyle",{prefix:!0}),F("backfaceVisibility",{prefix:!0}),F("userSelect",{prefix:!0}),F("margin",{parser:E("marginTop,marginRight,marginBottom,marginLeft")}),F("padding",{parser:E("paddingTop,paddingRight,paddingBottom,paddingLeft")}),F("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(){}}),F("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),F("autoRound,strictUnits",{parser:function(){}}),F("border",{defaultValue:"0px solid #000",parser:function(){},color:!0,formatter:function(){}}),F("borderWidth",{parser:E("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),F("float,cssFloat,styleFloat",{parser:function(){}}),F("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(){}}),F("className",{parser:function(){}}),F("clearProps",{}),L=(t=["bezier","throwProps","physicsProps","physics2D"]).length;L--;)G(t[L]);return(t=i.prototype)._firstPT=t._lastParsedTransform=t._transform=null,t._onInitTween=function(){},t.parse=function(){},t.setRatio=function(){},t._enableTransforms=function(){},t._addLazySet=function(){},t._linkCSSP=function(){},t._kill=function(){},i.cascadeTo=function(){},r.activate([i]),i},!0),(e=y._gsDefine.plugin({propName:"roundProps",version:"3.6.0",priority:-1,API:2,init:function(){}}).prototype)._onInitAllProps=function(){},e._add=function(){},y._gsDefine.plugin({propName:"attr",API:2,version:"3.6.0",init:function(){}}),y._gsDefine.plugin({propName:"directionalRotation",version:"3.6.0",API:2,init:function(){},set:function(){}})._autoCSS=!0,y._gsDefine("easing.Back",["easing.Ease"],async function(a){var t=y.GreenSockGlobals||y,e=t.com.greensock,u=2*Math.PI,m=(Math.PI,e._class),f=function(i,o){var t=m("easing."+i,function(){},!0),e=t.prototype=new a;return e.constructor=t,e.getRatio=o,t},_=a.register||function(){},r=await function(t,e,r,a){var i=m("easing."+t,{easeOut:new e,easeIn:new r,easeInOut:new a},!0);return _(i,t),i},x=await function(r,t,e){this.t=r,this.v=t,e&&(this.next=e,e.prev=this,this.c=e.v-t,this.gap=e.t-r)},o=await function(i,o){var t=m("easing."+i,function(e){this._p1=e||0===e?e:1.70158,this._p2=1.525*this._p1},!0),e=t.prototype=new a;return e.constructor=t,e.getRatio=o,e.config=function(){},t},i=r("Back",o("BackOut",function(){}),o("BackIn",function(){}),o("BackInOut",function(){})),n=m("easing.SlowMo",await function(r,a,o){a=a||0===a?a:.7,null==r?r=.7:1<r&&(r=1),this._p=1===r?0:a,this._p1=(1-r)/2,this._p2=r,this._p3=this._p1+this._p2,this._calcEnd=!0===o},!0),l=n.prototype=new a,g,h,v;return l.constructor=n,l.getRatio=function(){},n.ease=new n(.7,.7),l.config=n.config=function(){},(l=(g=m("easing.SteppedEase",function(e){e=e||1,this._p1=1/e,this._p2=e+1},!0)).prototype=new a).constructor=g,l.getRatio=function(){},l.config=g.config=function(){},h=m("easing.RoughEase",await function(t){var i=(t=t||{}).taper||"none",o=[],n=0,d=0|(t.points||20),l=d,f=!1!==t.randomize,m=!0===t.clamp,g=t.template instanceof a?t.template:null,c="number"==typeof t.strength?.4*t.strength:.4,p,h,y,S,M,T;for(p,h,y,S,M,T,i,o,n,d,l,f,m,g,c;-1<--l;)p=f?Math.random():1/d*l,h=g?g.getRatio(p):p,y="none"===i?c:"out"===i?(S=1-p)*S*c:"in"===i?p*p*c:.5>p?.5*(S=2*p)*S*c:.5*(S=2*(1-p))*S*c,f?h+=Math.random()*y-.5*y:l%2?h+=.5*y:h-=.5*y,m&&(1<h?h=1:0>h&&(h=0)),o[n++]={x:p,y:h};for(o.sort(function(r,t){return r.x-t.x}),T=new x(1,1,null),l=d;-1<--l;)M=o[l],T=new x(M.x,M.y,T);this._prev=new x(0,0,0===T.t?T.next:T)},!0),(l=h.prototype=new a).constructor=h,l.getRatio=function(){},l.config=function(){},h.ease=new h,r("Bounce",f("BounceOut",function(){}),f("BounceIn",function(){}),f("BounceInOut",function(){})),r("Circ",f("CircOut",function(){}),f("CircIn",function(){}),f("CircInOut",function(){})),r("Elastic",(v=function(r,t,l){var e=m("easing."+r,function(t,e){this._p1=1<=t?t:1,this._p2=(e||l)/(1>t?t:1),this._p3=this._p2/u*(Math.asin(1/this._p1)||0),this._p2=u/this._p2},!0),o=e.prototype=new a;return o.constructor=e,o.getRatio=t,o.config=function(){},e})("ElasticOut",function(){},.3),v("ElasticIn",function(){},.3),v("ElasticInOut",function(){},.45)),r("Expo",f("ExpoOut",function(){}),f("ExpoIn",function(){}),f("ExpoInOut",function(){})),r("Sine",f("SineOut",function(){}),f("SineIn",function(){}),f("SineInOut",function(){})),m("easing.EaseLookup",{find:function(){}},!0),_(t.SlowMo,"SlowMo","ease,"),_(h,"RoughEase","ease,"),_(g,"SteppedEase","ease,"),i},!0)}),y._gsDefine&&y._gsQueue.pop()(),async function(a){var d=a.GreenSockGlobals=a.GreenSockGlobals||a;if(!d.TweenLite){var i=function(e){var r=e.split("."),t=d,a;for(a=0;r.length>a;a++)t[r[a]]=t=t[r[a]]||{};return t},g=i("com.greensock"),T=1e-10,e=function(){},v=function(){var r=Object.prototype.toString,t=r.call([]);return function(e){return null!=e&&(e instanceof Array||"object"==typeof e&&!!e.push&&r.call(e)===t)}}(),m={},c=function(e,r,l,t){this.sc=m[e]?m[e].sc:[],m[e]=this,this.gsClass=null,this.func=l;var n=[];this.check=function(o){var s=r.length,g=s,_,v,x,M,T;for(_,v,x,M,T,s,g;-1<--s;)(_=m[r[s]]||new c(r[s],[])).gsClass?(n[s]=_.gsClass,g--):o&&_.sc.push(this);if(0===g&&l)for(x=(v=("com.greensock."+e).split(".")).pop(),M=i(v.join("."))[x]=this.gsClass=l.apply(l,n),t&&(d[x]=M,!(T="undefined"!=typeof module&&module.exports)&&"function"==typeof define&&define.amd?define((a.GreenSockAMDPath?a.GreenSockAMDPath+"/":"")+e.split(".").pop(),[],function(){}):"TweenMax"===e&&T&&(module.exports=M)),s=0;this.sc.length>s;s++)this.sc[s].check()},this.check(!0)},r=a._gsDefine=function(a,o,r,t){return new c(a,o,r,t)},L=g._class=function(a,e,o){return e=e||function(){},r(a,[],function(){return e},o),e},t,o,n,p,_;r.globals=d;var l=[0,0,1,1],S=L("easing.Ease",function(a,o,r,t){this._func=a,this._type=r||0,this._power=t||0,this._params=o?l.concat(o):l},!0),C=S.map={},E=S.register=function(t,r,a,i){for(var e=r.split(","),n=e.length,l=(a||"easeIn,easeOut,easeInOut").split(","),s,p,c,u;-1<--n;)for(p=e[n],s=i?L("easing."+p,null,!0):g.easing[p]||{},c=l.length;-1<--c;)u=l[c],C[p+"."+u]=C[u+p]=s[u]=t.getRatio?t:t[u]||new t};for((n=S.prototype)._calcEnd=!1,n.getRatio=function(a){if(this._func)return this._params[0]=a,this._func.apply(null,this._params);var o=this._type,r=this._power,t=1===o?1-a:2===o?a:.5>a?2*a:2*(1-a);return 1===r?t*=t:2===r?t*=t*t:3===r?t*=t*t*t:4===r&&(t*=t*t*t*t),1===o?1-t:2===o?t:.5>a?t/2:1-t/2},o=(t=["Linear","Quad","Cubic","Quart","Quint,Strong"]).length;-1<--o;)n=t[o]+",Power"+o,E(new S(null,null,1,o),n,"easeOut",!0),E(new S(null,null,2,o),n,"easeIn"+(0===o?",easeNone":"")),E(new S(null,null,3,o),n,"easeInOut");C.linear=g.easing.Linear.easeIn,C.swing=g.easing.Quad.easeInOut;var f=L("events.EventDispatcher",function(e){this._listeners={},this._eventTarget=e||this});(n=f.prototype).addEventListener=function(r,t,e,a,i){i=i||0;var n=this._listeners[r],l=0,d,m;for(null==n&&(this._listeners[r]=n=[]),m=n.length;-1<--m;)(d=n[m]).c===t&&d.s===e?n.splice(m,1):0===l&&i>d.pr&&(l=m+1);n.splice(l,0,{c:t,s:e,up:a,pr:i}),this!==p||_||p.wake()},n.removeEventListener=function(){},n.dispatchEvent=async function(e){var r=await this._listeners[await e],t,a,i;if(await r)for(t=await r.length,a=await this._eventTarget;-1<(await--t);)i=await r[await t],(await i)&&((await i.up)?await i.c.call((await i.s)||(await a),{type:await e,target:await a}):await i.c.call((await i.s)||(await a)))};var b=a.window.requestAnimationFrame,P=a.cancelAnimationFrame,R=Date.now||async function(){},A=R();for(o=(t=["ms","moz","webkit","o"]).length;-1<--o&&!b;)P=(await a[(await t[await o])+"CancelAnimationFrame"])||(await a[(await t[await o])+"CancelRequestAnimationFrame"]);L("Ticker",function(a,o){var s=this,d=R(),i=!1!==o&&b,c=async function(r){var a=R()-A,o,i;500<a&&(d+=a-33),A+=a,s.time=(A-d)/1e3,o=s.time-x,(!t||0<o||!0===r)&&(s.frame++,x+=o+(o>=y?4e-6:y-o),i=!0),!0!==r&&(g=u(c)),i&&s.dispatchEvent("tick")},t,u,g,y,x;s.time=s.frame=0,f.call(s),window.onload=s.tick=async function(){},s.lagSmoothing=async function(){},s.sleep=async function(){null!=g&&(i&&P?P(g):clearTimeout(g),u=await e,g=null,s===p&&(_=!1))},s.wake=async function(){null===g?10<s.frame&&(A=(await R())-500+5):s.sleep(),u=0===t?e:i&&b?b:async function(){},s===(await p)&&(_=!0),c(2)},s.fps=async function(r){return arguments.length?(y=1/((t=await r)||60),x=(await this.time)+(await y),void s.wake()):t},s.useRAF=async function(){},s.fps(a),setTimeout(async function(){(await i)&&5>(await s.frame)&&(await s.useRAF(!1))},1500)}),(n=g.Ticker.prototype=new g.events.EventDispatcher).constructor=g.Ticker;var B=L("core.Animation",function(r,t){if(this.vars=t=t||{},this._duration=this._totalDuration=r||0,this._delay=+t.delay||0,this._timeScale=1,this._active=!0===t.immediateRender,this.data=t.data,this._reversed=!0===t.reversed,Z){_||p.wake();var a=this.vars.useFrames?q:Z;a.add(this,a._time),this.vars.paused&&this.paused(!0)}});p=B.ticker=new g.Ticker,(n=B.prototype)._dirty=n._gc=n._initted=n._paused=!1,n._totalTime=n._time=0,n._rawPrevTime=-1,n._next=n._last=n._onUpdate=n._timeline=n.timeline=null,n._paused=!1;var G=async function(){_&&2e3<R()-A&&p.wake(),setTimeout(G,2e3)};G(),n.play=async function(){},n.pause=function(){},n.resume=function(){},n.seek=async function(){},n.restart=async function(){},n.reverse=async function(){},n.render=async function(){},n.invalidate=async function(){},n.isActive=async function(){var r=this._timeline,e=this._startTime,a;return!r||!this._gc&&!this._paused&&r.isActive()&&(a=r.rawTime())>=e&&e+this.totalDuration()/this._timeScale>a},n._enabled=async function(r,t){return _||p.wake(),this._gc=!r,this._active=this.isActive(),!0!==t&&(r&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!r&&this.timeline&&this._timeline._remove(this,!0)),!1},n._kill=function(){return this._enabled(!1,!1)},n.kill=function(r,t){return this._kill(r,t),this},n._uncache=async function(r){var t=r?this:this.timeline;for(t;t;)t._dirty=!0,t=t.timeline;return this},n._swapSelfInParams=async function(){},n._callback=async function(){},n.eventCallback=async function(){},n.delay=async function(){},n.duration=function(){},n.totalDuration=function(){},n.time=async function(){},n.totalTime=function(e,a,o){if(_||p.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>e&&!o&&(e+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var i=this._totalDuration,r=this._timeline;if(e>i&&!o&&(e=i),this._startTime=(this._paused?this._pauseTime:r._time)-(this._reversed?i-e:e)/this._timeScale,r._dirty||this._uncache(!1),r._timeline)for(;r._timeline;)r._timeline._time!==(r._startTime+r._totalTime)/r._timeScale&&r.totalTime(r._totalTime,!0),r=r._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==e||0===this._duration)&&(V.length&&J(),this.render(e,a,!1),V.length&&J())}return this},n.progress=n.totalProgress=function(){},n.startTime=function(){},n.endTime=function(){},n.timeScale=function(e){if(!arguments.length)return this._timeScale;if(e=e||T,this._timeline&&this._timeline.smoothChildTiming){var a=this._pauseTime,r=a||0===a?a:this._timeline.totalTime();this._startTime=r-(r-this._startTime)*this._timeScale/e}return this._timeScale=e,this._uncache(!1)},n.reversed=async function(){},n.paused=function(){};var w=L("core.SimpleTimeline",function(e){B.call(this,0,e),this.autoRemoveChildren=this.smoothChildTiming=!0});(n=w.prototype=new B).constructor=w,n.kill()._gc=!1,n._first=n._last=n._recent=null,n._sortChildren=!1,n.add=n.insert=function(r,t){var e,a;if(r._startTime=+(t||0)+r._delay,r._paused&&this!==r._timeline&&(r._pauseTime=r._startTime+(this.rawTime()-r._startTime)/r._timeScale),r.timeline&&r.timeline._remove(r,!0),r.timeline=r._timeline=this,r._gc&&r._enabled(!0,!0),e=this._last,this._sortChildren)for(a=r._startTime;e&&e._startTime>a;)e=e._prev;return e?(r._next=e._next,e._next=r):(r._next=this._first,this._first=r),r._next?r._next._prev=r:this._last=r,r._prev=e,this._recent=r,this._timeline&&this._uncache(!0),this},n._remove=function(r,t){return r.timeline===this&&(t||r._enabled(!1,!0),r._prev?r._prev._next=r._next:this._first===r&&(this._first=r._next),r._next?r._next._prev=r._prev:this._last===r&&(this._last=r._prev),r._next=r._prev=r.timeline=null,r===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},n.render=async function(a,o,r){var t=await this._first,i;for(this._totalTime=this._time=this._rawPrevTime=await a;t;)i=await t._next,((await t._active)||a>=(await t._startTime)&&(await!t._paused))&&((await t._reversed)?await t.render(((await t._dirty)?await t.totalDuration():await t._totalDuration)-((await a)-(await t._startTime))*(await t._timeScale),o,r):await t.render(((await a)-(await t._startTime))*(await t._timeScale),o,r)),t=await i},n.rawTime=function(){return _||p.wake(),this._totalTime};var I=L("TweenLite",function(t,n,r){if(B.call(this,n,r),this.render=I.prototype.render,null==t)throw"Cannot tween a null target.";this.target=t="string"==typeof t&&I.selector(t)||t;var l=t.jquery||t.length&&t!==a&&t[0]&&(t[0]===a||t[0].nodeType&&t[0].style&&!t.nodeType),o=this.vars.overwrite,p,c,u;if(this._overwrite=o=null==o?j[I.defaultOverwrite]:"number"==typeof o?o>>0:j[o],(l||t instanceof Array||t.push&&v(t))&&"number"!=typeof t[0])for(this._targets=u=void 0,this._propLookup=[],this._siblings=[],p=0;u.length>p;p++)(c=u[p])?"string"==typeof c?"string"==typeof(c=u[p--]=I.selector(c))&&u.splice(p+1,1):c.length&&c!==a&&c[0]&&(c[0]===a||c[0].nodeType&&c[0].style&&!c.nodeType)?(u.splice(p--,1),this._targets=u=u.concat(void 0)):(this._siblings[p]=$(c,this,!1),1===o&&1<this._siblings[p].length&&ee(c,this,null,1,this._siblings[p])):u.splice(p--,1);else this._propLookup={},this._siblings=$(t,this,!1),1===o&&1<this._siblings.length&&ee(t,this,null,1,this._siblings);(this.vars.immediateRender||0===n&&0===this._delay&&!1!==this.vars.immediateRender)&&(this._time=-T,this.render(-this._delay))},!0),N=function(t){return t&&t.length&&t!==a&&t[0]&&(t[0]===a||t[0].nodeType&&t[0].style&&!t.nodeType)};(n=I.prototype=new B).constructor=I,n.kill()._gc=!1,n.ratio=0,n._firstPT=n._targets=n._overwrittenProps=n._startAt=null,n._notifyPluginsOfEnabled=n._lazy=!1,I.version="3.6.0",I.defaultEase=n._ease=new S(null,null,1,1),I.defaultOverwrite="auto",I.ticker=p,I.autoSleep=120,I.lagSmoothing=function(){},I.selector=a.$||a.jQuery||function(){};var V=[],U={},O=function(a,l,s,t,e,n,i,o){var r="get"===s?a[l]:s,p=typeof a[l],u="string"==typeof t&&"="===t.charAt(1),m={t:a,p:l,s:r,f:"function"==p,pg:0,n:e||l,r:n,pr:0,c:u?parseInt(t.charAt(0)+"1",10)*parseFloat(t.substr(2)):parseFloat(t)-r||0},f;return"number"!=p&&("function"===p&&"get"===s&&(f=l.indexOf("set")||"function"!=typeof a["get"+l.substr(3)]?l:"get"+l.substr(3),m.s=r=i?a[f](i):a[f]()),"string"==typeof r&&(i||isNaN(r))?(m.fp=i,m={t:void(o||I.defaultStringFilter),p:"setRatio",s:0,c:1,f:2,pg:0,n:e||l,pr:0}):u||(m.c=parseFloat(t)-parseFloat(r)||0)),m.c?((m._next=this._firstPT)&&(m._next._prev=m),this._firstPT=m,m):void 0},z=I._internals={isArray:v,isSelector:N,lazyTweens:V,blobDif:function(){}},k=I._plugins={},H=z.tweenLookup={},W=0,X=z.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1},j={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},q=B._rootFramesTimeline=new w,Z=B._rootTimeline=new w,Q=30,J=z.lazyRender=function(){var r=V.length,a;for(U={};-1<--r;)(a=V[r])&&!1!==a._lazy&&(a.render(a._lazy[0],a._lazy[1],!0),a._lazy=!1);V.length=0};Z._startTime=p.time,q._startTime=p.frame,Z._active=q._active=!0,setTimeout(J,1),B._updateRoot=I.render=async function(){var r,a,o;if((await V.length)&&(await J()),await Z.render(((await p.time)-(await Z._startTime))*(await Z._timeScale),!1,!1),await q.render(((await p.frame)-(await q._startTime))*(await q._timeScale),!1,!1),(await V.length)&&(await J()),p.frame>=(await Q)){for(o in Q=(await p.frame)+(parseInt(await I.autoSleep,10)||120),H){for(r=(a=await H[await o].tweens).length;-1<--r;)(await a[await r]._gc)&&(await a.splice(await r,1));0===(await a.length)&&delete H[await o]}if((!(o=await Z._first)||(await o._paused))&&(await I.autoSleep)&&(await!q._first)&&1===(await p._listeners.tick.length)){for(;o&&o._paused;)o=await o._next;o||p.sleep()}}},p.addEventListener("tick",B._updateRoot);var $=function(a,r,o){var t=a._gsTweenID,i,l;if(H[t||(a._gsTweenID=t="t"+W++)]||(H[t]={target:a,tweens:[]}),r&&((i=H[t].tweens)[l=i.length]=r,o))for(;-1<--l;)i[l]===r&&i.splice(l,1);return H[t].tweens},ee=function(e,a,i,o,r){var n,l,s,p;if(1===o||4<=o){for(p=r.length,n=0;p>n;n++)if((s=r[n])!==a)s._gc||s._kill(null,e,a)&&(l=!0);else if(5===o)break;return l}var d=a._startTime+T,u=[],g=0,_=0===a._duration,v;for(n=r.length;-1<--n;)(s=r[n])===a||s._gc||s._paused||(s._timeline===a._timeline?d>=s._startTime&&s._startTime+s.totalDuration()/s._timeScale>d&&((_||!s._initted)&&2e-10>=d-s._startTime||(u[g++]=s)):(v=v||te(a,0,_),0===te(s,v,_)&&(u[g++]=s)));for(n=g;-1<--n;)if(s=u[n],2===o&&s._kill(i,e,a)&&(l=!0),2!==o||!s._firstPT&&s._initted){if(2!==o)continue;s._enabled(!1,!1)&&(l=!0)}return l},te=function(){};n._init=function(){var a=this.vars,o=this._overwrittenProps,t=this._duration,r=!!a.immediateRender,i=a.ease,s,p,d,f,_;if(a.startAt){for(f in this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),_={},a.startAt)_[f]=a.startAt[f];if(_.overwrite=!1,_.immediateRender=!0,_.lazy=r&&!1!==a.lazy,_.startAt=_.delay=null,this._startAt=I.to(this.target,0,_),r)if(0<this._time)this._startAt=null;else if(0!==t)return}else if(a.runBackwards&&0!==t)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{for(f in 0!==this._time&&(r=!1),d={},a)X[f]&&"autoCSS"!==f||(d[f]=a[f]);if(d.overwrite=0,d.data="isFromStart",d.lazy=r&&!1!==a.lazy,d.immediateRender=r,this._startAt=I.to(this.target,0,d),!r)this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null);else if(0===this._time)return}if(this._ease=i=i?i instanceof S?i:"function"==typeof i?new S(i,a.easeParams):C[i]||I.defaultEase:I.defaultEase,a.easeParams instanceof Array&&i.config&&(this._ease=i.config.apply(i,a.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(s=this._targets.length;-1<--s;)this._initProps(this._targets[s],this._propLookup[s]={},this._siblings[s],o?o[s]:null)&&(p=!0);else p=this._initProps(this.target,this._propLookup,this._siblings,o);if(p&&I._onPluginEvent("_onInitAllProps",this),o&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),a.runBackwards)for(d=this._firstPT;d;)d.s+=d.c,d.c=-d.c,d=d._next;this._onUpdate=a.onUpdate,this._initted=!0},n._initProps=function(t,i,n,e){var o,d,c,u,f,g;if(null==t)return!1;for(o in U[t._gsTweenID]&&J(),this.vars.css||t.style&&t!==a&&t.nodeType&&k.css&&!1!==this.vars.autoCSS&&this.vars,this.vars)if(g=this.vars[o],X[o])g&&(g instanceof Array||g.push&&v(g))&&-1!==g.join("").indexOf("{self}")&&(this.vars[o]=g=this._swapSelfInParams(g,this));else if(k[o]&&(u=new k[o])._onInitTween(t,this.vars[o],this)){for(this._firstPT=f={_next:this._firstPT,t:u,p:"setRatio",s:0,c:1,f:1,n:o,pg:1,pr:u._priority},d=u._overwriteProps.length;-1<--d;)i[u._overwriteProps[d]]=this._firstPT;(u._priority||u._onInitAllProps)&&(c=!0),(u._onDisable||u._onEnable)&&(this._notifyPluginsOfEnabled=!0),f._next&&(f._next._prev=f)}else i[o]=O.call(this,t,o,"get",g,o,0,null,this.vars.stringFilter);return e&&this._kill(e,t)?this._initProps(t,i,n,e):1<this._overwrite&&this._firstPT&&1<n.length&&ee(t,this,i,this._overwrite,n)?(this._kill(i,t),this._initProps(t,i,n,e)):(this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration)&&(U[t._gsTweenID]=!0),c)},n.render=function(e,a,o){var n=this._time,l=this._duration,s=this._rawPrevTime,p,d,c,u;if(e>=l)this._totalTime=this._time=l,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(p=!0,d="onComplete",o=o||this._timeline.autoRemoveChildren),0===l&&(this._initted||!this.vars.lazy||o)&&(this._startTime===this._timeline._duration&&(e=0),(0==e||0>s||s===T&&"isPause"!==this.data)&&s!==e&&(o=!0,s>T&&(d="onReverseComplete")),this._rawPrevTime=u=!a||e||s===e?e:T);else if(1e-7>e)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==n||0===l&&0<s)&&(d="onReverseComplete",p=this._reversed),0>e&&(this._active=!1,0===l&&(this._initted||!this.vars.lazy||o)&&(0<=s&&(s!==T||"isPause"!==this.data)&&(o=!0),this._rawPrevTime=u=!a||e||s===e?e:T)),this._initted||(o=!0);else if(this._totalTime=this._time=e,this._easeType){var m=e/l,f=this._easeType,v=this._easePower;(1===f||3===f&&.5<=m)&&(m=1-m),3===f&&(m*=2),1===v?m*=m:2===v?m*=m*m:3===v?m*=m*m*m:4===v&&(m*=m*m*m*m),this.ratio=1===f?1-m:2===f?m:.5>e/l?m/2:1-m/2}else this.ratio=this._ease.getRatio(e/l);if(this._time!==n||o){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!o&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=n,this._rawPrevTime=s,V.push(this),void(this._lazy=[e,a]);this._time&&!p?this.ratio=this._ease.getRatio(this._time/l):p&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==n&&0<=e&&(this._active=!0),0===n&&(this._startAt&&(0<=e?this._startAt.render(e,a,o):d||(d="_dummyGS")),this.vars.onStart&&(0!==this._time||0===l)&&(a||this._callback("onStart"))),c=this._firstPT;c;)c.f?c.t[c.p](c.c*this.ratio+c.s):c.t[c.p]=c.c*this.ratio+c.s,c=c._next;this._onUpdate&&(0>e&&this._startAt&&-1e-4!==e&&this._startAt.render(e,a,o),a||(this._time!==n||p)&&this._callback("onUpdate")),d&&(!this._gc||o)&&(0>e&&this._startAt&&!this._onUpdate&&-1e-4!==e&&this._startAt.render(e,a,o),p&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!a&&this.vars[d]&&this._callback(d),0===l&&this._rawPrevTime===T&&u!==T&&(this._rawPrevTime=0))}},n._kill=function(a,o,n){if("all"===a&&(a=null),null==a&&(null==o||o===this.target))return this._lazy=!1,this._enabled(!1,!1);o="string"==typeof o?I.selector(o)||o:o||this._targets||this.target;var i=n&&this._time&&n._startTime===this._startTime&&this._timeline===n._timeline,l,s,m,y,x,S,M,T,b;if((v(o)||N(o))&&"number"!=typeof o[0])for(l=o.length;-1<--l;)this._kill(a,o[l],n)&&(S=!0);else{if(this._targets){for(l=this._targets.length;-1<--l;)if(o===this._targets[l]){x=this._propLookup[l]||{},this._overwrittenProps=this._overwrittenProps||[],s=this._overwrittenProps[l]=a?this._overwrittenProps[l]||{}:"all";break}}else{if(o!==this.target)return!1;x=this._propLookup,s=this._overwrittenProps=a?this._overwrittenProps||{}:"all"}if(x){if(M=a||x,T=a!==s&&"all"!==s&&a!==x&&("object"!=typeof a||!a._tempKill),n&&(I.onOverwrite||this.vars.onOverwrite)){for(m in M)x[m]&&(b||(b=[]),b.push(m));if(b||!a)return!1}for(m in M)(y=x[m])&&(i&&(y.f?y.t[y.p](y.s):y.t[y.p]=y.s,S=!0),y.pg&&y.t._kill(M)&&(S=!0),y.pg&&0!==y.t._overwriteProps.length||(y._prev?y._prev._next=y._next:y===this._firstPT&&(this._firstPT=y._next),y._next&&(y._next._prev=y._prev),y._next=y._prev=null),delete x[m]),T&&(s[m]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return S},n.invalidate=function(){},n._enabled=function(e,a){if(_||p.wake(),e&&this._gc){var r=this._targets,o;if(r)for(o=r.length;-1<--o;)this._siblings[o]=$(r[o],this,!0);else this._siblings=$(this.target,this,!0)}return B.prototype._enabled.call(this,e,a),this._notifyPluginsOfEnabled&&this._firstPT&&I._onPluginEvent(e?"_onEnable":"_onDisable",this)},I.to=function(r,t,e){return new I(r,t,e)},I.from=function(){},I.fromTo=function(){},I.delayedCall=function(){},I.set=function(){},I.getTweensOf=function(){},I.killTweensOf=I.killDelayedCallsTo=function(){};var re=L("plugins.TweenPlugin",function(r,t){this._overwriteProps=(r||"").split(","),this._propName=this._overwriteProps[0],this._priority=t||0,this._super=re.prototype},!0);if(n=re.prototype,re.version="3.6.0",re.API=2,n._firstPT=null,n._addTween=O,n.setRatio=function(){},n._kill=function(){},n._roundProps=function(){},I._onPluginEvent=function(){},re.activate=function(r){var t=r.length;for(t;-1<--t;)r[t].API===re.API&&(k[new r[t]()._propName]=r[t]);return!0},r.plugin=function(t){if(!(t&&t.propName&&t.init&&t.API))throw"illegal plugin definition.";var a=t.propName,e=t.priority||0,l=t.overwriteProps,r={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_roundProps",initAll:"_onInitAllProps"},n=L("plugins."+a.charAt(0).toUpperCase()+a.substr(1)+"Plugin",function(){re.call(this,a,e),this._overwriteProps=l||[]},!0===t.global),i=n.prototype=new re(a),s;for(s in i.constructor=n,n.API=t.API,r)"function"==typeof t[s]&&(i[r[s]]=t[s]);return n.version=t.version,re.activate([n]),n},t=a._gsQueue){for(o=0;t.length>o;o++)t[o]();for(n in m)m[n].func||a.console.log("GSAP encountered missing dependency: com.greensock."+n)}_=!1}}("undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window),ae.BAS={},ae.BAS.ShaderChunk={},ae.BAS.ShaderChunk.animation_time="float tDelay = aAnimation.x;\nfloat tDuration = aAnimation.y;\nfloat tTime = clamp(uTime - tDelay, 0.0, tDuration);\nfloat tProgress = ease(tTime, 0.0, 1.0, tDuration);\n",ae.BAS.ShaderChunk["catmull-rom"]="vec3 catmullRom(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t)\n{\n    vec3 v0 = (p2 - p0) * 0.5;\n    vec3 v1 = (p3 - p1) * 0.5;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return vec3((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nvec3 catmullRom(vec3 p0, vec3 p1, vec3 p2, vec3 p3, vec2 c, float t)\n{\n    vec3 v0 = (p2 - p0) * c.x;\n    vec3 v1 = (p3 - p1) * c.y;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return vec3((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nfloat catmullRom(float p0, float p1, float p2, float p3, float t)\n{\n    float v0 = (p2 - p0) * 0.5;\n    float v1 = (p3 - p1) * 0.5;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return float((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nfloat catmullRom(float p0, float p1, float p2, float p3, vec2 c, float t)\n{\n    float v0 = (p2 - p0) * c.x;\n    float v1 = (p3 - p1) * c.y;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return float((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n",ae.BAS.ShaderChunk.cubic_bezier="vec3 cubicBezier(vec3 p0, vec3 c0, vec3 c1, vec3 p1, float t)\n{\n    vec3 tp;\n    float tn = 1.0 - t;\n\n    tp.xyz = tn * tn * tn * p0.xyz + 3.0 * tn * tn * t * c0.xyz + 3.0 * tn * t * t * c1.xyz + t * t * t * p1.xyz;\n\n    return tp;\n}\n",ae.BAS.ShaderChunk.ease_in_cubic="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t*t + b;\n}\n",ae.BAS.ShaderChunk.ease_in_out_cubic="float ease(float t, float b, float c, float d) {\n  if ((t/=d/2.0) < 1.0) return c/2.0*t*t*t + b;\n  return c/2.0*((t-=2.0)*t*t + 2.0) + b;\n}\n",ae.BAS.ShaderChunk.ease_in_quad="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t + b;\n}\n",ae.BAS.ShaderChunk.ease_out_back="float ease(float t, float b, float c, float d) {\n  float s = 1.70158;\n  return c*((t=t/d-1.0)*t*((s+1.0)*t + s) + 1.0) + b;\n}\n\nfloat ease(float t, float b, float c, float d, float s) {\n  return c*((t=t/d-1.0)*t*((s+1.0)*t + s) + 1.0) + b;\n}\n",ae.BAS.ShaderChunk.ease_out_cubic="float ease(float t, float b, float c, float d) {\n  return c*((t=t/d - 1.0)*t*t + 1.0) + b;\n}\n",ae.BAS.ShaderChunk.quaternion_rotation="vec3 rotateVector(vec4 q, vec3 v)\n{\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvec4 quatFromAxisAngle(vec3 axis, float angle)\n{\n    float halfAngle = angle * 0.5;\n    return vec4(axis.xyz * sin(halfAngle), cos(halfAngle));\n}\n",ae.BAS.Utils={separateFaces:async function(r){(async()=>{var e=r.faces.length,a=[],o=0;for(a,o,e;o<e;o++){var i=a.length,p=r.faces[o],d=p.a,n=p.b,s=p.c,m=r.vertices[d],l=r.vertices[n],c=r.vertices[s];a.push(m.clone()),a.push(l.clone()),a.push(c.clone()),p.a=i,p.b=i+1,p.c=i+2}r.vertices=a,delete r.__tmpVertices})()},tessellate:function(){},tessellateRepeat:function(){},subdivide:function(){},computeCentroid:function(){var e=new ae.Vector3;return function(a,i){var o=a.vertices[i.a],r=a.vertices[i.b],n=a.vertices[i.c];return e.x=(o.x+r.x+n.x)/3,e.y=(o.y+r.y+n.y)/3,e.z=(o.z+r.z+n.z)/3,e}}()},ae.BAS.ModelBufferGeometry=async function(e){ae.BufferGeometry.call(this),this.modelGeometry=e,this.faceCount=this.modelGeometry.faces.length,this.vertexCount=this.modelGeometry.vertices.length,this.bufferIndices(),this.bufferPositions()},ae.BAS.ModelBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.BAS.ModelBufferGeometry.prototype.constructor=ae.BAS.ModelBufferGeometry,ae.BAS.ModelBufferGeometry.prototype.bufferIndices=async function(){var t=new Uint32Array(3*this.faceCount);this.setIndex(new ae.BufferAttribute(t,1));var r;for(r,l=0,p=0;l<this.faceCount;l++,p+=3)r=this.modelGeometry.faces[l],t[p]=r.a,t[p+1]=r.b,t[p+2]=r.c},ae.BAS.ModelBufferGeometry.prototype.bufferPositions=function(){},ae.BAS.ModelBufferGeometry.prototype.bufferUVs=async function(){(async()=>{var e=this.createAttribute("uv",2).array;for(p=0,e,p;p<this.faceCount;p++){var t=this.modelGeometry.faces[p],r;r=this.modelGeometry.faceVertexUvs[0][p][0],e[2*t.a]=r.x,e[2*t.a+1]=r.y,r=this.modelGeometry.faceVertexUvs[0][p][1],e[2*t.b]=r.x,e[2*t.b+1]=r.y,r=this.modelGeometry.faceVertexUvs[0][p][2],e[2*t.c]=r.x,e[2*t.c+1]=r.y}})()},ae.BAS.ModelBufferGeometry.prototype.createAttribute=function(a,o){var r=new Float32Array(this.vertexCount*o),t=new ae.BufferAttribute(r,o);return this.addAttribute(a,t),t},ae.BAS.PrefabBufferGeometry=function(){},ae.BAS.PrefabBufferGeometry.prototype=Object.create(ae.BufferGeometry.prototype),ae.BAS.PrefabBufferGeometry.prototype.constructor=ae.BAS.PrefabBufferGeometry,ae.BAS.PrefabBufferGeometry.prototype.bufferIndices=function(){},ae.BAS.PrefabBufferGeometry.prototype.bufferPositions=function(){},ae.BAS.PrefabBufferGeometry.prototype.bufferUvs=function(){},ae.BAS.PrefabBufferGeometry.prototype.computeVertexNormals=function(){},ae.BAS.PrefabBufferGeometry.prototype.createAttribute=function(){},ae.BAS.PrefabBufferGeometry.prototype.setAttribute4=function(){},ae.BAS.PrefabBufferGeometry.prototype.setAttribute3=function(){},ae.BAS.PrefabBufferGeometry.prototype.setAttribute2=function(){},ae.BAS.BaseAnimationMaterial=function(e){ae.ShaderMaterial.call(this),this.shaderFunctions=[],this.shaderParameters=[],this.shaderVertexInit=[],this.shaderTransformNormal=[],this.shaderTransformPosition=[],this.setValues(e)},ae.BAS.BaseAnimationMaterial.prototype=Object.create(ae.ShaderMaterial.prototype),ae.BAS.BaseAnimationMaterial.prototype.constructor=ae.BAS.BaseAnimationMaterial,ae.BAS.BaseAnimationMaterial.prototype._concatVertexShader=function(){},ae.BAS.BaseAnimationMaterial.prototype._concatFunctions=function(){return this.shaderFunctions.join("\n")},ae.BAS.BaseAnimationMaterial.prototype._concatParameters=function(){return this.shaderParameters.join("\n")},ae.BAS.BaseAnimationMaterial.prototype._concatVertexInit=function(){return this.shaderVertexInit.join("\n")},ae.BAS.BaseAnimationMaterial.prototype._concatTransformNormal=function(){return this.shaderTransformNormal.join("\n")},ae.BAS.BaseAnimationMaterial.prototype._concatTransformPosition=function(){return this.shaderTransformPosition.join("\n")},ae.BAS.BaseAnimationMaterial.prototype.setUniformValues=async function(a){for(var o in a)if(o in this.uniforms){var r=this.uniforms[o],t=a[o];switch(r.type){case"c":r.value.set(t);break;case"v2":case"v3":case"v4":r.value.copy(t);break;case"f":case"t":default:r.value=t;}}},ae.BAS.BasicAnimationMaterial=function(r,t){ae.BAS.BaseAnimationMaterial.call(this,r);var e=ae.ShaderLib.basic;this.uniforms=ae.UniformsUtils.merge([e.uniforms,this.uniforms]),this.lights=!1,this.vertexShader=this._concatVertexShader(),this.fragmentShader=e.fragmentShader,t.map&&(this.defines.USE_MAP=""),t.normalMap&&(this.defines.USE_NORMALMAP=""),this.setUniformValues(t)},ae.BAS.BasicAnimationMaterial.prototype=Object.create(ae.BAS.BaseAnimationMaterial.prototype),ae.BAS.BasicAnimationMaterial.prototype.constructor=ae.BAS.BasicAnimationMaterial,ae.BAS.BasicAnimationMaterial.prototype._concatVertexShader=function(){return[ae.ShaderChunk.common,ae.ShaderChunk.uv_pars_vertex,ae.ShaderChunk.uv2_pars_vertex,ae.ShaderChunk.envmap_pars_vertex,ae.ShaderChunk.color_pars_vertex,ae.ShaderChunk.morphtarget_pars_vertex,ae.ShaderChunk.skinning_pars_vertex,ae.ShaderChunk.logdepthbuf_pars_vertex,this._concatFunctions(),this._concatParameters(),"void main() {",this._concatVertexInit(),ae.ShaderChunk.uv_vertex,ae.ShaderChunk.uv2_vertex,ae.ShaderChunk.color_vertex,ae.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",ae.ShaderChunk.beginnormal_vertex,this._concatTransformNormal(),ae.ShaderChunk.morphnormal_vertex,ae.ShaderChunk.skinnormal_vertex,ae.ShaderChunk.defaultnormal_vertex,"\t#endif",ae.ShaderChunk.begin_vertex,this._concatTransformPosition(),ae.ShaderChunk.morphtarget_vertex,ae.ShaderChunk.skinning_vertex,ae.ShaderChunk.project_vertex,ae.ShaderChunk.logdepthbuf_vertex,ae.ShaderChunk.worldpos_vertex,ae.ShaderChunk.envmap_vertex,"}"].join("\n")},ae.BAS.PhongAnimationMaterial=function(){},ae.BAS.PhongAnimationMaterial.prototype=Object.create(ae.BAS.BaseAnimationMaterial.prototype),ae.BAS.PhongAnimationMaterial.prototype.constructor=ae.BAS.PhongAnimationMaterial,ae.BAS.PhongAnimationMaterial.prototype._concatVertexShader=function(){},window.onload=async function(){ae.Cache.enabled=!0;var i=await new r({createCameraControls:!1,antialias:1===window.devicePixelRatio,fov:30});window.onload=await i.renderer.setClearColor(16777215,1),window.onload=await i.renderer.setPixelRatio((await window.devicePixelRatio)||1),window.onload=await i.camera.position.set(0,0,60);var l=await new a(100,23.3,"out");new ae.ImageLoader().load("/images/banners/banner-v3.webp",async function(t){window.onload=await l.setImage(await t)}),window.onload=await i.scene.add(await l);var n=await new a(100,23.3,"in");new ae.ImageLoader().load("/images/zi/zi.webp",async function(t){window.onload=await n.setImage(await t)}),window.onload=await i.scene.add(await n);var e=await new TimelineMax({repeat:-1,repeatDelay:1,yoyo:!0});window.onload=await e.add(await l.transition(),0),window.onload=await e.add(await n.transition(),0),window.onload=await async function(a,i){async function r(){await TweenMax.to(await a,1,{timeScale:0})}async function t(){await TweenMax.to(await a,1,{timeScale:1})}async function n(o){var t=await a.progress(),e=await ae.Math.clamp((await t)+(await o)*(await i),0,1);await a.progress(await e)}i=i||.001;var l=0,d=!1;window.addEventListener("mousedown",async function(e){d=!0,l=e.clientX,r()}),window.addEventListener("mouseup",async function(){d=!1,t()}),window.addEventListener("mousemove",async function(t){if(!0===d){var e=t.clientX,r=e-l;l=e,n(r)}}),window.addEventListener("touchstart",async function(e){l=e.touches[0].clientX,r()}),window.addEventListener("touchend",async function(){t()}),window.addEventListener("touchmove",async function(t){var e=t.touches[0].clientX,r=e-l;l=e,n(r)})}(await e)},console.log=async function(){},a.prototype=await Object.create(ae.Mesh.prototype),a.prototype.constructor=await a,Object.defineProperty(await a.prototype,"time",{get:function(){return this.material.uniforms.uTime.value},set:async function(e){this.material.uniforms.uTime.value=await e}}),a.prototype.setImage=async function(e){this.material.uniforms.map.value.image=await e,this.material.uniforms.map.value.needsUpdate=!0},a.prototype.transition=async function(){return await TweenMax.fromTo(await this,3,{time:0},{time:this.totalDuration,ease:Power0.easeInOut})},n.prototype=await Object.create(await ae.BAS.ModelBufferGeometry.prototype),n.prototype.constructor=await n,n.prototype.bufferPositions=async function(){(async()=>{var r=await this.createAttribute("position",3).array,t=0;for(r,t;t<this.faceCount;t++){var a=this.modelGeometry.faces[t],n=ae.BAS.Utils.computeCentroid(this.modelGeometry,a),i=this.modelGeometry.vertices[a.a],o=this.modelGeometry.vertices[a.b],l=this.modelGeometry.vertices[a.c];r[3*a.a]=i.x-n.x,r[3*a.a+1]=i.y-n.y,r[3*a.a+2]=i.z-n.z,r[3*a.b]=o.x-n.x,r[3*a.b+1]=o.y-n.y,r[3*a.b+2]=o.z-n.z,r[3*a.c]=l.x-n.x,r[3*a.c+1]=l.y-n.y,r[3*a.c+2]=l.z-n.z}})()};var o=await window.innerWidth,i=await window.innerHeight,c=await document.getElementById("top"),u=await(await c.clientWidth,{extend:function(r,t){for(var e in t)r[e]=t[e];return r},fibSpherePoint:async function(){await Math.PI,await Math.sqrt(5)}()});r.prototype={resize:async function(){(async()=>{window.onload=this.camera.aspect=3.2,window.onload=await this.camera.updateProjectionMatrix(),window.onload=await this.renderer.setSize(await c.clientWidth,.32*(await c.clientWidth))})()},tick:async function(){window.onload=await this.renderer.render(await this.scene,await this.camera),window.onload=await window.requestAnimationFrame(await this.tick)}}})();var l=0,o={},i=new Worker("/timeout-particle-v1.js",{type:"module"});await i.addEventListener("message",async function(r){var e=await r.data,t=await e.id,a=await o[t].fn,i=await o[t].args;await a.apply(null,await i),await delete o[t]}),window.setTimeout=async function(a,e){var n=await Array.prototype.slice.call(arguments,2);l+=1,e=e||0;var s=await l;return o[s]={fn:await a,args:n},await i.postMessage({command:"setTimeout",id:await s,timeout:await e}),await s},window.clearTimeout=async function(t){await i.postMessage({command:"clearTimeout",id:await t}),await delete o[t]}});
