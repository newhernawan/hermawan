window.addEventListener("DOMContentLoaded",async()=>{(async()=>{function t(n,e,a){(async()=>{function i(e){var r=Math.sign(e.y);return v.x=50*se.Math.randFloat(.1,.3),v.y=70*(r*se.Math.randFloat(.1,.3)),v.z=se.Math.randFloatSpread(20),v}function r(e){var r=Math.sign(e.y);return v.x=50*se.Math.randFloat(.3,.6),v.y=70*(-r*se.Math.randFloat(.3,.6)),v.z=se.Math.randFloatSpread(20),v}var f=new se.PlaneGeometry(n,e,2*n,2*e);window.onload=se.BAS.Utils.separateFaces(f);var s=new m(f);window.onload=s.bufferUVs();var p=s.createAttribute("aAnimation",2),d=s.createAttribute("aStartPosition",3),t=s.createAttribute("aControl0",3),u=s.createAttribute("aControl1",3),l=s.createAttribute("aEndPosition",3),c;this.totalDuration=2.335;var g=new se.Vector3,x=new se.Vector3,S=new se.Vector3,h=new se.Vector3,v=new se.Vector3;(async()=>{var o=0,_=0,v=0;for(o,_,v,0;o<s.faceCount;o++,12,_+=6,v+=9){var L=f.faces[o],M=se.BAS.Utils.computeCentroid(f,L),C=se.Math.randFloat(.8,1.2),T=se.Math.mapLinear(M.x,.5*-n,.5*n,0,.9),b;for(b="in"===a?se.Math.mapLinear(Math.abs(M.y),0,.5*e,0,.125):se.Math.mapLinear(Math.abs(M.y),0,.5*e,.125,0),c=0;6>c;c+=2)p.array[_+c]=T+b+.11*Math.random()*C,p.array[_+c+1]=C;for(h.copy(M),g.copy(M),"in"===a?(x.copy(M).sub(i(M)),S.copy(M).sub(r(M))):(x.copy(M).add(i(M)),S.copy(M).add(r(M))),c=0;9>c;c+=3)d.array[v+c]=g.x,d.array[v+c+1]=g.y,d.array[v+c+2]=g.z,t.array[v+c]=x.x,t.array[v+c+1]=x.y,t.array[v+c+2]=x.z,u.array[v+c]=S.x,u.array[v+c+1]=S.y,u.array[v+c+2]=S.z,l.array[v+c]=h.x,l.array[v+c+1]=h.y,l.array[v+c+2]=h.z}})();var y=new se.BAS.BasicAnimationMaterial({shading:se.FlatShading,side:se.DoubleSide,uniforms:{uTime:{type:"f",value:0}},shaderFunctions:[se.BAS.ShaderChunk.cubic_bezier,se.BAS.ShaderChunk.ease_in_out_cubic,se.BAS.ShaderChunk.quaternion_rotation],shaderParameters:["uniform float uTime;","attribute vec2 aAnimation;","attribute vec3 aStartPosition;","attribute vec3 aControl0;","attribute vec3 aControl1;","attribute vec3 aEndPosition;"],shaderVertexInit:["float tDelay = aAnimation.x;","float tDuration = aAnimation.y;","float tTime = clamp(uTime - tDelay, 0.0, tDuration);","float tProgress = ease(tTime, 0.0, 1.0, tDuration);"],shaderTransformPosition:["in"===a?"transformed *= tProgress;":"transformed *= 1.0 - tProgress;","transformed += cubicBezier(aStartPosition, aControl0, aControl1, aEndPosition, tProgress);"]},{map:new se.Texture});window.onload=se.Mesh.call(this,s,y),window.onload=this.frustumCulled=!1,f.dispose(),y.dispose(),s.dispose()})()}function m(t){window.onload=se.BAS.ModelBufferGeometry.call(this,t)}function a(t){t=i.extend({fov:30,zNear:3,zFar:5,createCameraControls:!0},t),window.onload=this.renderer=new se.WebGLRenderer({antialias:t.antialias,alpha:!0}),(async()=>{window.onload=this.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio||1)),window.onload=document.getElementById("three-container").appendChild(this.renderer.domElement),window.onload=this.camera=new se.PerspectiveCamera(t.fov,r/o,t.zNear,t.zfar),window.onload=this.scene=new se.Scene,window.onload=t.createCameraControls&&(this.controls=new se(this.camera,this.renderer.domElement)),window.onload=this.resize=this.resize.bind(this),window.onload=this.tick=this.tick.bind(this),window.onload=this.resize(),window.onload=this.tick(),window.addEventListener("resize",this.resize,!1)})()}var se={REVISION:"R125"},l;"function"==typeof define&&define.amd?define("three",se):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=se),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(){}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){}}),void 0===Object.assign&&Object.defineProperty(Object,"assign",{writable:!0,configurable:!0,value:function(){}}),se.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},se.CullFaceNone=0,se.CullFaceBack=1,se.CullFaceFront=2,se.CullFaceFrontBack=3,se.FrontFaceDirectionCW=0,se.FrontFaceDirectionCCW=1,se.BasicShadowMap=0,se.PCFShadowMap=1,se.PCFSoftShadowMap=2,se.FrontSide=0,se.BackSide=1,se.DoubleSide=2,se.FlatShading=1,se.SmoothShading=2,se.NoColors=0,se.FaceColors=1,se.VertexColors=2,se.NoBlending=0,se.NormalBlending=1,se.AdditiveBlending=2,se.SubtractiveBlending=3,se.MultiplyBlending=4,se.CustomBlending=5,se.AddEquation=100,se.SubtractEquation=101,se.ReverseSubtractEquation=102,se.MinEquation=103,se.MaxEquation=104,se.ZeroFactor=200,se.OneFactor=201,se.SrcColorFactor=202,se.OneMinusSrcColorFactor=203,se.SrcAlphaFactor=204,se.OneMinusSrcAlphaFactor=205,se.DstAlphaFactor=206,se.OneMinusDstAlphaFactor=207,se.DstColorFactor=208,se.OneMinusDstColorFactor=209,se.SrcAlphaSaturateFactor=210,se.NeverDepth=0,se.AlwaysDepth=1,se.LessDepth=2,se.LessEqualDepth=3,se.EqualDepth=4,se.GreaterEqualDepth=5,se.GreaterDepth=6,se.NotEqualDepth=7,se.MultiplyOperation=0,se.MixOperation=1,se.AddOperation=2,se.NoToneMapping=0,se.LinearToneMapping=1,se.ReinhardToneMapping=2,se.Uncharted2ToneMapping=3,se.CineonToneMapping=4,se.UVMapping=300,se.CubeReflectionMapping=301,se.CubeRefractionMapping=302,se.EquirectangularReflectionMapping=303,se.EquirectangularRefractionMapping=304,se.SphericalReflectionMapping=305,se.CubeUVReflectionMapping=306,se.CubeUVRefractionMapping=307,se.RepeatWrapping=1e3,se.ClampToEdgeWrapping=1001,se.MirroredRepeatWrapping=1002,se.NearestFilter=1003,se.NearestMipMapNearestFilter=1004,se.NearestMipMapLinearFilter=1005,se.LinearFilter=1006,se.LinearMipMapNearestFilter=1007,se.LinearMipMapLinearFilter=1008,se.UnsignedByteType=1009,se.ByteType=1010,se.ShortType=1011,se.UnsignedShortType=1012,se.IntType=1013,se.UnsignedIntType=1014,se.FloatType=1015,se.HalfFloatType=1025,se.UnsignedShort4444Type=1016,se.UnsignedShort5551Type=1017,se.UnsignedShort565Type=1018,se.AlphaFormat=1019,se.RGBFormat=1020,se.RGBAFormat=1021,se.LuminanceFormat=1022,se.LuminanceAlphaFormat=1023,se.RGBEFormat=se.RGBAFormat,se.RGB_S3TC_DXT1_Format=2001,se.RGBA_S3TC_DXT1_Format=2002,se.RGBA_S3TC_DXT3_Format=2003,se.RGBA_S3TC_DXT5_Format=2004,se.RGB_PVRTC_4BPPV1_Format=2100,se.RGB_PVRTC_2BPPV1_Format=2101,se.RGBA_PVRTC_4BPPV1_Format=2102,se.RGBA_PVRTC_2BPPV1_Format=2103,se.RGB_ETC1_Format=2151,se.LoopOnce=2200,se.LoopRepeat=2201,se.LoopPingPong=2202,se.InterpolateDiscrete=2300,se.InterpolateLinear=2301,se.InterpolateSmooth=2302,se.ZeroCurvatureEnding=2400,se.ZeroSlopeEnding=2401,se.WrapAroundEnding=2402,se.TrianglesDrawMode=0,se.TriangleStripDrawMode=1,se.TriangleFanDrawMode=2,se.LinearEncoding=3e3,se.sRGBEncoding=3001,se.GammaEncoding=3007,se.RGBEEncoding=3002,se.LogLuvEncoding=3003,se.RGBM7Encoding=3004,se.RGBM16Encoding=3005,se.RGBDEncoding=3006,se.Color=function(t){return 3===arguments.length?this.fromArray(arguments):this.set(t)},se.Color.prototype={constructor:se.Color,r:1,g:1,b:1,set:function(t){return t instanceof se.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(){},setHex:function(t){return t=Math.floor(t),this.r=(255&t>>16)/255,this.g=(255&t>>8)/255,this.b=(255&t)/255,this},setRGB:function(){},setHSL:function(){},setStyle:function(){},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(){},copyGammaToLinear:function(){},copyLinearToGamma:function(){},convertGammaToLinear:function(){},convertLinearToGamma:function(){},getHex:function(){},getHexString:function(){},getHSL:function(){},getStyle:function(){},offsetHSL:function(){},add:function(){},addColors:function(){},addScalar:function(){},multiply:function(){},multiplyScalar:function(){},lerp:function(){},equals:function(){},fromArray:function(){},toArray:function(){}},se.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},se.Quaternion=function(e,a,o,r){this._x=e||0,this._y=a||0,this._z=o||0,this._w=void 0===r?1:r},se.Quaternion.prototype={constructor:se.Quaternion,get x(){return this._x},get y(){return this._y},get z(){return this._z},get w(){return this._w},set:function(){},clone:function(){},copy:function(){},setFromEuler:function(){},setFromAxisAngle:function(){},setFromRotationMatrix:function(){},setFromUnitVectors:function(){},inverse:function(){},conjugate:function(){},dot:function(){},lengthSq:function(){},length:function(){},normalize:function(){},multiply:function(){},multiplyQuaternions:function(){},slerp:function(){},equals:function(){},fromArray:function(){},toArray:function(){},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},Object.assign(se.Quaternion,{slerp:function(){},slerpFlat:function(){}}),se.Vector2=function(e,r){(async()=>{this.x=e||0,this.y=r||0})()},se.Vector2.prototype={constructor:se.Vector2,set:function(){},setScalar:function(){},setX:function(){},setY:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y)},copy:function(){},add:function(){},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(){},subScalar:function(){},subVectors:function(){},multiply:function(){},multiplyScalar:function(){},divide:function(){},divideScalar:function(){},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},clampLength:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){},lengthManhattan:function(){},normalize:function(){},angle:function(){},distanceTo:function(){},distanceToSquared:function(){},setLength:function(){},lerp:function(){},lerpVectors:function(){},equals:function(){},fromArray:function(){},toArray:function(){},fromAttribute:function(){},rotateAround:function(){}},se.Vector3=function(a,r,t){(async()=>{this.x=a||0,this.y=r||0,this.z=t||0})()},se.Vector3.prototype={constructor:se.Vector3,set:function(a,r,t){return this.x=a,this.y=r,this.z=t,this},setScalar:function(){},setX:function(){},setY:function(t){return this.y=t,this},setZ:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(e,r){return void 0===r?(this.x+=e.x,this.y+=e.y,this.z+=e.z,this):this.addVectors(e,r)},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(e,r){return void 0===r?(this.x-=e.x,this.y-=e.y,this.z-=e.z,this):this.subVectors(e,r)},subScalar:function(){},subVectors:function(e,r){return this.x=e.x-r.x,this.y=e.y-r.y,this.z=e.z-r.z,this},multiply:function(){},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):this.z=this.y=this.x=0,this},multiplyVectors:function(){},applyEuler:function(){},applyAxisAngle:function(){},applyMatrix3:function(e){var i=this.x,a=this.y,t=this.z;return e=e.elements,this.x=e[0]*i+e[3]*a+e[6]*t,this.y=e[1]*i+e[4]*a+e[7]*t,this.z=e[2]*i+e[5]*a+e[8]*t,this},applyMatrix4:function(e){var i=this.x,a=this.y,t=this.z;return e=e.elements,this.x=e[0]*i+e[4]*a+e[8]*t+e[12],this.y=e[1]*i+e[5]*a+e[9]*t+e[13],this.z=e[2]*i+e[6]*a+e[10]*t+e[14],this},applyProjection:async function(t){var n=this.x,a=this.y,o=this.z,i=1/((t=t.elements)[3]*n+t[7]*a+t[11]*o+t[15]);return this.x=(t[0]*n+t[4]*a+t[8]*o+t[12])*i,this.y=(t[1]*n+t[5]*a+t[9]*o+t[13])*i,this.z=(t[2]*n+t[6]*a+t[10]*o+t[14])*i,this},applyQuaternion:function(){},project:function(){},unproject:function(){},transformDirection:function(){},divide:function(){},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},clampLength:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){},normalize:function(){return this.divideScalar(this.length())},setLength:function(){},lerp:function(){},lerpVectors:function(){},cross:function(o,r){if(void 0!==r)return this.crossVectors(o,r);var t=this.x,e=this.y,a=this.z;return this.x=e*o.z-a*o.y,this.y=a*o.x-t*o.z,this.z=t*o.y-e*o.x,this},crossVectors:function(){},projectOnVector:function(){},projectOnPlane:function(){},reflect:function(){},angleTo:function(){},distanceTo:function(){},distanceToSquared:function(){},setFromSpherical:function(){},setFromMatrixPosition:function(t){return this.setFromMatrixColumn(t,3)},setFromMatrixScale:function(){},setFromMatrixColumn:function(e,t){return"number"==typeof e&&(t=e=t),this.fromArray(e.elements,4*t)},equals:function(){},fromArray:function(e,r){return void 0===r&&(r=0),this.x=e[r],this.y=e[r+1],this.z=e[r+2],this},toArray:function(){},fromAttribute:function(){}},se.Vector4=function(e,a,o,r){this.x=e||0,this.y=a||0,this.z=o||0,this.w=void 0===r?1:r},se.Vector4.prototype={constructor:se.Vector4,set:function(e,a,o,r){return this.x=e,this.y=a,this.z=o,this.w=r,this},setScalar:function(){},setX:function(){},setY:function(){},setZ:function(){},setW:function(){},setComponent:function(){},getComponent:function(){},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0===t.w?1:t.w,this},add:function(){},addScalar:function(){},addVectors:function(){},addScaledVector:function(){},sub:function(){},subScalar:function(){},subVectors:function(){},multiplyScalar:async function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t,this.w*=await t):this.w=this.z=this.y=this.x=0,this},applyMatrix4:function(){},divideScalar:function(){},setAxisAngleFromQuaternion:function(){},setAxisAngleFromRotationMatrix:function(){},min:function(){},max:function(){},clamp:function(){},clampScalar:function(){},floor:function(){},ceil:function(){},round:function(){},roundToZero:function(){},negate:function(){},dot:function(){},lengthSq:function(){},length:function(){},lengthManhattan:function(){},normalize:function(){},setLength:function(){},lerp:function(){},lerpVectors:function(){},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(){},toArray:function(){},fromAttribute:function(){}},se.Euler=function(e,a,o,r){this._x=e||0,this._y=a||0,this._z=o||0,this._order=r||se.Euler.DefaultOrder},se.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],se.Euler.DefaultOrder="XYZ",se.Euler.prototype={constructor:se.Euler,set:function(){},clone:function(){},copy:function(){},setFromRotationMatrix:function(){},setFromQuaternion:function(){},setFromVector3:function(){},reorder:new se.Quaternion,equals:function(){},fromArray:function(){},toArray:function(){},toVector3:function(){},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},se.Line3=function(){},se.Line3.prototype={constructor:se.Line3,set:function(){},clone:function(){},copy:function(){},center:function(){},delta:function(){},distanceSq:function(){},distance:function(){},at:function(){},closestPointToPointParameter:(new se.Vector3,new se.Vector3),closestPointToPoint:function(){},applyMatrix4:function(){},equals:function(){}},se.Box2=function(){},se.Box2.prototype={constructor:se.Box2,set:function(){},setFromPoints:function(){},setFromCenterAndSize:new se.Vector2,clone:function(){},copy:function(){},makeEmpty:function(){},isEmpty:function(){},center:function(){},size:function(){},expandByPoint:function(){},expandByVector:function(){},expandByScalar:function(){},containsPoint:function(){},containsBox:function(){},getParameter:function(){},intersectsBox:function(){},clampPoint:function(){},distanceToPoint:new se.Vector2,intersect:function(){},union:function(){},translate:function(){},equals:function(){}},se.Box3=function(e,r){this.min=void 0===e?new se.Vector3(1/0,1/0,1/0):e,this.max=void 0===r?new se.Vector3(-1/0,-1/0,-1/0):r},se.Box3.prototype={constructor:se.Box3,set:function(){},setFromArray:function(){},setFromPoints:function(){},setFromCenterAndSize:new se.Vector3,setFromObject:function(){},clone:function(){},copy:function(){},makeEmpty:function(){},isEmpty:function(){},center:function(){},size:function(){},expandByPoint:function(){},expandByVector:function(){},expandByScalar:function(){},containsPoint:function(){},containsBox:function(){},getParameter:function(){},intersectsBox:function(){},intersectsSphere:function(){},intersectsPlane:function(){},clampPoint:function(){},distanceToPoint:new se.Vector3,getBoundingSphere:new se.Vector3,intersect:function(){},union:function(){},applyMatrix4:(new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3),translate:function(){},equals:function(){}},se.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])},se.Matrix3.prototype={constructor:se.Matrix3,set:function(p,a,l,t,e,n,i,o,r){var d=this.elements;return d[0]=p,d[1]=t,d[2]=i,d[3]=a,d[4]=e,d[5]=o,d[6]=l,d[7]=n,d[8]=r,this},identity:function(){},clone:function(){},copy:function(){},setFromMatrix4:function(t){return t=t.elements,this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToVector3Array:function(){},applyToBuffer:function(){},multiplyScalar:function(e){var r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=e,r[4]*=e,r[7]*=e,r[2]*=e,r[5]*=e,r[8]*=e,this},determinant:function(){},getInverse:function(i,r){se.Matrix4;var t=i.elements,n=this.elements,a=t[0],o=t[1],s=t[2],c=t[3],u=t[4],l=t[5],f=t[6],p=t[7],d=(t=t[8])*u-l*p,h=l*f-t*c,m=p*c-u*f,g=a*d+o*h+s*m;if(0==g){if(r)throw Error("THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return n[0]=d,n[1]=s*p-t*o,n[2]=l*o-s*u,n[3]=h,n[4]=t*a-s*f,n[5]=s*c-l*a,n[6]=m,n[7]=o*f-p*a,n[8]=u*a-o*c,this.multiplyScalar(1/g)},transpose:function(){var e=this.elements,r;return r=e[1],e[1]=e[3],e[3]=r,r=e[2],e[2]=e[6],e[6]=r,r=e[5],e[5]=e[7],e[7]=r,this},flattenToArrayOffset:function(){},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(){},fromArray:function(){},toArray:function(){}},se.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},se.Matrix4.prototype={constructor:se.Matrix4,set:function(o,r,a,s,c,u,l,f,p,d,h,m,g,_,t,e){var n=this.elements;return n[0]=o,n[4]=r,n[8]=a,n[12]=s,n[1]=c,n[5]=u,n[9]=l,n[13]=f,n[2]=p,n[6]=d,n[10]=h,n[14]=m,n[3]=g,n[7]=_,n[11]=t,n[15]=e,this},identity:function(){},clone:function(){},copy:function(t){(async()=>{await this.elements.set(await t.elements)})()},copyPosition:function(){},extractBasis:function(){},makeBasis:function(){},extractRotation:function(){},makeRotationFromEuler:function(){},makeRotationFromQuaternion:function(t){var r=this.elements,a=t.x,l=t.y,s=t.z,c=t.w,m=s+s;t=a*(u=a+a);var d=a*(h=l+l),f=(a*=m,l*h),u=(l*=m,s*=m,c*u),h=c*h;return c*=m,r[0]=1-(f+s),r[4]=d-c,r[8]=a+h,r[1]=d+c,r[5]=1-(t+s),r[9]=l-u,r[2]=a-h,r[6]=l+u,r[10]=1-(t+f),r[3]=0,r[7]=0,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,this},lookAt:function(){},multiply:function(){},multiplyMatrices:async function(i,a){var t=i.elements,M=a.elements,b=this.elements,T=t[0],L=t[4],E=t[8],P=t[12],C=t[1],A=t[5],D=t[9],R=t[13],w=t[2],B=t[6],U=t[10],I=t[14],F=t[3],o=t[7],r=t[11],G=(t=t[15],M[0]),s=M[4],c=M[8],u=M[12],l=M[1],f=M[5],p=M[9],d=M[13],h=M[2],m=M[6],g=M[10],v=M[14],_=M[3],y=M[7],x=M[11];return M=M[15],b[0]=T*G+L*l+E*h+P*_,b[4]=T*s+L*f+E*m+P*y,b[8]=T*c+L*p+E*g+P*x,b[12]=T*u+L*d+E*v+P*M,b[1]=C*G+A*l+D*h+R*_,b[5]=C*s+A*f+D*m+R*y,b[9]=C*c+A*p+D*g+R*x,b[13]=C*u+A*d+D*v+R*M,b[2]=w*G+B*l+U*h+I*_,b[6]=w*s+B*f+U*m+I*y,b[10]=w*c+B*p+U*g+I*x,b[14]=w*u+B*d+U*v+I*M,b[3]=F*G+o*l+r*h+t*_,b[7]=F*s+o*f+r*m+t*y,b[11]=F*c+o*p+r*g+t*x,b[15]=F*u+o*d+r*v+t*M,this},multiplyToArray:function(){},multiplyScalar:function(e){var r=this.elements;return r[0]*=e,r[4]*=e,r[8]*=e,r[12]*=e,r[1]*=e,r[5]*=e,r[9]*=e,r[13]*=e,r[2]*=e,r[6]*=e,r[10]*=e,r[14]*=e,r[3]*=e,r[7]*=e,r[11]*=e,r[15]*=e,this},applyToVector3Array:function(){},applyToBuffer:function(){},determinant:function(){},transpose:function(){},flattenToArrayOffset:function(){},getPosition:function(){},setPosition:async function(e){var r=await this.elements;return r[12]=await e.x,r[13]=await e.y,r[14]=await e.z,this},getInverse:function(p,a){var d=this.elements,m=(l=p.elements)[0],g=l[1],h=l[2],_=l[3],v=l[4],y=l[5],x=l[6],S=l[7],e=l[8],n=l[9],M=l[10],t=l[11],T=l[12],i=l[13],o=l[14],r=n*o*S-i*M*S+i*x*t-y*o*t-n*x*(l=l[15])+y*M*l,b=T*M*S-e*o*S-T*x*t+v*o*t+e*x*l-v*M*l,s=e*i*S-T*n*S+T*y*t-v*i*t-e*y*l+v*n*l,c=T*n*x-e*i*x-T*y*M+v*i*M+e*y*o-v*n*o,u=m*r+g*b+h*s+_*c,l;if(0==u){if(a)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return d[0]=r,d[1]=i*M*_-n*o*_-i*h*t+g*o*t+n*h*l-g*M*l,d[2]=y*o*_-i*x*_+i*h*S-g*o*S-y*h*l+g*x*l,d[3]=n*x*_-y*M*_-n*h*S+g*M*S+y*h*t-g*x*t,d[4]=b,d[5]=e*o*_-T*M*_+T*h*t-m*o*t-e*h*l+m*M*l,d[6]=T*x*_-v*o*_-T*h*S+m*o*S+v*h*l-m*x*l,d[7]=v*M*_-e*x*_+e*h*S-m*M*S-v*h*t+m*x*t,d[8]=s,d[9]=T*n*_-e*i*_-T*g*t+m*i*t+e*g*l-m*n*l,d[10]=v*i*_-T*y*_+T*g*S-m*i*S-v*g*l+m*y*l,d[11]=e*y*_-v*n*_-e*g*S+m*n*S+v*g*t-m*y*t,d[12]=c,d[13]=e*i*h-T*n*h+T*g*M-m*i*M-e*g*o+m*n*o,d[14]=T*y*h-v*i*h-T*g*x+m*i*x+v*g*o-m*y*o,d[15]=v*n*h-e*y*h+e*g*x-m*n*x-v*g*M+m*y*M,this.multiplyScalar(1/u)},scale:function(e){var i=this.elements,a=e.x,t=e.y;return e=e.z,i[0]*=a,i[4]*=t,i[8]*=e,i[1]*=a,i[5]*=t,i[9]*=e,i[2]*=a,i[6]*=t,i[10]*=e,i[3]*=a,i[7]*=t,i[11]*=e,this},getMaxScaleOnAxis:function(){},makeTranslation:function(a,r,t){return this.set(1,0,0,a,0,1,0,r,0,0,1,t,0,0,0,1),this},makeRotationX:function(){},makeRotationY:function(){},makeRotationZ:function(){},makeRotationAxis:function(){},makeScale:function(){},compose:function(a,r,t){return this.makeRotationFromQuaternion(r),this.scale(t),this.setPosition(a),this},decompose:function(){},makeFrustum:function(n,a,o,r,i,l){var t=this.elements;return t[0]=2*i/(a-n),t[4]=0,t[8]=(a+n)/(a-n),t[12]=0,t[1]=0,t[5]=2*i/(r-o),t[9]=(r+o)/(r-o),t[13]=0,t[2]=0,t[6]=0,t[10]=-(l+i)/(l-i),t[14]=-2*l*i/(l-i),t[3]=0,t[7]=0,t[11]=-1,t[15]=0,this},makePerspective:function(t,n,a,r){var i=-(t=a*Math.tan(se.Math.degToRad(.5*t)));return this.makeFrustum(i*n,t*n,i,t,a,r)},makeOrthographic:function(){},equals:function(){},fromArray:function(){},toArray:function(){}},se.Ray=function(e,r){this.origin=void 0===e?new se.Vector3:e,this.direction=void 0===r?new se.Vector3:r},se.Ray.prototype={constructor:se.Ray,set:function(){},clone:function(){},copy:function(){},at:function(){},lookAt:function(){},recast:new se.Vector3,closestPointToPoint:function(){},distanceToPoint:function(){},distanceSqToPoint:new se.Vector3,distanceSqToSegment:(new se.Vector3,new se.Vector3,new se.Vector3),intersectSphere:new se.Vector3,intersectsSphere:function(){},distanceToPlane:function(){},intersectPlane:function(){},intersectsPlane:function(){},intersectBox:function(){},intersectsBox:new se.Vector3,intersectTriangle:(new se.Vector3,new se.Vector3,new se.Vector3,new se.Vector3),applyMatrix4:function(){},equals:function(){}},se.Sphere=function(e,r){this.center=void 0===e?new se.Vector3:e,this.radius=void 0===r?0:r},se.Sphere.prototype={constructor:se.Sphere,set:function(){},setFromPoints:new se.Box3,clone:function(){},copy:function(){},empty:function(){},containsPoint:function(){},distanceToPoint:function(){},intersectsSphere:function(){},intersectsBox:function(){},intersectsPlane:function(){},clampPoint:function(){},getBoundingBox:function(){},applyMatrix4:function(){},translate:function(){},equals:function(){}},se.Frustum=function(t,e,a,i,r,n){this.planes=[void 0===t?new se.Plane:t,void 0===e?new se.Plane:e,void 0===a?new se.Plane:a,void 0===i?new se.Plane:i,void 0===r?new se.Plane:r,void 0===n?new se.Plane:n]},se.Frustum.prototype={constructor:se.Frustum,set:function(){},clone:function(){},copy:function(){},setFromMatrix:function(t){var o=this.planes;t=(n=t.elements)[0];var a=n[1],s=n[2],d=n[3],c=n[4],u=n[5],l=n[6],f=n[7],p=n[8],m=n[9],h=n[10],_=n[11],g=n[12],v=n[13],e=n[14],n=n[15];return o[0].setComponents(d-t,f-c,_-p,n-g).normalize(),o[1].setComponents(d+t,f+c,_+p,n+g).normalize(),o[2].setComponents(d+a,f+u,_+m,n+v).normalize(),o[3].setComponents(d-a,f-u,_-m,n-v).normalize(),o[4].setComponents(d-s,f-l,_-h,n-e).normalize(),o[5].setComponents(d+s,f+l,_+h,n+e).normalize(),this},intersectsObject:new se.Sphere,intersectsSphere:function(){},intersectsBox:(new se.Vector3,new se.Vector3),containsPoint:function(){}},se.Plane=function(e,r){this.normal=void 0===e?new se.Vector3(1,0,0):e,this.constant=void 0===r?0:r},se.Plane.prototype={constructor:se.Plane,set:function(){},setComponents:function(e,a,o,r){return this.normal.set(e,a,o),this.constant=r,this},setFromNormalAndCoplanarPoint:function(){},setFromCoplanarPoints:(new se.Vector3,new se.Vector3),clone:function(){},copy:function(){},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){},distanceToPoint:function(){},distanceToSphere:function(){},projectPoint:function(){},orthoPoint:function(){},intersectLine:new se.Vector3,intersectsLine:function(){},intersectsBox:function(){},intersectsSphere:function(){},coplanarPoint:function(){},applyMatrix4:(new se.Vector3,new se.Vector3,new se.Matrix3),translate:function(){},equals:function(){}},se.Spherical=function(){},se.Spherical.prototype={constructor:se.Spherical,set:function(){},clone:function(){},copy:function(){},makeSafe:function(){},setFromVector3:function(){}},se.Math={generateUUID:function(){var r=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"],t=Array(36),a=0,n;return function(){var o=0;for(o;36>o;o++)8==o||13===o||18===o||23===o?t[o]="-":14===o?t[o]="4":(2>=a&&(a=0|33554432+16777216*Math.random()),n=15&a,a>>=4,t[o]=r[19===o?8|3&n:n]);return t.join("")}}(),clamp:function(a,r,t){return Math.max(r,Math.min(t,a))},euclideanModulo:function(){},mapLinear:function(o,r,t,e,a){return e+(o-r)*(a-e)/(t-r)},smoothstep:function(){},smootherstep:function(){},random16:function(){},randInt:function(){},randFloat:function(e,r){return e+Math.random()*(r-e)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(r){return r*e}}(),radToDeg:function(){var e=180/Math.PI;return function(r){return r*e}}(),isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(){}},se.Spline=function(){},se.Triangle=function(){},se.Triangle.normal=new se.Vector3,se.Triangle.barycoordFromPoint=(new se.Vector3,new se.Vector3,new se.Vector3),se.Triangle.containsPoint=new se.Vector3,se.Triangle.prototype={constructor:se.Triangle,set:function(){},setFromPointsAndIndices:function(){},clone:function(){},copy:function(){},area:(new se.Vector3,new se.Vector3),midpoint:function(){},normal:function(){},plane:function(){},barycoordFromPoint:function(){},containsPoint:function(){},equals:function(){}},se.Interpolant=function(){},se.Interpolant.prototype={constructor:se.Interpolant,evaluate:function(){},settings:null,DefaultSettings_:{},getSettings_:function(){},copySampleValue_:function(){},interpolate_:function(){},intervalChanged_:function(){}},Object.assign(se.Interpolant.prototype,{beforeStart_:se.Interpolant.prototype.copySampleValue_,afterEnd_:se.Interpolant.prototype.copySampleValue_}),se.CubicInterpolant=function(){},se.CubicInterpolant.prototype=Object.assign(Object.create(se.Interpolant.prototype),{constructor:se.CubicInterpolant,DefaultSettings_:{endingStart:se.ZeroCurvatureEnding,endingEnd:se.ZeroCurvatureEnding},intervalChanged_:function(){},interpolate_:function(){}}),se.DiscreteInterpolant=function(){},se.DiscreteInterpolant.prototype=Object.assign(Object.create(se.Interpolant.prototype),{constructor:se.DiscreteInterpolant,interpolate_:function(){}}),se.LinearInterpolant=function(){},se.LinearInterpolant.prototype=Object.assign(Object.create(se.Interpolant.prototype),{constructor:se.LinearInterpolant,interpolate_:function(){}}),se.QuaternionLinearInterpolant=function(){},se.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(se.Interpolant.prototype),{constructor:se.QuaternionLinearInterpolant,interpolate_:function(){}}),se.Clock=function(){},se.Clock.prototype={constructor:se.Clock,start:function(){},stop:function(){},getElapsedTime:function(){},getDelta:function(){}},se.EventDispatcher=function(){},se.EventDispatcher.prototype={constructor:se.EventDispatcher,apply:function(t){t.addEventListener=se.EventDispatcher.prototype.addEventListener,t.hasEventListener=se.EventDispatcher.prototype.hasEventListener,t.removeEventListener=se.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=se.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,r){void 0===this._listeners&&(this._listeners={});var t=this._listeners;void 0===t[a]&&(t[a]=[]),-1===t[a].indexOf(r)&&t[a].push(r)},hasEventListener:function(){},removeEventListener:function(){},dispatchEvent:function(o){if(void 0!==this._listeners){var r=this._listeners[o.type];if(void 0!==r){o.target=this;var t=[],e=r.length,a=0;for(t,e,a;a<e;a++)t[a]=r[a];for(a=0;a<e;a++)t[a].call(this,o)}}}},se.Layers=function(){this.mask=1},se.Layers.prototype={constructor:se.Layers,set:function(){},enable:function(){},toggle:function(){},disable:function(){},test:function(t){return 0!=(this.mask&t.mask)}},(l=se).Raycaster=function(){},l.Raycaster.prototype={constructor:l.Raycaster,linePrecision:1,set:function(){},setFromCamera:function(){},intersectObject:function(){},intersectObjects:function(){}},se.Object3D=function(){Object.defineProperty(this,"id",{value:se.Object3DIdCount++}),this.uuid=se.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=se.Object3D.DefaultUp.clone();var e=new se.Vector3,a=new se.Euler,o=new se.Quaternion,r=new se.Vector3(1,1,1);a.onChange(function(){}),o.onChange(function(){}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:a},quaternion:{enumerable:!0,value:o},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new se.Matrix4},normalMatrix:{value:new se.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new se.Matrix4,this.matrixWorld=new se.Matrix4,this.matrixAutoUpdate=se.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new se.Layers,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},se.Object3D.DefaultUp=new se.Vector3(0,1,0),se.Object3D.DefaultMatrixAutoUpdate=!0,se.Object3D.prototype={constructor:se.Object3D,applyMatrix:function(){},setRotationFromAxisAngle:function(){},setRotationFromEuler:function(){},setRotationFromMatrix:function(){},setRotationFromQuaternion:function(){},rotateOnAxis:new se.Quaternion,rotateX:new se.Vector3(1,0,0),rotateY:new se.Vector3(0,1,0),rotateZ:new se.Vector3(0,0,1),translateOnAxis:new se.Vector3,translateX:new se.Vector3(1,0,0),translateY:new se.Vector3(0,1,0),translateZ:new se.Vector3(0,0,1),localToWorld:function(){},worldToLocal:new se.Matrix4,lookAt:new se.Matrix4,add:function(e){var r=0;if(1<arguments.length){for(r;r<arguments.length;r++)this.add(arguments[r]);return this}return e===this||e instanceof se.Object3D&&(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)),this},remove:function(){},getObjectById:function(){},getObjectByName:function(){},getObjectByProperty:function(){},getWorldPosition:function(){},getWorldQuaternion:(new se.Vector3,new se.Vector3),getWorldRotation:new se.Quaternion,getWorldScale:(new se.Vector3,new se.Quaternion),getWorldDirection:new se.Quaternion,raycast:function(){},traverse:function(){},traverseVisible:function(){},traverseAncestors:function(){},updateMatrix:async function(){await this.matrix.compose(await this.position,await this.quaternion,await this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:async function(e){!0===(await this.matrixAutoUpdate)&&(await this.updateMatrix()),(!0===(await this.matrixWorldNeedsUpdate)||!0===e)&&(null===(await this.parent)?await this.matrixWorld.copy(await this.matrix):await this.matrixWorld.multiplyMatrices(await this.parent.matrixWorld,await this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);var t=0,i=await this.children.length;for(t,i;t<(await i);await t++)await this.children[await t].updateMatrixWorld(await e)},toJSON:function(){},clone:function(){},copy:function(){}},se.EventDispatcher.prototype.apply(se.Object3D.prototype),se.Object3DIdCount=0,se.Face3=function(t,e,a,i,r,n){(async()=>{this.a=t,this.b=e,this.c=a,this.normal=i instanceof se.Vector3?i:new se.Vector3,this.vertexNormals=Array.isArray(i)?i:[],this.color=r instanceof se.Color?r:new se.Color,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0===n?0:n})()},se.Face3.prototype={constructor:se.Face3,clone:function(){},copy:function(){}},se.BufferAttribute=function(e,r){this.uuid=se.Math.generateUUID(),this.array=e,this.itemSize=r,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},se.BufferAttribute.prototype={constructor:se.BufferAttribute,get count(){return this.array.length/this.itemSize},setDynamic:function(){},copy:function(){},copyAt:function(){},copyArray:function(){},copyColorsArray:function(){},copyIndicesArray:function(){},copyVector2sArray:function(){},copyVector3sArray:function(){},copyVector4sArray:function(){},set:function(){},getX:function(){},setX:function(e,r){return this.array[e*this.itemSize]=r,this},getY:function(){},setY:function(){},getZ:function(){},setZ:function(){},getW:function(){},setW:function(){},setXY:function(t,o,a){return t*=this.itemSize,this.array[t+0]=o,this.array[t+1]=a,this},setXYZ:function(e,i,a,t){return e*=this.itemSize,this.array[e+0]=i,this.array[e+1]=a,this.array[e+2]=t,this},setXYZW:function(){},clone:function(){}},se.Int8Attribute=function(){},se.Uint8Attribute=function(){},se.Uint8ClampedAttribute=function(){},se.Int16Attribute=function(){},se.Uint16Attribute=function(){},se.Int32Attribute=function(){},se.Uint32Attribute=function(){},se.Float32Attribute=function(){},se.Float64Attribute=function(){},se.DynamicBufferAttribute=function(){},se.InstancedBufferAttribute=function(){},se.InstancedBufferAttribute.prototype=Object.create(se.BufferAttribute.prototype),se.InstancedBufferAttribute.prototype.constructor=se.InstancedBufferAttribute,se.InstancedBufferAttribute.prototype.copy=function(){},se.InterleavedBuffer=function(){},se.InterleavedBuffer.prototype={constructor:se.InterleavedBuffer,setDynamic:function(){},copy:function(){},copyAt:function(){},set:function(){},clone:function(){}},se.InstancedInterleavedBuffer=function(){},se.InstancedInterleavedBuffer.prototype=Object.create(se.InterleavedBuffer.prototype),se.InstancedInterleavedBuffer.prototype.constructor=se.InstancedInterleavedBuffer,se.InstancedInterleavedBuffer.prototype.copy=function(){},se.InterleavedBufferAttribute=function(){},se.InterleavedBufferAttribute.prototype={constructor:se.InterleavedBufferAttribute,setX:function(){},setY:function(){},setZ:function(){},setW:function(){},getX:function(){},getY:function(){},getZ:function(){},getW:function(){},setXY:function(){},setXYZ:function(){},setXYZW:function(){}},se.Geometry=function(){Object.defineProperty(this,"id",{value:se.GeometryIdCount++}),this.uuid=se.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},se.Geometry.prototype={constructor:se.Geometry,applyMatrix:async function(r){var l=new se.Matrix3().getNormalMatrix(r),a=0;for(e=this.vertices.length,l,a,e;a<e;a++)this.vertices[a].applyMatrix4(r);for(a=0,e=this.faces.length;a<e;a++){(r=this.faces[a]).normal.applyMatrix3(l).normalize();var s=0,p=r.vertexNormals.length;for(s,p;s<p;s++)r.vertexNormals[s].applyMatrix3(l).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0,this},rotateX:function(){},rotateY:function(){},rotateZ:function(){},translate:function(){var e;return function(a,o,r){return void 0===e&&(e=new se.Matrix4),e.makeTranslation(a,o,r),this.applyMatrix(e),this}}(),scale:function(){},lookAt:function(){},fromBufferGeometry:async function(i){(async()=>{async function r(e,a,r,i){(async()=>{var n=void 0===s?[]:[c[e].clone(),c[a].clone(),c[r].clone()],o=void 0===d?[]:[l.colors[e].clone(),l.colors[a].clone(),l.colors[r].clone()];i=new se.Face3(e,a,r,n,o,i),l.faces.push(i),void 0!==m&&l.faceVertexUvs[0].push([p[e].clone(),p[a].clone(),p[r].clone()]),void 0!==g&&l.faceVertexUvs[1].push([u[e].clone(),u[a].clone(),u[r].clone()])})()}var l=this,a=null===i.index?void 0:i.index.array,t=i.attributes,n=t.position.array,s=void 0===t.normal?void 0:t.normal.array,d=void 0===t.color?void 0:t.color.array,m=void 0===t.uv?void 0:t.uv.array,g=void 0===t.uv2?void 0:t.uv2.array;void 0!==g&&(this.faceVertexUvs[1]=[]);var c=[],p=[],u=[],_=t=0;for(c,p,u,_;t<n.length;t+=3,_+=2)l.vertices.push(new se.Vector3(n[t],n[t+1],n[t+2])),void 0!==s&&c.push(new se.Vector3(s[t],s[t+1],s[t+2])),void 0!==d&&l.colors.push(new se.Color(d[t],d[t+1],d[t+2])),void 0!==m&&p.push(new se.Vector2(m[_],m[_+1])),void 0!==g&&u.push(new se.Vector2(g[_],g[_+1]));if(void 0===a)for(t=0;t<n.length/3;t+=3)r(t,t+1,t+2);else if(0<(n=i.groups).length)for(t=0;t<n.length;t++)for(var y=n[t],v=(_=v=y.start,v+y.count);_<v;_+=3)r(a[_],a[_+1],a[_+2],y.materialIndex);else(async()=>{for(t=0;t<a.length;t+=3)r(a[t],a[t+1],a[t+2]);await this.computeFaceNormals(),null!==i.boundingBox&&(this.boundingBox=i.boundingBox.clone()),null!==i.boundingSphere&&(this.boundingSphere=i.boundingSphere.clone())})()})()},center:function(){},normalize:function(){},computeFaceNormals:async function(){var r=await new se.Vector3,a=await new se.Vector3,t=0,s=await this.faces.length;for(r,a,t,s;t<(await s);await t++){var o=this.faces[t],n=this.vertices[o.a],l=this.vertices[o.b];r.subVectors(this.vertices[o.c],l),a.subVectors(n,l),r.cross(a),r.normalize(),o.normal.copy(r)}},computeVertexNormals:function(){},computeMorphNormals:function(){},computeTangents:function(){},computeLineDistances:function(){},computeBoundingBox:function(){},computeBoundingSphere:function(){},merge:function(){},mergeMesh:function(){},mergeVertices:function(){var e={},o=[],a=[],n=Math.pow(10,4),l,d,c;for(d=0,c=this.vertices.length;d<c;d++)l=this.vertices[d],void 0===e[l=Math.round(l.x*n)+"_"+Math.round(l.y*n)+"_"+Math.round(l.z*n)]?(e[l]=d,o.push(this.vertices[d]),a[d]=o.length-1):a[d]=a[e[l]];for(e=[],d=0,c=this.faces.length;d<c;d++)for((n=this.faces[d]).a=a[n.a],n.b=a[n.b],n.c=a[n.c],n=[n.a,n.b,n.c],l=0;3>l;l++)if(n[l]===n[(l+1)%3]){e.push(d);break}for(d=e.length-1;0<=d;d--)for(n=e[d],this.faces.splice(n,1),a=0,c=this.faceVertexUvs.length;a<c;a++)this.faceVertexUvs[a].splice(n,1);return d=this.vertices.length-o.length,this.vertices=o,d},sortFacesByMaterialIndex:function(){},toJSON:function(){},clone:function(){},copy:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}},se.EventDispatcher.prototype.apply(se.Geometry.prototype),se.GeometryIdCount=0,se.DirectGeometry=function(){},se.DirectGeometry.prototype={constructor:se.DirectGeometry,computeBoundingBox:se.Geometry.prototype.computeBoundingBox,computeBoundingSphere:se.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){},computeVertexNormals:function(){},computeGroups:function(){},fromGeometry:function(){},dispose:function(){}},se.EventDispatcher.prototype.apply(se.DirectGeometry.prototype),se.BufferGeometry=function(){Object.defineProperty(this,"id",{value:se.GeometryIdCount++}),this.uuid=se.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.drawRange={start:0,count:1/0}},se.BufferGeometry.prototype={constructor:se.BufferGeometry,getIndex:function(){},setIndex:function(t){this.index=t},addAttribute:function(a,r,t){if(0==r instanceof se.BufferAttribute&&0==r instanceof se.InterleavedBufferAttribute)this.addAttribute(a,new se.BufferAttribute(r,t));else{if("index"!==a)return this.attributes[a]=r,this;this.setIndex(r)}},getAttribute:function(){},removeAttribute:function(){},addGroup:function(){},clearGroups:function(){},setDrawRange:function(){},applyMatrix:function(){},rotateX:function(){},rotateY:function(){},rotateZ:function(){},translate:function(){},scale:function(){},lookAt:function(){},center:function(){},setFromObject:function(){},updateFromObject:function(){},fromGeometry:function(){},fromDirectGeometry:function(){},computeBoundingBox:new se.Vector3,computeBoundingSphere:(new se.Box3,new se.Vector3),computeFaceNormals:function(){},computeVertexNormals:function(){},merge:function(){},normalizeNormals:function(){},toNonIndexed:function(){},toJSON:function(){},clone:function(){},copy:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}},se.EventDispatcher.prototype.apply(se.BufferGeometry.prototype),se.BufferGeometry.MaxIndex=65535,se.InstancedBufferGeometry=function(){},se.InstancedBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.InstancedBufferGeometry.prototype.constructor=se.InstancedBufferGeometry,se.InstancedBufferGeometry.prototype.addGroup=function(){},se.InstancedBufferGeometry.prototype.copy=function(){},se.EventDispatcher.prototype.apply(se.InstancedBufferGeometry.prototype),se.Uniform=function(){},se.Uniform.prototype={constructor:se.Uniform,onUpdate:function(){}},se.AnimationClip=function(){},se.AnimationClip.prototype={constructor:se.AnimationClip,resetDuration:function(){},trim:function(){},optimize:function(){}},Object.assign(se.AnimationClip,{parse:function(){},toJSON:function(){},CreateFromMorphTargetSequence:function(){},findByName:function(){},CreateClipsFromMorphTargetSequences:function(){},parseAnimation:function(){}}),se.AnimationMixer=function(){},se.AnimationMixer.prototype={constructor:se.AnimationMixer,clipAction:function(){},existingAction:function(){},stopAllAction:function(){},update:function(){},getRoot:function(){},uncacheClip:function(){},uncacheRoot:function(){},uncacheAction:function(){}},se.EventDispatcher.prototype.apply(se.AnimationMixer.prototype),se.AnimationMixer._Action=function(){},se.AnimationMixer._Action.prototype={constructor:se.AnimationMixer._Action,play:function(){},stop:function(){},reset:function(){},isRunning:function(){},isScheduled:function(){},startAt:function(){},setLoop:function(){},setEffectiveWeight:function(){},getEffectiveWeight:function(){},fadeIn:function(){},fadeOut:function(){},crossFadeFrom:function(){},crossFadeTo:function(){},stopFading:function(){},setEffectiveTimeScale:function(){},getEffectiveTimeScale:function(){},setDuration:function(){},syncWith:function(){},halt:function(){},warp:function(){},stopWarping:function(){},getMixer:function(){},getClip:function(){},getRoot:function(){},_update:function(){},_updateWeight:function(){},_updateTimeScale:function(){},_updateTime:function(){},_setEndings:function(){},_scheduleFading:function(){}},Object.assign(se.AnimationMixer.prototype,{_bindAction:function(){},_activateAction:function(){},_deactivateAction:function(){},_initMemoryManager:function(){},_isActiveAction:function(){},_addInactiveAction:function(){},_removeInactiveAction:function(){},_removeInactiveBindingsForAction:function(){},_lendAction:function(){},_takeBackAction:function(){},_addInactiveBinding:function(){},_removeInactiveBinding:function(){},_lendBinding:function(){},_takeBackBinding:function(){},_lendControlInterpolant:function(){},_takeBackControlInterpolant:function(){},_controlInterpolantsResultBuffer:new Float32Array(1)}),se.AnimationObjectGroup=function(){},se.AnimationObjectGroup.prototype={constructor:se.AnimationObjectGroup,add:function(){},remove:function(){},uncache:function(){},subscribe_:function(){},unsubscribe_:function(){}},se.AnimationUtils={arraySlice:function(){},convertArray:function(){},isTypedArray:function(){},getKeyframeOrder:function(){},sortedArray:function(){},flattenJSON:function(){}},se.KeyframeTrack=function(){},se.KeyframeTrack.prototype={constructor:se.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:se.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(){},InterpolantFactoryMethodLinear:function(){},InterpolantFactoryMethodSmooth:function(){},setInterpolation:function(){},getInterpolation:function(){},getValueSize:function(){},shift:function(){},scale:function(){},trim:function(){},validate:function(){},optimize:function(){}},Object.assign(se.KeyframeTrack,{parse:function(){},toJSON:function(){},_getTrackTypeForValueTypeName:function(){}}),se.PropertyBinding=function(){},se.PropertyBinding.prototype={constructor:se.PropertyBinding,getValue:function(){},setValue:function(){},bind:function(){},unbind:function(){}},Object.assign(se.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:se.PropertyBinding.prototype.getValue,_setValue_unbound:se.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(){},function(){},function(){},function(){}],SetterByBindingTypeAndVersioning:[[function(){},function(){},function(){}],[function(){},function(){},function(){}],[function(){},function(){},function(){}],[function(){},function(){},function(){}]]}),se.PropertyBinding.Composite=function(){},se.PropertyBinding.Composite.prototype={constructor:se.PropertyBinding.Composite,getValue:function(){},setValue:function(){},bind:function(){},unbind:function(){}},se.PropertyBinding.create=function(){},se.PropertyBinding.parseTrackName=function(){},se.PropertyBinding.findNode=function(){},se.PropertyMixer=function(){},se.PropertyMixer.prototype={constructor:se.PropertyMixer,accumulate:function(){},apply:function(){},saveOriginalState:function(){},restoreOriginalState:function(){},_select:function(){},_slerp:function(){},_lerp:function(){}},se.BooleanKeyframeTrack=function(){},se.BooleanKeyframeTrack.prototype=Object.assign(Object.create(se.KeyframeTrack.prototype),{constructor:se.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:se.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),se.NumberKeyframeTrack=function(){},se.NumberKeyframeTrack.prototype=Object.assign(Object.create(se.KeyframeTrack.prototype),{constructor:se.NumberKeyframeTrack,ValueTypeName:"number"}),se.QuaternionKeyframeTrack=function(){},se.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(se.KeyframeTrack.prototype),{constructor:se.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:se.InterpolateLinear,InterpolantFactoryMethodLinear:function(){},InterpolantFactoryMethodSmooth:void 0}),se.StringKeyframeTrack=function(){},se.StringKeyframeTrack.prototype=Object.assign(Object.create(se.KeyframeTrack.prototype),{constructor:se.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:se.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),se.VectorKeyframeTrack=function(){},se.VectorKeyframeTrack.prototype=Object.assign(Object.create(se.KeyframeTrack.prototype),{constructor:se.VectorKeyframeTrack,ValueTypeName:"vector"}),se.Camera=function(){se.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new se.Matrix4,this.projectionMatrix=new se.Matrix4},se.Camera.prototype=Object.create(se.Object3D.prototype),se.Camera.prototype.constructor=se.Camera,se.Camera.prototype.getWorldDirection=new se.Quaternion,se.Camera.prototype.lookAt=new se.Matrix4,se.Camera.prototype.clone=function(){},se.Camera.prototype.copy=function(){},se.CubeCamera=function(){},se.CubeCamera.prototype=Object.create(se.Object3D.prototype),se.CubeCamera.prototype.constructor=se.CubeCamera,se.OrthographicCamera=function(){},se.OrthographicCamera.prototype=Object.create(se.Camera.prototype),se.OrthographicCamera.prototype.constructor=se.OrthographicCamera,se.OrthographicCamera.prototype.updateProjectionMatrix=function(){},se.OrthographicCamera.prototype.copy=function(){},se.OrthographicCamera.prototype.toJSON=function(){},se.PerspectiveCamera=function(e,a,o,r){se.Camera.call(this),this.type="PerspectiveCamera",this.focalLength=10,this.zoom=1,this.fov=void 0===e?50:e,this.aspect=void 0===a?1:a,this.near=void 0===o?.1:o,this.far=void 0===r?2e3:r,this.updateProjectionMatrix()},se.PerspectiveCamera.prototype=Object.create(se.Camera.prototype),se.PerspectiveCamera.prototype.constructor=se.PerspectiveCamera,se.PerspectiveCamera.prototype.setLens=function(){},se.PerspectiveCamera.prototype.setViewOffset=function(){},se.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var t=se.Math.radToDeg(2*Math.atan(Math.tan(.5*se.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var i=(a=this.fullWidth/this.fullHeight)*(n=-(t=Math.tan(se.Math.degToRad(.5*t))*this.near)),a=Math.abs(a*t-i),n=Math.abs(t-n);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*n/this.fullHeight,t-this.y*n/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(t,this.aspect,this.near,this.far)},se.PerspectiveCamera.prototype.copy=function(){},se.PerspectiveCamera.prototype.toJSON=function(){},se.StereoCamera=function(){},se.StereoCamera.prototype={constructor:se.StereoCamera,update:(new se.Matrix4,new se.Matrix4)},se.Light=function(){},se.Light.prototype=Object.create(se.Object3D.prototype),se.Light.prototype.constructor=se.Light,se.Light.prototype.copy=function(){},se.Light.prototype.toJSON=function(){},se.LightShadow=function(){},se.LightShadow.prototype={constructor:se.LightShadow,copy:function(){},clone:function(){}},se.AmbientLight=function(){},se.AmbientLight.prototype=Object.create(se.Light.prototype),se.AmbientLight.prototype.constructor=se.AmbientLight,se.DirectionalLight=function(){},se.DirectionalLight.prototype=Object.create(se.Light.prototype),se.DirectionalLight.prototype.constructor=se.DirectionalLight,se.DirectionalLight.prototype.copy=function(){},se.HemisphereLight=function(){},se.HemisphereLight.prototype=Object.create(se.Light.prototype),se.HemisphereLight.prototype.constructor=se.HemisphereLight,se.HemisphereLight.prototype.copy=function(){},se.PointLight=function(){},se.PointLight.prototype=Object.create(se.Light.prototype),se.PointLight.prototype.constructor=se.PointLight,Object.defineProperty(se.PointLight.prototype,"power",{get:function(){},set:function(){}}),se.PointLight.prototype.copy=function(){},se.SpotLight=function(){},se.SpotLight.prototype=Object.create(se.Light.prototype),se.SpotLight.prototype.constructor=se.SpotLight,Object.defineProperty(se.SpotLight.prototype,"power",{get:function(){},set:function(){}}),se.SpotLight.prototype.copy=function(){},se.Cache={enabled:!1,files:{},add:function(e,r){!1!==this.enabled&&(this.files[e]=r)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(){},clear:function(){}},se.Loader=function(){},se.Loader.prototype={constructor:se.Loader,crossOrigin:void 0,extractUrlBase:function(){},initMaterials:function(){},createMaterial:function(){}},se.Loader.Handlers={handlers:[],add:function(){},get:function(){}},se.XHRLoader=function(){},se.XHRLoader.prototype={constructor:se.XHRLoader,load:function(){},setPath:function(){},setResponseType:function(){},setWithCredentials:function(){}},se.FontLoader=function(){},se.FontLoader.prototype={constructor:se.FontLoader,load:function(){}},se.ImageLoader=function(t){this.manager=void 0===t?se.DefaultLoadingManager:t},se.ImageLoader.prototype={constructor:se.ImageLoader,load:async function(e,l,a){void 0!==this.path&&(e=this.path+e);var t=this,n=se.Cache.get(e);if(void 0!==n)return t.manager.itemStart(e),l?setTimeout(async function(){},0):t.manager.itemEnd(e),n;var i=document.createElement("img");return i.addEventListener("load",async function(){se.Cache.add(e,this),l&&l(this),t.manager.itemEnd(e)},!1),void 0!==a&&i.addEventListener("progress",async function(){},!1),i.addEventListener("error",async function(){},!1),void 0!==this.crossOrigin&&(i.crossOrigin=this.crossOrigin),t.manager.itemStart(e),i.src=e,i},setCrossOrigin:async function(){},setPath:async function(){}},se.JSONLoader=function(){},se.JSONLoader.prototype={constructor:se.JSONLoader,get statusDomElement(){},load:function(){},setTexturePath:function(){},parse:function(){}},se.LoadingManager=function(i,a,t){var n=this,r=!1,p=0,d=0;this.onStart=void 0,this.onLoad=i,this.onProgress=a,this.onError=t,this.itemStart=function(t){d++,!1===r&&void 0!==n.onStart&&n.onStart(t,p,d),r=!0},this.itemEnd=function(t){p++,void 0!==n.onProgress&&n.onProgress(t,p,d),p===d&&(r=!1,void 0!==n.onLoad)&&n.onLoad()},this.itemError=function(){}},se.DefaultLoadingManager=new se.LoadingManager,se.BufferGeometryLoader=function(){},se.BufferGeometryLoader.prototype={constructor:se.BufferGeometryLoader,load:function(){},parse:function(){}},se.MaterialLoader=function(){},se.MaterialLoader.prototype={constructor:se.MaterialLoader,load:function(){},setTextures:function(){},getTexture:function(){},parse:function(){}},se.ObjectLoader=function(){},se.ObjectLoader.prototype={constructor:se.ObjectLoader,load:function(){},setTexturePath:function(){},setCrossOrigin:function(){},parse:function(){},parseGeometries:function(){},parseMaterials:function(){},parseAnimations:function(){},parseImages:function(){},parseTextures:function(){},parseObject:new se.Matrix4},se.TextureLoader=function(){},se.TextureLoader.prototype={constructor:se.TextureLoader,load:function(){},setCrossOrigin:function(){},setPath:function(){}},se.CubeTextureLoader=function(){},se.CubeTextureLoader.prototype={constructor:se.CubeTextureLoader,load:function(){},setCrossOrigin:function(){},setPath:function(){}},se.DataTextureLoader=se.BinaryTextureLoader=function(){},se.BinaryTextureLoader.prototype={constructor:se.BinaryTextureLoader,load:function(){}},se.CompressedTextureLoader=function(){},se.CompressedTextureLoader.prototype={constructor:se.CompressedTextureLoader,load:function(){},setPath:function(){}},se.Material=function(){Object.defineProperty(this,"id",{value:se.MaterialIdCount++}),this.uuid=se.Math.generateUUID(),this.name="",this.type="Material",this.side=se.FrontSide,this.opacity=1,this.transparent=!1,this.blending=se.NormalBlending,this.blendSrc=se.SrcAlphaFactor,this.blendDst=se.OneMinusSrcAlphaFactor,this.blendEquation=se.AddEquation,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.depthFunc=se.LessEqualDepth,this.colorWrite=this.depthWrite=this.depthTest=!0,this.precision=null,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.premultipliedAlpha=!1,this.overdraw=0,this._needsUpdate=this.visible=!0},se.Material.prototype={constructor:se.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){!0===t&&this.update(),this._needsUpdate=t},setValues:function(e){if(void 0!==e)for(var a in e){var o=e[a];if(void 0===o);else{var r=this[a];void 0===r||(r instanceof se.Color?r.set(o):r instanceof se.Vector3&&o instanceof se.Vector3?r.copy(o):this[a]="overdraw"===a?+o:o)}}},toJSON:function(){},clone:function(){},copy:function(){},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},se.EventDispatcher.prototype.apply(se.Material.prototype),se.MaterialIdCount=0,se.LineBasicMaterial=function(){},se.LineBasicMaterial.prototype=Object.create(se.Material.prototype),se.LineBasicMaterial.prototype.constructor=se.LineBasicMaterial,se.LineBasicMaterial.prototype.copy=function(){},se.LineDashedMaterial=function(){},se.LineDashedMaterial.prototype=Object.create(se.Material.prototype),se.LineDashedMaterial.prototype.constructor=se.LineDashedMaterial,se.LineDashedMaterial.prototype.copy=function(){},se.MeshBasicMaterial=function(){},se.MeshBasicMaterial.prototype=Object.create(se.Material.prototype),se.MeshBasicMaterial.prototype.constructor=se.MeshBasicMaterial,se.MeshBasicMaterial.prototype.copy=function(){},se.MeshLambertMaterial=function(){},se.MeshLambertMaterial.prototype=Object.create(se.Material.prototype),se.MeshLambertMaterial.prototype.constructor=se.MeshLambertMaterial,se.MeshLambertMaterial.prototype.copy=function(){},se.MeshPhongMaterial=function(){},se.MeshPhongMaterial.prototype=Object.create(se.Material.prototype),se.MeshPhongMaterial.prototype.constructor=se.MeshPhongMaterial,se.MeshPhongMaterial.prototype.copy=function(){},se.MeshStandardMaterial=function(){},se.MeshStandardMaterial.prototype=Object.create(se.Material.prototype),se.MeshStandardMaterial.prototype.constructor=se.MeshStandardMaterial,se.MeshStandardMaterial.prototype.copy=function(){},se.MeshDepthMaterial=function(){},se.MeshDepthMaterial.prototype=Object.create(se.Material.prototype),se.MeshDepthMaterial.prototype.constructor=se.MeshDepthMaterial,se.MeshDepthMaterial.prototype.copy=function(){},se.MeshNormalMaterial=function(){},se.MeshNormalMaterial.prototype=Object.create(se.Material.prototype),se.MeshNormalMaterial.prototype.constructor=se.MeshNormalMaterial,se.MeshNormalMaterial.prototype.copy=function(){},se.MultiMaterial=function(){},se.MultiMaterial.prototype={constructor:se.MultiMaterial,toJSON:function(){},clone:function(){}},se.PointsMaterial=function(){},se.PointsMaterial.prototype=Object.create(se.Material.prototype),se.PointsMaterial.prototype.constructor=se.PointsMaterial,se.PointsMaterial.prototype.copy=function(){},se.ShaderMaterial=function(t){se.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=se.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=se.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(t.attributes,this.setValues(t))},se.ShaderMaterial.prototype=Object.create(se.Material.prototype),se.ShaderMaterial.prototype.constructor=se.ShaderMaterial,se.ShaderMaterial.prototype.copy=function(){},se.ShaderMaterial.prototype.toJSON=function(){},se.RawShaderMaterial=function(){},se.RawShaderMaterial.prototype=Object.create(se.ShaderMaterial.prototype),se.RawShaderMaterial.prototype.constructor=se.RawShaderMaterial,se.SpriteMaterial=function(){},se.SpriteMaterial.prototype=Object.create(se.Material.prototype),se.SpriteMaterial.prototype.constructor=se.SpriteMaterial,se.SpriteMaterial.prototype.copy=function(){},se.Texture=function(l,a,s,o,t,e,n,i,r){Object.defineProperty(this,"id",{value:se.TextureIdCount++}),this.uuid=se.Math.generateUUID(),this.sourceFile=this.name="",this.image=void 0===l?se.Texture.DEFAULT_IMAGE:l,this.mipmaps=[],this.mapping=void 0===a?se.Texture.DEFAULT_MAPPING:a,this.wrapS=void 0===s?se.ClampToEdgeWrapping:s,this.wrapT=void 0===o?se.ClampToEdgeWrapping:o,this.magFilter=void 0===t?se.LinearFilter:t,this.minFilter=void 0===e?se.LinearMipMapLinearFilter:e,this.anisotropy=void 0===r?1:r,this.format=void 0===n?se.RGBAFormat:n,this.type=void 0===i?se.UnsignedByteType:i,this.offset=new se.Vector2(0,0),this.repeat=new se.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=se.LinearEncoding,this.version=0,this.onUpdate=null},se.Texture.DEFAULT_IMAGE=void 0,se.Texture.DEFAULT_MAPPING=se.UVMapping,se.Texture.prototype={constructor:se.Texture,set needsUpdate(t){!0===t&&this.version++},clone:function(){},copy:function(){},toJSON:function(){},dispose:function(){},transformUv:function(){}},se.EventDispatcher.prototype.apply(se.Texture.prototype),se.TextureIdCount=0,se.CanvasTexture=function(){},se.CanvasTexture.prototype=Object.create(se.Texture.prototype),se.CanvasTexture.prototype.constructor=se.CanvasTexture,se.CubeTexture=function(){},se.CubeTexture.prototype=Object.create(se.Texture.prototype),se.CubeTexture.prototype.constructor=se.CubeTexture,Object.defineProperty(se.CubeTexture.prototype,"images",{get:function(){},set:function(){}}),se.CompressedTexture=function(){},se.CompressedTexture.prototype=Object.create(se.Texture.prototype),se.CompressedTexture.prototype.constructor=se.CompressedTexture,se.DataTexture=function(){},se.DataTexture.prototype=Object.create(se.Texture.prototype),se.DataTexture.prototype.constructor=se.DataTexture,window.onload=se.VideoTexture=async function(){},se.VideoTexture.prototype=Object.create(se.Texture.prototype),se.VideoTexture.prototype.constructor=se.VideoTexture,se.Group=function(){},se.Group.prototype=Object.create(se.Object3D.prototype),se.Group.prototype.constructor=se.Group,se.Points=function(){},se.Points.prototype=Object.create(se.Object3D.prototype),se.Points.prototype.constructor=se.Points,se.Points.prototype.raycast=(new se.Matrix4,new se.Ray,new se.Sphere),se.Points.prototype.clone=function(){},se.Line=function(){},se.Line.prototype=Object.create(se.Object3D.prototype),se.Line.prototype.constructor=se.Line,se.Line.prototype.raycast=(new se.Matrix4,new se.Ray,new se.Sphere),se.Line.prototype.clone=function(){},se.LineStrip=0,se.LinePieces=1,se.LineSegments=function(){},se.LineSegments.prototype=Object.create(se.Line.prototype),se.LineSegments.prototype.constructor=se.LineSegments,se.Mesh=function(e,r){se.Object3D.call(this),this.type="Mesh",this.geometry=void 0===e?new se.Geometry:e,this.material=void 0===r?new se.MeshBasicMaterial({color:16777215*Math.random()}):r,this.drawMode=se.TrianglesDrawMode,this.updateMorphTargets()},se.Mesh.prototype=Object.create(se.Object3D.prototype),se.Mesh.prototype.constructor=se.Mesh,se.Mesh.prototype.setDrawMode=function(){},se.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};var e=0,t=this.geometry.morphTargets.length;for(e,t;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},se.Mesh.prototype.getMorphTargetIndexByName=function(){},se.Mesh.prototype.raycast=void 0,se.Mesh.prototype.clone=function(){},se.Bone=function(){},se.Bone.prototype=Object.create(se.Object3D.prototype),se.Bone.prototype.constructor=se.Bone,se.Bone.prototype.copy=function(){},se.Skeleton=function(){},se.Skeleton.prototype.calculateInverses=function(){},se.Skeleton.prototype.pose=function(){},se.Skeleton.prototype.update=new se.Matrix4,se.Skeleton.prototype.clone=function(){},se.SkinnedMesh=function(){},se.SkinnedMesh.prototype=Object.create(se.Mesh.prototype),se.SkinnedMesh.prototype.constructor=se.SkinnedMesh,se.SkinnedMesh.prototype.bind=function(){},se.SkinnedMesh.prototype.pose=function(){},se.SkinnedMesh.prototype.normalizeSkinWeights=function(){},se.SkinnedMesh.prototype.updateMatrixWorld=function(){},se.SkinnedMesh.prototype.clone=function(){},se.LOD=function(){},se.LOD.prototype=Object.create(se.Object3D.prototype),se.LOD.prototype.constructor=se.LOD,se.LOD.prototype.addLevel=function(){},se.LOD.prototype.getObjectForDistance=function(){},se.LOD.prototype.raycast=new se.Vector3,se.LOD.prototype.update=(new se.Vector3,new se.Vector3),se.LOD.prototype.copy=function(){},se.LOD.prototype.toJSON=function(){},se.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),a=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),o=new Float32Array([0,0,1,0,1,1,0,1]),r=new se.BufferGeometry;return r.setIndex(new se.BufferAttribute(e,1)),r.addAttribute("position",new se.BufferAttribute(a,3)),r.addAttribute("uv",new se.BufferAttribute(o,2)),function(){}}(),se.Sprite.prototype=Object.create(se.Object3D.prototype),se.Sprite.prototype.constructor=se.Sprite,se.Sprite.prototype.raycast=new se.Vector3,se.Sprite.prototype.clone=function(){},se.Particle=se.Sprite,se.LensFlare=function(){},se.LensFlare.prototype=Object.create(se.Object3D.prototype),se.LensFlare.prototype.constructor=se.LensFlare,se.LensFlare.prototype.add=function(){},se.LensFlare.prototype.updateLensFlares=function(){},se.LensFlare.prototype.copy=function(){},se.Scene=function(){se.Object3D.call(this),this.type="Scene",this.overrideMaterial=this.fog=null,this.autoUpdate=!0},se.Scene.prototype=Object.create(se.Object3D.prototype),se.Scene.prototype.constructor=se.Scene,se.Scene.prototype.copy=function(){},se.Fog=function(){},se.Fog.prototype.clone=function(){},se.FogExp2=function(){},se.FogExp2.prototype.clone=function(){},se.ShaderChunk={},se.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",se.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",se.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",se.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",se.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",se.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",se.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",se.ShaderChunk.bsdfs="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",se.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",se.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",se.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",se.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",se.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",se.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",se.ShaderChunk.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\nconst float cubeUV_textureSize = 1024.0;\nint getFaceFromDirection(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    int face = -1;\n    if( absDirection.x > absDirection.z ) {\n        if(absDirection.x > absDirection.y )\n            face = direction.x > 0.0 ? 0 : 3;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    else {\n        if(absDirection.z > absDirection.y )\n            face = direction.z > 0.0 ? 2 : 5;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    return face;\n}\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n    float dxRoughness = dFdx(roughness);\n    float dyRoughness = dFdy(roughness);\n    vec3 dx = dFdx( vec * scale * dxRoughness );\n    vec3 dy = dFdy( vec * scale * dyRoughness );\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\n    float mipLevel = 0.5 * log2(d);\n    return vec2(floor(mipLevel), fract(mipLevel));\n}\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n    float a = 16.0 * cubeUV_rcpTextureSize;\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n    float powScale = exp2_packed.x * exp2_packed.y;\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n    bool bRes = mipLevel == 0.0;\n    scale =  bRes && (scale < a) ? a : scale;\n    vec3 r;\n    vec2 offset;\n    int face = getFaceFromDirection(direction);\n    float rcpPowScale = 1.0 / powScale;\n    if( face == 0) {\n        r = vec3(direction.x, -direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 1) {\n        r = vec3(direction.y, direction.x, direction.z);\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 2) {\n        r = vec3(direction.z, direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 3) {\n        r = vec3(direction.x, direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else if( face == 4) {\n        r = vec3(direction.y, direction.x, -direction.z);\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else {\n        r = vec3(direction.z, -direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    r = normalize(r);\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n    vec2 base = offset + vec2( texelOffset );\n    return base + s * ( scale - 2.0 * texelOffset );\n}\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n    float roughnessVal = roughness* cubeUV_maxLods3;\n    float r1 = floor(roughnessVal);\n    float r2 = r1 + 1.0;\n    float t = fract(roughnessVal);\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n    float s = mipInfo.y;\n    float level0 = mipInfo.x;\n    float level1 = level0 + 1.0;\n    level1 = level1 > 5.0 ? 5.0 : level1;\n    level0 += min( floor( s + 0.5 ), 5.0 );\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n    vec4 result = mix(color10, color20, t);\n    return vec4(result.rgb, 1.0);\n}\n#endif\n",se.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",se.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",se.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",se.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",se.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",se.ShaderChunk.encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",se.ShaderChunk.encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",se.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",se.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( STANDARD )\n\tuniform float reflectivity;\n\tuniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",se.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvarying vec3 vReflect;\n\tuniform float refractionRatio;\n#endif\n",se.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t#ifdef ENVMAP_MODE_REFLECTION\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t#else\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t#endif\n#endif\n",se.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",se.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",se.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",se.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",se.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tdirectLight = getPointDirectLightIrradiance( pointLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",se.ShaderChunk.lights_pars="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tIncidentLight getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tIncidentLight getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\n\t\t\tdirectLight.color = pointLight.color;\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tIncidentLight getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry ) {\n\t\tIncidentLight directLight;\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t\treturn directLight;\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#else\n\t\t\tfloat flipNormal = 1.0;\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t#endif\n\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",se.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",se.ShaderChunk.lights_phong_pars_fragment="#ifdef USE_ENVMAP\n\tvarying vec3 vWorldPosition;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",se.ShaderChunk.lights_phong_pars_vertex="#ifdef USE_ENVMAP\n\tvarying vec3 vWorldPosition;\n#endif\n",se.ShaderChunk.lights_phong_vertex="#ifdef USE_ENVMAP\n\tvWorldPosition = worldPosition.xyz;\n#endif\n",se.ShaderChunk.lights_standard_fragment="StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n",se.ShaderChunk.lights_standard_pars_fragment="struct StandardMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n};\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Standard\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",se.ShaderChunk.lights_template="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tdirectLight = getPointDirectLightIrradiance( pointLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tdirectLight = getSpotDirectLightIrradiance( spotLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tdirectLight = getDirectionalDirectLightIrradiance( directionalLight, geometry );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n",se.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",se.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",se.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",se.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",se.ShaderChunk.map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",se.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",se.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",se.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",se.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",se.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",se.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",se.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",se.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",se.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",se.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",se.ShaderChunk.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",se.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",se.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",se.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",se.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\treturn dot( rgba_depth, bit_shift );\n\t}\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",se.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",se.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",se.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",se.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",se.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",se.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",se.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",se.ShaderChunk.specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",se.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",se.ShaderChunk.tonemapping_fragment="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",se.ShaderChunk.tonemapping_pars_fragment="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",se.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",se.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",se.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",se.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",se.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",se.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",se.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",se.UniformsUtils={merge:function(o){var r={},t=0;for(r,t;t<o.length;t++){var i=this.clone(o[t]),a;for(a in i)r[a]=i[a]}return r},clone:function(r){var e={},a;for(a in r)for(var n in e[a]={},r[a]){var o=r[a][n];e[a][n]=o instanceof se.Color||o instanceof se.Vector2||o instanceof se.Vector3||o instanceof se.Vector4||o instanceof se.Matrix3||o instanceof se.Matrix4||o instanceof se.Texture?o.clone():Array.isArray(o)?o.slice():o}return e}},se.UniformsLib={common:{diffuse:{type:"c",value:new se.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new se.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new se.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new se.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"f"},coneCos:{type:"f"},penumbraCos:{type:"f"},decay:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"f"},distance:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new se.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new se.Vector4(0,0,1,1)}}},se.ShaderChunk.cube_frag="uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\t#include <logdepthbuf_fragment>\n}\n",se.ShaderChunk.cube_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.depth_frag="uniform float mNear;\nuniform float mFar;\nuniform float opacity;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\t#else\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\t#endif\n\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\n\tgl_FragColor = vec4( vec3( color ), opacity );\n}\n",se.ShaderChunk.depth_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.depthRGBA_frag="#include <common>\n#include <logdepthbuf_pars_fragment>\nvec4 pack_depth( const in float depth ) {\n\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bit_mask;\n\treturn res;\n}\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n\t#else\n\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n\t#endif\n}\n",se.ShaderChunk.depthRGBA_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.distanceRGBA_frag="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\nvec4 pack1K ( float depth ) {\n\tdepth /= 1000.0;\n\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n\tres -= res.xxyz * bitMsk;\n\treturn res;\n}\nfloat unpack1K ( vec4 color ) {\n\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\treturn dot( color, bitSh ) * 1000.0;\n}\nvoid main () {\n\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n}\n",se.ShaderChunk.distanceRGBA_vert="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\tvWorldPosition = worldPosition;\n}\n",se.ShaderChunk.equirect_frag="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <logdepthbuf_fragment>\n}\n",se.ShaderChunk.equirect_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight;\n\treflectedLight.directDiffuse = vec3( 0.0 );\n\treflectedLight.directSpecular = vec3( 0.0 );\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\n\treflectedLight.indirectSpecular = vec3( 0.0 );\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n}\n",se.ShaderChunk.meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n}\n",se.ShaderChunk.meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <lights_phong_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_phong_vertex>\n\t#include <shadowmap_vertex>\n}\n",se.ShaderChunk.meshstandard_frag="#define STANDARD\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_standard_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_standard_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.meshstandard_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n}\n",se.ShaderChunk.normal_frag="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n\t#include <logdepthbuf_fragment>\n}\n",se.ShaderChunk.normal_vert="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\tvNormal = normalize( normalMatrix * normal );\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n}\n",se.ShaderChunk.points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",se.ShaderChunk.points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n",se.ShaderLib={basic:{uniforms:se.UniformsUtils.merge([se.UniformsLib.common,se.UniformsLib.aomap,se.UniformsLib.fog]),vertexShader:se.ShaderChunk.meshbasic_vert,fragmentShader:se.ShaderChunk.meshbasic_frag},lambert:{uniforms:se.UniformsUtils.merge([se.UniformsLib.common,se.UniformsLib.aomap,se.UniformsLib.lightmap,se.UniformsLib.emissivemap,se.UniformsLib.fog,se.UniformsLib.lights,{emissive:{type:"c",value:new se.Color(0)}}]),vertexShader:se.ShaderChunk.meshlambert_vert,fragmentShader:se.ShaderChunk.meshlambert_frag},phong:{uniforms:se.UniformsUtils.merge([se.UniformsLib.common,se.UniformsLib.aomap,se.UniformsLib.lightmap,se.UniformsLib.emissivemap,se.UniformsLib.bumpmap,se.UniformsLib.normalmap,se.UniformsLib.displacementmap,se.UniformsLib.fog,se.UniformsLib.lights,{emissive:{type:"c",value:new se.Color(0)},specular:{type:"c",value:new se.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:se.ShaderChunk.meshphong_vert,fragmentShader:se.ShaderChunk.meshphong_frag},standard:{uniforms:se.UniformsUtils.merge([se.UniformsLib.common,se.UniformsLib.aomap,se.UniformsLib.lightmap,se.UniformsLib.emissivemap,se.UniformsLib.bumpmap,se.UniformsLib.normalmap,se.UniformsLib.displacementmap,se.UniformsLib.roughnessmap,se.UniformsLib.metalnessmap,se.UniformsLib.fog,se.UniformsLib.lights,{emissive:{type:"c",value:new se.Color(0)},roughness:{type:"f",value:.5},metalness:{type:"f",value:0},envMapIntensity:{type:"f",value:1}}]),vertexShader:se.ShaderChunk.meshstandard_vert,fragmentShader:se.ShaderChunk.meshstandard_frag},points:{uniforms:se.UniformsUtils.merge([se.UniformsLib.points,se.UniformsLib.fog]),vertexShader:se.ShaderChunk.points_vert,fragmentShader:se.ShaderChunk.points_frag},dashed:{uniforms:se.UniformsUtils.merge([se.UniformsLib.common,se.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:se.ShaderChunk.linedashed_vert,fragmentShader:se.ShaderChunk.linedashed_frag},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:se.ShaderChunk.depth_vert,fragmentShader:se.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:se.ShaderChunk.normal_vert,fragmentShader:se.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:se.ShaderChunk.cube_vert,fragmentShader:se.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:se.ShaderChunk.equirect_vert,fragmentShader:se.ShaderChunk.equirect_frag},depthRGBA:{uniforms:{},vertexShader:se.ShaderChunk.depthRGBA_vert,fragmentShader:se.ShaderChunk.depthRGBA_frag},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new se.Vector3(0,0,0)}},vertexShader:se.ShaderChunk.distanceRGBA_vert,fragmentShader:se.ShaderChunk.distanceRGBA_frag}},window.onload=se.WebGLRenderer=function(e){function u(e,t,i,l){!0===g&&(e*=l,t*=l,i*=l),Ce.clearColor(e,t,i,l)}function T(){}function s(){}function L(){}async function r(){}function h(){}function I(e,a,r,o,l){var i;r.transparent?(o=Y,i=++q):(o=x,i=++j),void 0===(i=o[i])?(i={id:e.id,object:e,geometry:a,material:r,z:_e.z,group:l},o.push(i)):(i.id=e.id,i.object=e,i.geometry=a,i.material=r,i.z=_e.z,i.group=l)}async function F(r,a){(async()=>{if(!1!==(await r.visible)){if(r.layers.test(a.layers))if(r instanceof(await se.Light))await z.push(r);else if(r instanceof se.Sprite)!1!==r.frustumCulled&&!0!==fe.intersectsObject(r)||D.push(r);else if(r instanceof se.LensFlare)S.push(r);else if(r instanceof se.ImmediateRenderObject)!0===Z.sortObjects&&(_e.setFromMatrixPosition(r.matrixWorld),_e.applyProjection(he)),I(r,null,r.material,_e.z,null);else if((r instanceof se.Mesh||r instanceof se.Line||r instanceof se.Points)&&(r instanceof se.SkinnedMesh&&r.skeleton.update(),!1===r.frustumCulled||!0===fe.intersectsObject(r))&&!0===(n=r.material).visible){!0===Z.sortObjects&&(_e.setFromMatrixPosition(r.matrixWorld),_e.applyProjection(he));var t=Ae.update(r);if(n instanceof se.MultiMaterial)for(var l=t.groups,o=n.materials,n=0,p=l.length;n<p;n++){var u=l[n],d=o[u.materialIndex];!0===d.visible&&I(r,t,d,_e.z,u)}else I(r,t,n,_e.z,null)}for(n=0,p=(t=r.children).length;n<p;n++)F(t[n],a)}})()}async function A(r,a,t,e){(async()=>{var o=0,c=r.length;for(o,c;o<c;o++){var n=(p=r[o]).object,l=p.geometry,s=void 0===e?p.material:e,p=p.group;await n.modelViewMatrix.multiplyMatrices(await a.matrixWorldInverse,await n.matrixWorld),await n.normalMatrix.getNormalMatrix(await n.modelViewMatrix),(await n)instanceof se.ImmediateRenderObject?(f(s),C(a,t,s,n),J="",n.render(async function(){})):await Z.renderBufferDirect(await a,await t,await l,await s,await n,await p)}})()}async function f(t){t.side===se.DoubleSide?Ce.disable(ye.CULL_FACE):Ce.enable(ye.CULL_FACE),Ce.setFlipSided(t.side===se.BackSide),!0===t.transparent?Ce.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha):Ce.setBlending(se.NoBlending),Ce.setDepthFunc(t.depthFunc),Ce.setDepthTest(t.depthTest),Ce.setDepthWrite(t.depthWrite),Ce.setColorWrite(t.colorWrite),Ce.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}async function C(e,t,l,s){H=0;var n=Pe.get(l),p;if(void 0===n.program&&(l.needsUpdate=!0),void 0!==n.lightsHash&&n.lightsHash!==ve.hash&&(l.needsUpdate=!0),l.needsUpdate){t:{var m=Pe.get(l),f=De.getParameters(l,ve,t,s),g=De.getProgramCode(l,f),S=m.program,M=!0;if(void 0===S)l.addEventListener("dispose",L);else if(S.code!==g);else{if(void 0!==f.shaderID)break t;M=!1}if(M&&(f.shaderID?(S=se.ShaderLib[f.shaderID],m.__webglShader={name:l.type,uniforms:se.UniformsUtils.clone(S.uniforms),vertexShader:S.vertexShader,fragmentShader:S.fragmentShader}):m.__webglShader={name:l.type,uniforms:l.uniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader},l.__webglShader=m.__webglShader,S=De.acquireProgram(l,f,g),m.program=S,l.program=S),f=S.getAttributes(),l.morphTargets)for(g=l.numSupportedMorphTargets=0;g<Z.maxMorphTargets;g++)0<=f["morphTarget"+g]&&l.numSupportedMorphTargets++;if(l.morphNormals)for(g=l.numSupportedMorphNormals=0;g<Z.maxMorphNormals;g++)0<=f["morphNormal"+g]&&l.numSupportedMorphNormals++;for(var T in m.uniformsList=[],f=m.__webglShader.uniforms,g=m.program.getUniforms(),f)(S=g[T])&&m.uniformsList.push([m.__webglShader.uniforms[T],S]);for((l instanceof se.MeshPhongMaterial||l instanceof se.MeshLambertMaterial||l instanceof se.MeshStandardMaterial||l.lights)&&(m.lightsHash=ve.hash,f.ambientLightColor.value=ve.ambient,f.directionalLights.value=ve.directional,f.spotLights.value=ve.spot,f.pointLights.value=ve.point,f.hemisphereLights.value=ve.hemi,f.directionalShadowMap.value=ve.directionalShadowMap,f.directionalShadowMatrix.value=ve.directionalShadowMatrix,f.spotShadowMap.value=ve.spotShadowMap,f.spotShadowMatrix.value=ve.spotShadowMatrix,f.pointShadowMap.value=ve.pointShadowMap,f.pointShadowMatrix.value=ve.pointShadowMatrix),m.hasDynamicUniforms=!1,T=0,f=m.uniformsList.length;T<f;T++)if(!0===m.uniformsList[T][0].dynamic){m.hasDynamicUniforms=!0;break}}l.needsUpdate=!1}if(S=g=M=!1,T=(m=n.program).getUniforms(),f=n.__webglShader.uniforms,m.id!==N&&(ye.useProgram(m.program),N=m.id,S=g=M=!0),l.id!==X&&(X=l.id,g=!0),(M||e!==ee)&&(ye.uniformMatrix4fv(T.projectionMatrix,!1,e.projectionMatrix.elements),Ee.logarithmicDepthBuffer&&ye.uniform1f(T.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==ee&&(ee=e,S=g=!0),(l instanceof se.ShaderMaterial||l instanceof se.MeshPhongMaterial||l instanceof se.MeshStandardMaterial||l.envMap)&&void 0!==T.cameraPosition&&(_e.setFromMatrixPosition(e.matrixWorld),ye.uniform3f(T.cameraPosition,_e.x,_e.y,_e.z)),(l instanceof se.MeshPhongMaterial||l instanceof se.MeshLambertMaterial||l instanceof se.MeshBasicMaterial||l instanceof se.MeshStandardMaterial||l instanceof se.ShaderMaterial||l.skinning)&&void 0!==T.viewMatrix&&ye.uniformMatrix4fv(T.viewMatrix,!1,e.matrixWorldInverse.elements),void 0!==T.toneMappingExposure&&ye.uniform1f(T.toneMappingExposure,Z.toneMappingExposure),void 0!==T.toneMappingWhitePoint&&ye.uniform1f(T.toneMappingWhitePoint,Z.toneMappingWhitePoint)),l.skinning&&(s.bindMatrix&&void 0!==T.bindMatrix&&ye.uniformMatrix4fv(T.bindMatrix,!1,s.bindMatrix.elements),s.bindMatrixInverse&&void 0!==T.bindMatrixInverse&&ye.uniformMatrix4fv(T.bindMatrixInverse,!1,s.bindMatrixInverse.elements),Ee.floatVertexTextures&&s.skeleton&&s.skeleton.useVertexTexture?(void 0!==T.boneTexture&&(M=w(),ye.uniform1i(T.boneTexture,M),Z.setTexture(s.skeleton.boneTexture,M)),void 0!==T.boneTextureWidth&&ye.uniform1i(T.boneTextureWidth,s.skeleton.boneTextureWidth),void 0!==T.boneTextureHeight&&ye.uniform1i(T.boneTextureHeight,s.skeleton.boneTextureHeight)):s.skeleton&&s.skeleton.boneMatrices&&void 0!==T.boneGlobalMatrices&&ye.uniformMatrix4fv(T.boneGlobalMatrices,!1,s.skeleton.boneMatrices)),g&&((l instanceof se.MeshPhongMaterial||l instanceof se.MeshLambertMaterial||l instanceof se.MeshStandardMaterial||l.lights)&&(g=S,f.ambientLightColor.needsUpdate=g,f.directionalLights.needsUpdate=g,f.pointLights.needsUpdate=g,f.spotLights.needsUpdate=g,f.hemisphereLights.needsUpdate=g),t&&l.fog&&(f.fogColor.value=t.color,t instanceof se.Fog?(f.fogNear.value=t.near,f.fogFar.value=t.far):t instanceof se.FogExp2&&(f.fogDensity.value=t.density)),(l instanceof se.MeshBasicMaterial||l instanceof se.MeshLambertMaterial||l instanceof se.MeshPhongMaterial||l instanceof se.MeshStandardMaterial)&&(f.opacity.value=l.opacity,f.diffuse.value=l.color,l.emissive&&f.emissive.value.copy(l.emissive).multiplyScalar(l.emissiveIntensity),f.map.value=l.map,f.specularMap.value=l.specularMap,f.alphaMap.value=l.alphaMap,l.aoMap&&(f.aoMap.value=l.aoMap,f.aoMapIntensity.value=l.aoMapIntensity),l.map?p=l.map:l.specularMap?p=l.specularMap:l.displacementMap?p=l.displacementMap:l.normalMap?p=l.normalMap:l.bumpMap?p=l.bumpMap:l.roughnessMap?p=l.roughnessMap:l.metalnessMap?p=l.metalnessMap:l.alphaMap?p=l.alphaMap:l.emissiveMap&&(p=l.emissiveMap),void 0!==p&&(p instanceof se.WebGLRenderTarget&&(p=p.texture),t=p.offset,p=p.repeat,f.offsetRepeat.value.set(t.x,t.y,p.x,p.y)),f.envMap.value=l.envMap,f.flipEnvMap.value=l.envMap instanceof se.WebGLRenderTargetCube?1:-1,f.reflectivity.value=l.reflectivity,f.refractionRatio.value=l.refractionRatio),l instanceof se.LineBasicMaterial?(f.diffuse.value=l.color,f.opacity.value=l.opacity):l instanceof se.LineDashedMaterial?(f.diffuse.value=l.color,f.opacity.value=l.opacity,f.dashSize.value=l.dashSize,f.totalSize.value=l.dashSize+l.gapSize,f.scale.value=l.scale):l instanceof se.PointsMaterial?(f.diffuse.value=l.color,f.opacity.value=l.opacity,f.size.value=l.size*ue,f.scale.value=i.clientHeight/2,f.map.value=l.map,null!==l.map&&(p=l.map.offset,l=l.map.repeat,f.offsetRepeat.value.set(p.x,p.y,l.x,l.y))):l instanceof se.MeshLambertMaterial?(l.lightMap&&(f.lightMap.value=l.lightMap,f.lightMapIntensity.value=l.lightMapIntensity),l.emissiveMap&&(f.emissiveMap.value=l.emissiveMap)):l instanceof se.MeshPhongMaterial?(f.specular.value=l.specular,f.shininess.value=Math.max(l.shininess,1e-4),l.lightMap&&(f.lightMap.value=l.lightMap,f.lightMapIntensity.value=l.lightMapIntensity),l.emissiveMap&&(f.emissiveMap.value=l.emissiveMap),l.bumpMap&&(f.bumpMap.value=l.bumpMap,f.bumpScale.value=l.bumpScale),l.normalMap&&(f.normalMap.value=l.normalMap,f.normalScale.value.copy(l.normalScale)),l.displacementMap&&(f.displacementMap.value=l.displacementMap,f.displacementScale.value=l.displacementScale,f.displacementBias.value=l.displacementBias)):l instanceof se.MeshStandardMaterial?(f.roughness.value=l.roughness,f.metalness.value=l.metalness,l.roughnessMap&&(f.roughnessMap.value=l.roughnessMap),l.metalnessMap&&(f.metalnessMap.value=l.metalnessMap),l.lightMap&&(f.lightMap.value=l.lightMap,f.lightMapIntensity.value=l.lightMapIntensity),l.emissiveMap&&(f.emissiveMap.value=l.emissiveMap),l.bumpMap&&(f.bumpMap.value=l.bumpMap,f.bumpScale.value=l.bumpScale),l.normalMap&&(f.normalMap.value=l.normalMap,f.normalScale.value.copy(l.normalScale)),l.displacementMap&&(f.displacementMap.value=l.displacementMap,f.displacementScale.value=l.displacementScale,f.displacementBias.value=l.displacementBias),l.envMap&&(f.envMapIntensity.value=l.envMapIntensity)):l instanceof se.MeshDepthMaterial?(f.mNear.value=e.near,f.mFar.value=e.far,f.opacity.value=l.opacity):l instanceof se.MeshNormalMaterial&&(f.opacity.value=l.opacity),o(n.uniformsList)),ye.uniformMatrix4fv(T.modelViewMatrix,!1,s.modelViewMatrix.elements),T.normalMatrix&&ye.uniformMatrix3fv(T.normalMatrix,!1,s.normalMatrix.elements),void 0!==T.modelMatrix&&ye.uniformMatrix4fv(T.modelMatrix,!1,s.matrixWorld.elements),!0===n.hasDynamicUniforms){for(l=[],p=0,t=(n=n.uniformsList).length;p<t;p++)void 0!==(f=(T=n[p][0]).onUpdateCallback)&&(f.bind(T)(s,e),l.push(n[p]));o(l)}return m}async function w(){var t=await H;return Ee.maxTextures,H+=1,t}async function B(e,t,i,o){var n;if("1i"===(await t))await ye.uniform1i(i,o);else if("1f"===t)ye.uniform1f(i,o);else if("2f"===t)ye.uniform2f(i,o[0],o[1]);else if("3f"===t)ye.uniform3f(i,o[0],o[1],o[2]);else if("4f"===t)ye.uniform4f(i,o[0],o[1],o[2],o[3]);else if("1iv"===t)ye.uniform1iv(i,o);else if("3iv"===t)ye.uniform3iv(i,o);else if("1fv"===t)ye.uniform1fv(i,o);else if("2fv"===t)ye.uniform2fv(i,o);else if("3fv"===t)ye.uniform3fv(i,o);else if("4fv"===t)ye.uniform4fv(i,o);else if("Matrix2fv"===t)ye.uniformMatrix2fv(i,!1,o);else if("Matrix3fv"===t)ye.uniformMatrix3fv(i,!1,o);else if("Matrix4fv"===t)ye.uniformMatrix4fv(i,!1,o);else if("i"===t)await ye.uniform1i(i,o);else if("f"===t)ye.uniform1f(i,o);else if("v2"===t)ye.uniform2f(i,o.x,o.y);else if("v3"===t)ye.uniform3f(i,o.x,o.y,o.z);else if("v4"===t)ye.uniform4f(i,o.x,o.y,o.z,o.w);else if("c"===t)ye.uniform3f(i,o.r,o.g,o.b);else if("s"===t)for(var s in e=e.properties){n=e[s];var p=i[s],d=o[s];B(n,n.type,p,d)}else if("sa"===t){e=e.properties,t=0;var c=o.length;for(c;t<c;t++)for(s in e)n=e[s],p=i[t][s],d=o[t][s],B(n,n.type,p,d)}else if("iv1"===t)ye.uniform1iv(i,o);else if("iv"===t)ye.uniform3iv(i,o);else if("fv1"===t)ye.uniform1fv(i,o);else if("fv"===t)ye.uniform3fv(i,o);else if("v2v"===t){for(void 0===e._array&&(e._array=new Float32Array(2*o.length)),n=t=0,s=o.length;t<s;t++,n+=2)e._array[n+0]=o[t].x,e._array[n+1]=o[t].y;ye.uniform2fv(i,e._array)}else if("v3v"===t){for(void 0===e._array&&(e._array=new Float32Array(3*o.length)),n=t=0,s=o.length;t<s;t++,n+=3)e._array[n+0]=o[t].x,e._array[n+1]=o[t].y,e._array[n+2]=o[t].z;ye.uniform3fv(i,e._array)}else if("v4v"===t){for(void 0===e._array&&(e._array=new Float32Array(4*o.length)),n=t=0,s=o.length;t<s;t++,n+=4)e._array[n+0]=o[t].x,e._array[n+1]=o[t].y,e._array[n+2]=o[t].z,e._array[n+3]=o[t].w;ye.uniform4fv(i,e._array)}else if("m2"===t)ye.uniformMatrix2fv(i,!1,o.elements);else if("m3"===t)ye.uniformMatrix3fv(i,!1,o.elements);else if("m3v"===t){for(void 0===e._array&&(e._array=new Float32Array(9*o.length)),t=0,s=o.length;t<s;t++)o[t].flattenToArrayOffset(e._array,9*t);ye.uniformMatrix3fv(i,!1,e._array)}else if("m4"===t)ye.uniformMatrix4fv(i,!1,o.elements);else if("m4v"===t){for(void 0===e._array&&(e._array=new Float32Array(16*o.length)),t=0,s=o.length;t<s;t++)o[t].flattenToArrayOffset(e._array,16*t);ye.uniformMatrix4fv(i,!1,e._array)}else if("t"===t)n=w(),await ye.uniform1i(await i,await n),(await o)&&((await o)instanceof se.CubeTexture||Array.isArray(await o.image)&&6===(await o.image.length)?await(await o,void(await n)):(await o)instanceof se.WebGLRenderTargetCube?await(await o.texture,void(await n)):(await o)instanceof se.WebGLRenderTarget?await Z.setTexture(await o.texture,await n):await Z.setTexture(await o,await n));else if("tv"===t){for(void 0===e._array&&(e._array=[]),t=0,s=e.value.length;t<s;t++)e._array[t]=w();for(ye.uniform1iv(i,e._array),t=0,s=e.value.length;t<s;t++)o=e.value[t],n=e._array[t],o&&(o instanceof se.CubeTexture||o.image instanceof Array&&6===o.image.length||(o instanceof se.WebGLRenderTarget?Z.setTexture(o.texture,n):o instanceof se.WebGLRenderTargetCube?o.texture:Z.setTexture(o,n)))}}function o(e){(async()=>{var r=0,o=await e.length,a;for(a,r,o;r<(await o);r++)!1!==(a=e[r][0]).needsUpdate&&B(a,a.type,e[r][1],a.value)})()}function E(a,r,t){t?(ye.texParameteri(a,ye.TEXTURE_WRAP_S,G(r.wrapS)),ye.texParameteri(a,ye.TEXTURE_WRAP_T,G(r.wrapT)),ye.texParameteri(a,ye.TEXTURE_MAG_FILTER,G(r.magFilter)),ye.texParameteri(a,ye.TEXTURE_MIN_FILTER,G(r.minFilter))):(ye.texParameteri(a,ye.TEXTURE_WRAP_S,ye.CLAMP_TO_EDGE),ye.texParameteri(a,ye.TEXTURE_WRAP_T,ye.CLAMP_TO_EDGE),r.wrapS===se.ClampToEdgeWrapping&&(r.wrapT,se.ClampToEdgeWrapping),ye.texParameteri(a,ye.TEXTURE_MAG_FILTER,void r.magFilter),ye.texParameteri(a,ye.TEXTURE_MIN_FILTER,void r.minFilter),r.minFilter!==se.NearestFilter&&(r.minFilter,se.LinearFilter)),(t=Le.get("EXT_texture_filter_anisotropic"))&&(1<r.anisotropy||Pe.get(r).__currentAnisotropy)&&(ye.texParameterf(a,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(r.anisotropy,Z.getMaxAnisotropy())),Pe.get(r).__currentAnisotropy=r.anisotropy)}function b(t){return se.Math.isPowerOfTwo(t.width)&&se.Math.isPowerOfTwo(t.height)}function G(e){var r;if(e===se.RepeatWrapping)return ye.REPEAT;if(e===se.ClampToEdgeWrapping)return ye.CLAMP_TO_EDGE;if(e===se.MirroredRepeatWrapping)return ye.MIRRORED_REPEAT;if(e===se.NearestFilter)return ye.NEAREST;if(e===se.NearestMipMapNearestFilter)return ye.NEAREST_MIPMAP_NEAREST;if(e===se.NearestMipMapLinearFilter)return ye.NEAREST_MIPMAP_LINEAR;if(e===se.LinearFilter)return ye.LINEAR;if(e===se.LinearMipMapNearestFilter)return ye.LINEAR_MIPMAP_NEAREST;if(e===se.LinearMipMapLinearFilter)return ye.LINEAR_MIPMAP_LINEAR;if(e===se.UnsignedByteType)return ye.UNSIGNED_BYTE;if(e===se.UnsignedShort4444Type)return ye.UNSIGNED_SHORT_4_4_4_4;if(e===se.UnsignedShort5551Type)return ye.UNSIGNED_SHORT_5_5_5_1;if(e===se.UnsignedShort565Type)return ye.UNSIGNED_SHORT_5_6_5;if(e===se.ByteType)return ye.BYTE;if(e===se.ShortType)return ye.SHORT;if(e===se.UnsignedShortType)return ye.UNSIGNED_SHORT;if(e===se.IntType)return ye.INT;if(e===se.UnsignedIntType)return ye.UNSIGNED_INT;if(e===se.FloatType)return ye.FLOAT;if(e===se.AlphaFormat)return ye.ALPHA;if(e===se.RGBFormat)return ye.RGB;if(e===se.RGBAFormat)return ye.RGBA;if(e===se.LuminanceFormat)return ye.LUMINANCE;if(e===se.LuminanceAlphaFormat)return ye.LUMINANCE_ALPHA;if(e===se.AddEquation)return ye.FUNC_ADD;if(e===se.SubtractEquation)return ye.FUNC_SUBTRACT;if(e===se.ReverseSubtractEquation)return ye.FUNC_REVERSE_SUBTRACT;if(e===se.ZeroFactor)return ye.ZERO;if(e===se.OneFactor)return ye.ONE;if(e===se.SrcColorFactor)return ye.SRC_COLOR;if(e===se.OneMinusSrcColorFactor)return ye.ONE_MINUS_SRC_COLOR;if(e===se.SrcAlphaFactor)return ye.SRC_ALPHA;if(e===se.OneMinusSrcAlphaFactor)return ye.ONE_MINUS_SRC_ALPHA;if(e===se.DstAlphaFactor)return ye.DST_ALPHA;if(e===se.OneMinusDstAlphaFactor)return ye.ONE_MINUS_DST_ALPHA;if(e===se.DstColorFactor)return ye.DST_COLOR;if(e===se.OneMinusDstColorFactor)return ye.ONE_MINUS_DST_COLOR;if(e===se.SrcAlphaSaturateFactor)return ye.SRC_ALPHA_SATURATE;if(null!==(r=Le.get("WEBGL_compressed_texture_s3tc"))){if(e===se.RGB_S3TC_DXT1_Format)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===se.RGBA_S3TC_DXT1_Format)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===se.RGBA_S3TC_DXT3_Format)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===se.RGBA_S3TC_DXT5_Format)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(r=Le.get("WEBGL_compressed_texture_pvrtc"))){if(e===se.RGB_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===se.RGB_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===se.RGBA_PVRTC_4BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===se.RGBA_PVRTC_2BPPV1_Format)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(r=Le.get("WEBGL_compressed_texture_etc1"))&&e===se.RGB_ETC1_Format)return r.COMPRESSED_RGB_ETC1_WEBGL;if(null!==(r=Le.get("EXT_blend_minmax"))){if(e===se.MinEquation)return r.MIN_EXT;if(e===se.MaxEquation)return r.MAX_EXT}return 0}var i=void 0===(e=e||{}).canvas?document.createElement("canvas"):e.canvas,a=void 0===e.context?null:e.context,n=void 0!==e.alpha&&e.alpha,l=void 0===e.depth||e.depth,p=void 0===e.stencil||e.stencil,d=void 0!==e.antialias&&e.antialias,g=void 0===e.premultipliedAlpha||e.premultipliedAlpha,_=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,z=[],x=[],j=-1,Y=[],q=-1,m=new Float32Array(8),D=[],S=[];this.domElement=i,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.gammaFactor=2,this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1,this.toneMapping=se.LinearToneMapping,this.toneMappingWhitePoint=this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var Z=this,N=null,v=null,y=null,X=-1,J="",ee=null,te=new se.Vector4,V=null,re=new se.Vector4,H=0,ae=new se.Color(0),W=0,oe=i.width,ce=i.height,ue=1,Se=new se.Vector4(0,0,oe,ce),ge=new se.Vector4(0,0,oe,ce),fe=new se.Frustum,he=new se.Matrix4,_e=new se.Vector3,ve={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[],shadowsPointLight:0},Te={geometries:0,textures:0},be={calls:0,vertices:0,faces:0,points:0},ye;this.info={render:be,memory:Te,programs:null};try{if(n={alpha:n,depth:l,stencil:p,antialias:d,premultipliedAlpha:g,preserveDrawingBuffer:_},null===(ye=a||i.getContext("webgl",n)||i.getContext("experimental-webgl",n))){if(null!==i.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}void 0===ye.getShaderPrecisionFormat&&(ye.getShaderPrecisionFormat=function(){}),i.addEventListener("webglcontextlost",function(){},!1)}catch(t){}var Le=new se.WebGLExtensions(ye);Le.get("OES_standard_derivatives"),Le.get("ANGLE_instanced_arrays"),Le.get("OES_element_index_uint")&&(se.BufferGeometry.MaxIndex=4294967296);var Ee=new se.WebGLCapabilities(ye,Le,e),Ce=new se.WebGLState(ye,Le,G),Pe=new se.WebGLProperties,Ae=new se.WebGLObjects(ye,Pe,this.info),De=new se.WebGLPrograms(this,Ee),Re=new se.WebGLLights;this.info.programs=De.programs;var $=new se.WebGLBufferRenderer(ye,Le,be),we=new se.WebGLIndexedBufferRenderer(ye,Le,be);Ce.init(),Ce.scissor(te.copy(Se).multiplyScalar(ue)),Ce.viewport(re.copy(ge).multiplyScalar(ue)),u(ae.r,ae.g,ae.b,W),this.context=ye,this.capabilities=Ee,this.extensions=Le,this.properties=Pe,this.state=Ce;var Be=new se.WebGLShadowMap(this,ve,Ae);this.shadowMap=Be;var Ue=new se.SpritePlugin(this,D),Ie=new se.LensFlarePlugin(this,S);this.getContext=function(){},this.getContextAttributes=function(){},this.forceContextLoss=function(){},this.getMaxAnisotropy=function(){},this.getPrecision=function(){return Ee.precision},this.getPixelRatio=function(){},this.setPixelRatio=function(t){void 0!==t&&(ue=t,this.setSize(ge.z,ge.w,!1))},this.getSize=function(){},this.setSize=async function(a,r,t){oe=a,ce=r,(async()=>{i.width=a*ue,i.height=r*ue})(),!1!==t&&(i.style.width=a+"px",i.style.height=r+"px"),await this.setViewport(0,0,a,r)},this.setViewport=function(e,a,o,r){Ce.viewport(ge.set(e,a,o,r))},this.setScissor=function(){},this.setScissorTest=function(){},this.getClearColor=function(){},this.setClearColor=function(r,e){ae.set(r),W=void 0===e?1:e,u(ae.r,ae.g,ae.b,W)},this.getClearAlpha=function(){},this.setClearAlpha=function(){},this.clear=async function(e,a,o){var r=0;(void 0===e||e)&&(r|=ye.COLOR_BUFFER_BIT),(void 0===a||a)&&(r|=ye.DEPTH_BUFFER_BIT),(void 0===o||o)&&(r|=ye.STENCIL_BUFFER_BIT),await ye.clear(await r)},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.clearTarget=function(){},this.resetGLState=function(){},this.dispose=function(){},this.renderBufferImmediate=function(){},this.renderBufferDirect=async function(o,n,c,i,_,d){(async()=>{await f(await i);var r=await C(await o,await n,await i,await _),a=!1;if((o=(await c.id)+"_"+(await r.id)+"_"+(await i.wireframe))!==(await J)&&(J=o,a=!0),void 0!==(n=await _.morphTargetInfluences)){o=[];var s=0;for(a=await n.length;s<(await a);s++)E=await n[await s],o.push([await E,await s]);o.sort(await p),8<(await o.length)&&(o.length=8);var p=await c.morphAttributes;for(s=0,a=await o.length;(await s)<(await a);await s++)E=await o[await s],m[s]=E[0],0===E[0]?(!0===i.morphTargets&&c.removeAttribute("morphTarget"+s),!0===i.morphNormals&&c.removeAttribute("morphNormal"+s)):(n=E[1],!0===i.morphTargets&&p.position&&c.addAttribute("morphTarget"+s,p.position[n]),!0===i.morphNormals&&p.normal&&c.addAttribute("morphNormal"+s,p.normal[n]));null!==(o=await r.getUniforms()).morphTargetInfluences&&(await ye.uniform1fv(await o.morphTargetInfluences,await m)),a=!0}if(n=await c.index,s=c.attributes.position,!0===i.wireframe&&(n=Ae.getWireframeAttribute(c)),null===n?o=$:(o=we).setIndex(n),a){var x;if(a=void 0,c instanceof se.InstancedBufferGeometry&&null===(x=Le.get("ANGLE_instanced_arrays")));else{void 0===a&&(a=0),Ce.initAttributes();var E=c.attributes,P;for(P in r=r.getAttributes(),p=i.defaultAttributeValues,r){var A=r[P];if(0<=A)if(void 0!==(T=E[P])){var y=T.itemSize,D=Ae.getAttributeBuffer(T);if(T instanceof se.InterleavedBufferAttribute){var M=T.data,b=M.stride,T=T.offset;M instanceof se.InstancedInterleavedBuffer?(Ce.enableAttributeAndDivisor(A,M.meshPerAttribute,x),void 0===c.maxInstancedCount&&(c.maxInstancedCount=M.meshPerAttribute*M.count)):Ce.enableAttribute(A),ye.bindBuffer(ye.ARRAY_BUFFER,D),ye.vertexAttribPointer(A,y,ye.FLOAT,!1,b*M.array.BYTES_PER_ELEMENT,(a*b+T)*M.array.BYTES_PER_ELEMENT)}else T instanceof se.InstancedBufferAttribute?(Ce.enableAttributeAndDivisor(A,T.meshPerAttribute,x),void 0===c.maxInstancedCount&&(c.maxInstancedCount=T.meshPerAttribute*T.count)):Ce.enableAttribute(A),ye.bindBuffer(ye.ARRAY_BUFFER,D),ye.vertexAttribPointer(A,y,ye.FLOAT,!1,0,4*(a*y))}else if(void 0!==p&&void 0!==(y=p[P]))switch(y.length){case 2:ye.vertexAttrib2fv(A,y);break;case 3:ye.vertexAttrib3fv(A,y);break;case 4:ye.vertexAttrib4fv(A,y);break;default:ye.vertexAttrib1fv(A,y);}}Ce.disableUnusedAttributes()}null!==n&&ye.bindBuffer(ye.ELEMENT_ARRAY_BUFFER,Ae.getAttributeBuffer(n))}if(x=1/0,null===n?void 0!==s&&(x=s.count):x=n.count,P=c.drawRange.start,n=c.drawRange.count,s=null===d?0:d.start,a=null===d?1/0:d.count,d=await Math.max(0,P,s),x=(await Math.min(0+x,P+n,s+a))-1,x=await Math.max(0,x-d+1),!(_ instanceof se.Mesh))_ instanceof se.Line?(void 0===(i=i.linewidth)&&(i=1),Ce.setLineWidth(i*(null===v?ue:1)),_ instanceof se.LineSegments?o.setMode(ye.LINES):o.setMode(ye.LINE_STRIP)):_ instanceof se.Points&&o.setMode(ye.POINTS);else if(!0===i.wireframe)Ce.setLineWidth(i.wireframeLinewidth*(null===v?ue:1)),o.setMode(ye.LINES);else switch(_.drawMode){case se.TrianglesDrawMode:o.setMode(ye.TRIANGLES);break;case se.TriangleStripDrawMode:o.setMode(ye.TRIANGLE_STRIP);break;case se.TriangleFanDrawMode:o.setMode(ye.TRIANGLE_FAN);}(await c)instanceof se.InstancedBufferGeometry?0<(await c.maxInstancedCount)&&(await o.renderInstances(await c,await d,await x)):await o.render(await d,await x)})()},this.render=async function(d,c,a,_){(async()=>{if(0==c instanceof se.Camera);else{var t=d.fog;J="",X=-1,ee=null,!0===(await d.autoUpdate)&&(await d.updateMatrixWorld()),null===c.parent&&c.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),he.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),await fe.setFromMatrix(await he),z.length=0,q=j=-1,D.length=0,S.length=0,F(d,c),x.length=j+1,Y.length=q+1,!0===(await Z.sortObjects)&&(await(await x.sort(await r),await Y.sort(await h)));var o=z,e=0,i=0,p=0,M=c.matrixWorldInverse,u=0,E=0,C=0,R=0,B=0,U,V,O,k,H,W;for(U=ve.shadowsPointLight=0,V=o.length;U<V;U++)if(k=(O=o[U]).color,H=O.intensity,W=O.distance,O instanceof se.AmbientLight)e+=k.r*H,i+=k.g*H,p+=k.b*H;else if(O instanceof se.DirectionalLight){var Q=Re.get(O);Q.color.copy(O.color).multiplyScalar(O.intensity),Q.direction.setFromMatrixPosition(O.matrixWorld),_e.setFromMatrixPosition(O.target.matrixWorld),Q.direction.sub(_e),Q.direction.transformDirection(M),(Q.shadow=O.castShadow)&&(Q.shadowBias=O.shadow.bias,Q.shadowRadius=O.shadow.radius,Q.shadowMapSize=O.shadow.mapSize,ve.shadows[B++]=O),ve.directionalShadowMap[u]=O.shadow.map,ve.directionalShadowMatrix[u]=O.shadow.matrix,ve.directional[u++]=Q}else O instanceof se.SpotLight?((Q=Re.get(O)).position.setFromMatrixPosition(O.matrixWorld),Q.position.applyMatrix4(M),Q.color.copy(k).multiplyScalar(H),Q.distance=W,Q.direction.setFromMatrixPosition(O.matrixWorld),_e.setFromMatrixPosition(O.target.matrixWorld),Q.direction.sub(_e),Q.direction.transformDirection(M),Q.coneCos=Math.cos(O.angle),Q.penumbraCos=Math.cos(O.angle*(1-O.penumbra)),Q.decay=0===O.distance?0:O.decay,(Q.shadow=O.castShadow)&&(Q.shadowBias=O.shadow.bias,Q.shadowRadius=O.shadow.radius,Q.shadowMapSize=O.shadow.mapSize,ve.shadows[B++]=O),ve.spotShadowMap[C]=O.shadow.map,ve.spotShadowMatrix[C]=O.shadow.matrix,ve.spot[C++]=Q):O instanceof se.PointLight?((Q=Re.get(O)).position.setFromMatrixPosition(O.matrixWorld),Q.position.applyMatrix4(M),Q.color.copy(O.color).multiplyScalar(O.intensity),Q.distance=O.distance,Q.decay=0===O.distance?0:O.decay,(Q.shadow=O.castShadow)&&(Q.shadowBias=O.shadow.bias,Q.shadowRadius=O.shadow.radius,Q.shadowMapSize=O.shadow.mapSize,ve.shadows[B++]=O),ve.pointShadowMap[E]=O.shadow.map,void 0===ve.pointShadowMatrix[E]&&(ve.pointShadowMatrix[E]=new se.Matrix4),_e.setFromMatrixPosition(O.matrixWorld).negate(),ve.pointShadowMatrix[E].identity().setPosition(_e),ve.point[E++]=Q):O instanceof se.HemisphereLight&&((Q=Re.get(O)).direction.setFromMatrixPosition(O.matrixWorld),Q.direction.transformDirection(M),Q.direction.normalize(),Q.skyColor.copy(O.color).multiplyScalar(H),Q.groundColor.copy(O.groundColor).multiplyScalar(H),ve.hemi[R++]=Q);ve.ambient[0]=e,ve.ambient[1]=i,ve.ambient[2]=p,ve.directional.length=u,ve.spot.length=C,ve.point.length=E,ve.hemi.length=R,ve.shadows.length=B,ve.hash=u+","+E+","+C+","+R+","+B,Be.render(d,c),be.calls=0,be.vertices=0,be.faces=0,be.points=0,void 0===a&&(a=null),await this.setRenderTarget(await a),(this.autoClear||_)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),d.overrideMaterial?(_=d.overrideMaterial,A(x,c,t,_),A(Y,c,t,_)):(Ce.setBlending(se.NoBlending),A(x,c,t),A(Y,c,t)),Ue.render(d,c),Ie.render(d,c,re),a&&(d=a.texture).generateMipmaps&&b(a)&&d.minFilter!==se.NearestFilter&&d.minFilter!==se.LinearFilter&&(d=a instanceof se.WebGLRenderTargetCube?ye.TEXTURE_CUBE_MAP:ye.TEXTURE_2D,a=Pe.get(a.texture).__webglTexture,Ce.bindTexture(d,a),ye.generateMipmap(d),Ce.bindTexture(d,null)),Ce.setDepthTest(!0),Ce.setDepthWrite(!0),Ce.setColorWrite(!0)}})()},this.setFaceCulling=function(){},this.setTexture=async function(e,r){var a=await Pe.get(e);if(!(0<e.version&&a.__version!==e.version))Ce.activeTexture(ye.TEXTURE0+r),await Ce.bindTexture(ye.TEXTURE_2D,a.__webglTexture);else if(void 0===(n=e.image));else if(!1===n.complete);else{void 0===a.__webglInit&&(a.__webglInit=!0,e.addEventListener("dispose",T),a.__webglTexture=ye.createTexture(),Te.textures++),Ce.activeTexture(ye.TEXTURE0+r),Ce.bindTexture(ye.TEXTURE_2D,a.__webglTexture),ye.pixelStorei(ye.UNPACK_FLIP_Y_WEBGL,e.flipY),ye.pixelStorei(ye.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),ye.pixelStorei(ye.UNPACK_ALIGNMENT,e.unpackAlignment);var o=function(e,a){if(e.width>a||e.height>a){var o=a/Math.max(e.width,e.height),r=document.createElement("canvas");return r.width=Math.floor(e.width*o),r.height=Math.floor(e.height*o),r.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),r}return e}(e.image,Ee.maxTextureSize);(e.wrapS!==se.ClampToEdgeWrapping||e.wrapT!==se.ClampToEdgeWrapping||e.minFilter!==se.NearestFilter&&e.minFilter!==se.LinearFilter)&&!1===b(o)&&((n=o)instanceof HTMLImageElement||n instanceof HTMLCanvasElement?((s=document.createElement("canvas")).width=se.Math.nearestPowerOfTwo(n.width),s.height=se.Math.nearestPowerOfTwo(n.height),s.getContext("2d").drawImage(n,0,0,s.width,s.height),o=s):o=n);var n=b(o),s=G(e.format),m=G(e.type);E(ye.TEXTURE_2D,e,n);var p=e.mipmaps,d=0,f=p.length;if(e instanceof se.DataTexture){if(0<p.length&&n){for(d,f;d<f;d++)o=p[d],Ce.texImage2D(ye.TEXTURE_2D,d,s,o.width,o.height,0,s,m,o.data);e.generateMipmaps=!1}else Ce.texImage2D(ye.TEXTURE_2D,0,s,o.width,o.height,0,s,m,o.data);}else if(e instanceof se.CompressedTexture)for(d=0,f=p.length;d<f;d++)o=p[d],e.format!==se.RGBAFormat&&e.format!==se.RGBFormat?-1<Ce.getCompressedTextureFormats().indexOf(s)&&Ce.compressedTexImage2D(ye.TEXTURE_2D,d,s,o.width,o.height,0,o.data):Ce.texImage2D(ye.TEXTURE_2D,d,s,o.width,o.height,0,s,m,o.data);else if(0<p.length&&n){for(d=0,f=p.length;d<f;d++)o=p[d],Ce.texImage2D(ye.TEXTURE_2D,d,s,s,m,o);e.generateMipmaps=!1}else Ce.texImage2D(ye.TEXTURE_2D,0,s,s,m,o);e.generateMipmaps&&n&&ye.generateMipmap(ye.TEXTURE_2D),a.__version=e.version,e.onUpdate&&e.onUpdate(e)}},this.getCurrentRenderTarget=function(){return v},this.setRenderTarget=async function(e){if((v=e)&&void 0===Pe.get(e).__webglFramebuffer){var r=Pe.get(e),a=Pe.get(e.texture);e.addEventListener("dispose",s),a.__webglTexture=ye.createTexture(),Te.textures++;var i=e instanceof se.WebGLRenderTargetCube,n=se.Math.isPowerOfTwo(e.width)&&se.Math.isPowerOfTwo(e.height),l=0;if(i)for(r.__webglFramebuffer=[],l;6>l;l++)r.__webglFramebuffer[l]=ye.createFramebuffer();else r.__webglFramebuffer=ye.createFramebuffer();if(i){for(Ce.bindTexture(ye.TEXTURE_CUBE_MAP,a.__webglTexture),E(ye.TEXTURE_CUBE_MAP,e.texture,n),l=0;6>l;l++)r.__webglFramebuffer[l],ye.COLOR_ATTACHMENT0,ye.TEXTURE_CUBE_MAP_POSITIVE_X;e.texture.generateMipmaps&&n&&ye.generateMipmap(ye.TEXTURE_CUBE_MAP),Ce.bindTexture(ye.TEXTURE_CUBE_MAP,null)}else Ce.bindTexture(ye.TEXTURE_2D,a.__webglTexture),E(ye.TEXTURE_2D,e.texture,n),r.__webglFramebuffer,ye.COLOR_ATTACHMENT0,ye.TEXTURE_2D,e.texture.generateMipmaps&&n&&ye.generateMipmap(ye.TEXTURE_2D),Ce.bindTexture(ye.TEXTURE_2D,null);if(e.depthBuffer){if(r=Pe.get(e),e instanceof se.WebGLRenderTargetCube)for(r.__webglDepthbuffer=[],a=0;6>a;a++)ye.bindFramebuffer(ye.FRAMEBUFFER,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=ye.createRenderbuffer(),r.__webglDepthbuffer[a];else ye.bindFramebuffer(ye.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=ye.createRenderbuffer(),r.__webglDepthbuffer;ye.bindFramebuffer(ye.FRAMEBUFFER,null)}}r=(await e)instanceof se.WebGLRenderTargetCube,e?(a=Pe.get(e),a=r?a.__webglFramebuffer[e.activeCubeFace]:a.__webglFramebuffer,te.copy(e.scissor),V=e.scissorTest,re.copy(e.viewport)):(a=null,await te.copy(Se).multiplyScalar(ue),V=!1,await re.copy(ge).multiplyScalar(ue)),y!==a&&(ye.bindFramebuffer(ye.FRAMEBUFFER,a),y=a),Ce.scissor(te),Ce.setScissorTest(V),Ce.viewport(re),r&&(r=Pe.get(e.texture),ye.framebufferTexture2D(ye.FRAMEBUFFER,ye.COLOR_ATTACHMENT0,ye.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,e.activeMipMapLevel))},this.readRenderTargetPixels=function(){}},se.WebGLRenderTarget=function(){},se.WebGLRenderTarget.prototype={constructor:se.WebGLRenderTarget,setSize:function(){},clone:function(){},copy:function(){},dispose:function(){}},se.EventDispatcher.prototype.apply(se.WebGLRenderTarget.prototype),se.WebGLRenderTargetCube=function(){},se.WebGLRenderTargetCube.prototype=Object.create(se.WebGLRenderTarget.prototype),se.WebGLRenderTargetCube.prototype.constructor=se.WebGLRenderTargetCube,se.WebGLBufferRenderer=function(){this.setMode=function(){},this.render=function(){},this.renderInstances=function(){}},se.WebGLIndexedBufferRenderer=function(r,a,i){var o,s,p;this.setMode=function(t){o=t},this.setIndex=function(t){t.array instanceof Uint32Array&&a.get("OES_element_index_uint")?(s=r.UNSIGNED_INT,p=4):(s=r.UNSIGNED_SHORT,p=2)},this.render=async function(a,t){await r.drawElements(o,t,s,a*p),i.calls++,i.vertices+=t,o===r.TRIANGLES&&(i.faces+=t/3)},this.renderInstances=function(){}},se.WebGLExtensions=function(e){var a={};this.get=async function(o){return void 0===a[o]?(r="EXT_texture_filter_anisotropic"===o?e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic"):"WEBGL_compressed_texture_s3tc"===o?e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"):"WEBGL_compressed_texture_pvrtc"===o?e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"):"WEBGL_compressed_texture_etc1"===o?e.getExtension("WEBGL_compressed_texture_etc1"):e.getExtension(o),a[o]=r):a[o];var r}},se.WebGLCapabilities=function(t,e,r){function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}this.getMaxPrecision=i,this.precision=void 0===r.precision?"highp":r.precision,this.logarithmicDepthBuffer=void 0!==r.logarithmicDepthBuffer&&r.logarithmicDepthBuffer,this.maxTextures=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxCubemapSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=t.getParameter(t.MAX_VARYING_VECTORS),this.maxFragmentUniforms=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=0<this.maxVertexTextures,this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures,(r=i(this.precision))!==this.precision&&(this.precision=r),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!e.get("EXT_frag_depth"))},se.WebGLGeometries=function(e,r,l){(async()=>{function r(){}var a={};this.get=function(t){var e=t.geometry,o;return void 0===a[e.id]?(e.addEventListener("dispose",r),e instanceof se.BufferGeometry?o=e:e instanceof se.Geometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=new se.BufferGeometry().setFromObject(t)),o=e._bufferGeometry),a[e.id]=o,l.memory.geometries++,o):a[e.id]}})()},se.WebGLLights=function(){this.get=function(){}},se.WebGLObjects=function(l,a,r){function n(o,r){var i=o instanceof se.InterleavedBufferAttribute?o.data:o,e=a.get(i);void 0===e.__webglBuffer?(e.__webglBuffer=l.createBuffer(),l.bindBuffer(r,e.__webglBuffer),l.bufferData(r,i.array,i.dynamic?l.DYNAMIC_DRAW:l.STATIC_DRAW),e.version=i.version):e.version!==i.version&&(l.bindBuffer(r,e.__webglBuffer),!1===i.dynamic||-1===i.updateRange.count?l.bufferSubData(r,0,i.array):0===i.updateRange.count||(l.bufferSubData(r,i.updateRange.offset*i.array.BYTES_PER_ELEMENT,i.array.subarray(i.updateRange.offset,i.updateRange.offset+i.updateRange.count)),i.updateRange.count=0),e.version=i.version)}var t=new se.WebGLGeometries(l,a,r);this.getAttributeBuffer=function(t){return t instanceof se.InterleavedBufferAttribute?a.get(t.data).__webglBuffer:a.get(t).__webglBuffer},this.getWireframeAttribute=function(){},this.update=function(a){var o=t.get(a);a.geometry instanceof se.Geometry&&o.updateFromObject(a),a=o.index;var r=o.attributes,d=0;for(var c in null!==a&&n(a,l.ELEMENT_ARRAY_BUFFER),r)n(r[c],l.ARRAY_BUFFER);for(c in a=o.morphAttributes)for(d,m=(r=a[c]).length;d<m;d++)n(r[d],l.ARRAY_BUFFER);return o}},se.WebGLProgram=function(){function i(t){switch(t){case se.LinearEncoding:return["Linear","( value )"];case se.sRGBEncoding:return["sRGB","( value )"];case se.RGBEEncoding:return["RGBE","( value )"];case se.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case se.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case se.RGBDEncoding:return["RGBD","( value, 256.0 )"];case se.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+t);}}function s(t,e){var a=i(e);return"vec4 "+t+"( vec4 value ) { return "+a[0]+"ToLinear"+a[1]+"; }"}function r(t,e){var a=i(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"}function o(a,r){var t;switch(r){case se.LinearToneMapping:t="Linear";break;case se.ReinhardToneMapping:t="Reinhard";break;case se.Uncharted2ToneMapping:t="Uncharted2";break;case se.CineonToneMapping:t="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+r);}return"vec3 "+a+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function d(t){return""!==t}function t(e,r){return e.replace(/NUM_DIR_LIGHTS/g,r.numDirLights).replace(/NUM_SPOT_LIGHTS/g,r.numSpotLights).replace(/NUM_POINT_LIGHTS/g,r.numPointLights).replace(/NUM_HEMI_LIGHTS/g,r.numHemiLights)}function l(t){return t.replace(/#include +<([\w\d.]+)>/g,function(r,a){var t=se.ShaderChunk[a];if(void 0===t)throw Error("Can not resolve #include <"+a+">");return l(t)})}var e=0;return function(n,p,i,c){var g=n.context,m=i.extensions,_=i.defines,v=i.__webglShader.vertexShader,y=i.__webglShader.fragmentShader,x="SHADOWMAP_TYPE_BASIC";c.shadowMapType===se.PCFShadowMap?x="SHADOWMAP_TYPE_PCF":c.shadowMapType===se.PCFSoftShadowMap&&(x="SHADOWMAP_TYPE_PCF_SOFT");var S="ENVMAP_TYPE_CUBE",M="ENVMAP_MODE_REFLECTION",b="ENVMAP_BLENDING_MULTIPLY";if(c.envMap){switch(i.envMap.mapping){case se.CubeReflectionMapping:case se.CubeRefractionMapping:S="ENVMAP_TYPE_CUBE";break;case se.CubeUVReflectionMapping:case se.CubeUVRefractionMapping:S="ENVMAP_TYPE_CUBE_UV";break;case se.EquirectangularReflectionMapping:case se.EquirectangularRefractionMapping:S="ENVMAP_TYPE_EQUIREC";break;case se.SphericalReflectionMapping:S="ENVMAP_TYPE_SPHERE";}switch(i.envMap.mapping){case se.CubeRefractionMapping:case se.EquirectangularRefractionMapping:M="ENVMAP_MODE_REFRACTION";}switch(i.combine){case se.MultiplyOperation:b="ENVMAP_BLENDING_MULTIPLY";break;case se.MixOperation:b="ENVMAP_BLENDING_MIX";break;case se.AddOperation:b="ENVMAP_BLENDING_ADD";}}var B=0<n.gammaFactor?n.gammaFactor:1,D=(m=function(e,o,r){return[(e=e||{}).derivatives||o.envMapCubeUV||o.bumpMap||o.normalMap||o.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||o.logarithmicDepthBuffer)&&r.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&r.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||o.envMap)&&r.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(d).join("\n")}(m,c,n.extensions),function(o){var e=[],r;for(r in o){var i=o[r];!1!==i&&e.push("#define "+r+" "+i)}return e.join("\n")}(_)),w=g.createProgram(),R,F;return i instanceof se.RawShaderMaterial?n=_="":(_=["precision "+c.precision+" float;","precision "+c.precision+" int;","#define SHADER_NAME "+i.__webglShader.name,D,c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+B,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+M:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.vertexColors?"#define USE_COLOR":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&&!1===c.flatShading?"#define USE_MORPHNORMALS":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+x:"",0<c.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&n.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(d).join("\n"),n=[m,"precision "+c.precision+" float;","precision "+c.precision+" int;","#define SHADER_NAME "+i.__webglShader.name,D,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"","#define GAMMA_FACTOR "+B,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+S:"",c.envMap?"#define "+M:"",c.envMap?"#define "+b:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.vertexColors?"#define USE_COLOR":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+x:"",0<c.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&n.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",c.envMap&&n.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",c.toneMapping===se.NoToneMapping?"":"#define TONE_MAPPING",c.toneMapping===se.NoToneMapping?"":se.ShaderChunk.tonemapping_pars_fragment,c.toneMapping===se.NoToneMapping?"":o("toneMapping",c.toneMapping),c.outputEncoding||c.mapEncoding||c.envMapEncoding||c.emissiveMapEncoding?se.ShaderChunk.encodings_pars_fragment:"",c.mapEncoding?s("mapTexelToLinear",c.mapEncoding):"",c.envMapEncoding?s("envMapTexelToLinear",c.envMapEncoding):"",c.emissiveMapEncoding?s("emissiveMapTexelToLinear",c.emissiveMapEncoding):"",c.outputEncoding?r("linearToOutputTexel",c.outputEncoding):"","\n"].filter(d).join("\n")),v=t(v=l(v),c),y=t(y=l(y),c),0==i instanceof se.ShaderMaterial&&(v=void 0,y=void 0),y=n+y,v=se.WebGLShader(g,g.VERTEX_SHADER,_+v),y=se.WebGLShader(g,g.FRAGMENT_SHADER,y),g.attachShader(w,v),g.attachShader(w,y),void 0===i.index0AttributeName?!0===c.morphTargets&&g.bindAttribLocation(w,0,"position"):g.bindAttribLocation(w,0,i.index0AttributeName),g.linkProgram(w),c=g.getProgramInfoLog(w),x=g.getShaderInfoLog(v),S=g.getShaderInfoLog(y),b=M=!0,!1===g.getProgramParameter(w,g.LINK_STATUS)?M=!1:""===c&&(""===x||""===S)&&(b=!1),b&&(this.diagnostics={runnable:M,material:i,programLog:c,vertexShader:{log:x,prefix:_},fragmentShader:{log:S,prefix:n}}),g.deleteShader(v),g.deleteShader(y),this.getUniforms=function(){var r={},a=g.getProgramParameter(w,g.ACTIVE_UNIFORMS),t=0;if(void 0===R){for(r,a,t;t<a;t++){var i=g.getActiveUniform(w,t).name,s=g.getUniformLocation(w,i);if(n=/^([\w\d_]+)\.([\w\d_]+)$/.exec(i)){i=n[1];var n=n[2];(d=r[i])||(d=r[i]={}),d[n]=s}else if(n=/^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/.exec(i)){var d=n[1],c=(i=n[2],n=n[3],r[d]);c||(c=r[d]=[]),(d=c[i])||(d=c[i]={}),d[n]=s}else(n=/^([\w\d_]+)\[0\]$/.exec(i))?r[d=n[1]]=s:r[i]=s}R=r}return R},this.getAttributes=function(){var t={},r=g.getProgramParameter(w,g.ACTIVE_ATTRIBUTES),e=0,i;if(void 0===F){for(t,r,e,i;e<r;e++)t[i=g.getActiveAttrib(w,e).name]=g.getAttribLocation(w,i);F=t}return F},this.destroy=function(){},Object.defineProperties(this,{uniforms:{get:function(){}},attributes:{get:function(){}}}),this.id=e++,this.code=p,this.usedTimes=1,this.program=w,this.vertexShader=v,this.fragmentShader=y,this}}(),se.WebGLPrograms=function(u,a){function l(a,r){var t;return a?a instanceof se.Texture?t=a.encoding:a instanceof se.WebGLRenderTarget&&(t=a.texture.encoding):t=se.LinearEncoding,t===se.LinearEncoding&&r&&(t=se.GammaEncoding),t}var d=[],t={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"standard",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},e=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","pointLightShadows","toneMapping","physicallyCorrectLights","shadowMapType","alphaTest","doubleSided","flipSided"];this.getParameters=function(s,o,p,r){var i=t[s.type],e;a.floatVertexTextures&&r&&r.skeleton&&r.skeleton.useVertexTexture?e=1024:(e=Math.floor((a.maxVertexUniforms-20)/4),void 0!==r&&r instanceof se.SkinnedMesh&&(e=Math.min(r.skeleton.bones.length,e),r.skeleton.bones.length));var d=u.getPrecision();return null!==s.precision&&(d=a.getMaxPrecision(s.precision),s.precision),{shaderID:i,precision:d,supportsVertexTextures:a.vertexTextures,outputEncoding:l(u.getCurrentRenderTarget(),u.gammaOutput),map:!!s.map,mapEncoding:l(s.map,u.gammaInput),envMap:!!s.envMap,envMapMode:s.envMap&&s.envMap.mapping,envMapEncoding:l(s.envMap,u.gammaInput),envMapCubeUV:!!s.envMap&&(s.envMap.mapping===se.CubeUVReflectionMapping||s.envMap.mapping===se.CubeUVRefractionMapping),lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,emissiveMapEncoding:l(s.emissiveMap,u.gammaInput),bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,alphaMap:!!s.alphaMap,combine:s.combine,vertexColors:s.vertexColors,fog:p,useFog:s.fog,fogExp:p instanceof se.FogExp2,flatShading:s.shading===se.FlatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:a.logarithmicDepthBuffer,skinning:s.skinning,maxBones:e,useVertexTexture:a.floatVertexTextures&&r&&r.skeleton&&r.skeleton.useVertexTexture,morphTargets:s.morphTargets,morphNormals:s.morphNormals,maxMorphTargets:u.maxMorphTargets,maxMorphNormals:u.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numHemiLights:o.hemi.length,pointLightShadows:o.shadowsPointLight,shadowMapEnabled:u.shadowMap.enabled&&r.receiveShadow&&0<o.shadows.length,shadowMapType:u.shadowMap.type,toneMapping:u.toneMapping,physicallyCorrectLights:u.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,alphaTest:s.alphaTest,doubleSided:s.side===se.DoubleSide,flipSided:s.side===se.BackSide}},this.getProgramCode=function(r,a){var i=[];if(a.shaderID?i.push(a.shaderID):(i.push(r.fragmentShader),i.push(r.vertexShader)),void 0!==r.defines)for(var o in r.defines)i.push(o),i.push(r.defines[o]);for(o=0;o<e.length;o++){var n=e[o];i.push(n),i.push(a[n])}return i.join()},this.acquireProgram=function(r,a,t){var e=0,o=d.length,i,s;for(i,s,e,o;e<o;e++)if((s=d[e]).code===t){++(i=s).usedTimes;break}return void 0===i&&(i=new se.WebGLProgram(u,t,r,a),d.push(i)),i},this.releaseProgram=function(){},this.programs=d},se.WebGLProperties=function(){(async()=>{var e={};this.get=function(r){r=r.uuid;var o=e[r];return void 0===o&&(o={},e[r]=o),o},this.delete=function(){},this.clear=function(){}})()},se.WebGLShader=function(e,a,o){var r=e.createShader(a);return e.shaderSource(r,o),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS),e.getShaderInfoLog(r),r},se.WebGLShadowMap=function(D,a,l){var M=D.context,u=D.state,p=new se.Frustum,m=new se.Matrix4,d=new se.Vector2,h=new se.Vector3,y=new se.Vector3,g=[],_=[,,,,],v=[,,,,],o=[new se.Vector3(1,0,0),new se.Vector3(-1,0,0),new se.Vector3(0,0,1),new se.Vector3(0,0,-1),new se.Vector3(0,1,0),new se.Vector3(0,-1,0)],t=[new se.Vector3(0,1,0),new se.Vector3(0,1,0),new se.Vector3(0,1,0),new se.Vector3(0,1,0),new se.Vector3(0,0,1),new se.Vector3(0,0,-1)],e=[new se.Vector4,new se.Vector4,new se.Vector4,new se.Vector4,new se.Vector4,new se.Vector4],n=se.ShaderLib.depthRGBA,i=se.UniformsUtils.clone(n.uniforms),r=se.ShaderLib.distanceRGBA,f=se.UniformsUtils.clone(r.uniforms),s=0;for(M,u,p,m,d,h,y,g,_,v,o,t,e,n,i,r,f,s;4!=s;++s){var x=0!=(1&s),S=0!=(2&s),L=new se.ShaderMaterial({uniforms:i,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,morphTargets:x,skinning:S});_[s]=L,x=new se.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:f,vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,morphTargets:x,skinning:S}),v[s]=x}var U=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=se.PCFShadowMap,this.cullFace=se.CullFaceFront,this.render=async function(){var n=a.shadows,i,s;if(0!==n.length&&!1!==U.enabled&&(!1!==U.autoUpdate||!1!==U.needsUpdate)){u.clearColor(1,1,1,1),u.disable(M.BLEND),u.enable(M.CULL_FACE),M.frontFace(M.CCW),M.cullFace(U.cullFace===se.CullFaceFront?M.FRONT:M.BACK),u.setDepthTest(!0),u.setScissorTest(!1);var f=0,_=n.length;for(f,_;f<_;f++){var x=n[f],T=x.shadow,b=T.camera;if(d.copy(T.mapSize),x instanceof se.PointLight){i=6,s=!0;var L=d.x,N=d.y;e[0].set(2*L,N,L,N),e[1].set(0,N,L,N),e[2].set(3*L,N,L,N),e[3].set(L,N,L,N),e[4].set(3*L,0,L,N),e[5].set(L,0,L,N),d.x*=4,d.y*=2}else i=1,s=!1;for(null===T.map&&(T.map=new se.WebGLRenderTarget(d.x,d.y,{minFilter:se.NearestFilter,magFilter:se.NearestFilter,format:se.RGBAFormat}),x instanceof se.SpotLight&&(b.aspect=d.x/d.y),b.updateProjectionMatrix()),L=T.map,T=T.matrix,y.setFromMatrixPosition(x.matrixWorld),b.position.copy(y),D.setRenderTarget(L),D.clear(),L=0;L<i;L++){s?(h.copy(b.position),h.add(o[L]),b.up.copy(t[L]),b.lookAt(h),u.viewport(e[L])):(h.setFromMatrixPosition(x.target.matrixWorld),b.lookAt(h)),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(b.projectionMatrix),T.multiply(b.matrixWorldInverse),m.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),p.setFromMatrix(m),g.length=0,N=0;var O=g.length;for(O;N<O;N++){var P=g[N],A=l.update(P),R=A.groups,w=w.materials,k=0,z=R.length;if((w=P.material)instanceof se.MultiMaterial)for(R,w,k,z;k<z;k++){var F=R[k],G=w[F.materialIndex];!0===G.visible&&(G=void 0,D.renderBufferDirect(b,null,A,G,P,F))}else G=void 0,D.renderBufferDirect(b,null,A,G,P,null)}}}i=D.getClearColor(),s=D.getClearAlpha(),D.setClearColor(i,s),u.enable(M.BLEND),U.cullFace===se.CullFaceFront&&M.cullFace(M.BACK),U.needsUpdate=!1}}},se.WebGLState=function(g,a,t){var c=this,p=new se.Vector4,i=new Uint8Array(16),n=new Uint8Array(16),l=new Uint8Array(16),o={},e=null,_=null,x=null,S=null,M=null,T=null,b=null,L=!1,s=null,u=null,E=null,C=null,P=null,D=null,O=g.getParameter(g.MAX_TEXTURE_IMAGE_UNITS),N={},k=new se.Vector4,V=null,W=null,q=new se.Vector4,H=new se.Vector4,X=g.createTexture(),Y;g.bindTexture(g.TEXTURE_2D,X),g.texParameteri(g.TEXTURE_2D,g.TEXTURE_MIN_FILTER,g.LINEAR),g.texImage2D(g.TEXTURE_2D,0,g.RGB,1,1,0,g.RGB,g.UNSIGNED_BYTE,new Uint8Array(3)),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(g.DEPTH_TEST),g.depthFunc(g.LEQUAL),g.frontFace(g.CCW),g.cullFace(g.BACK),this.enable(g.CULL_FACE),this.enable(g.BLEND),g.blendEquation(g.FUNC_ADD),g.blendFunc(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA)},this.initAttributes=async function(){var e=0,t=i.length;for(e,t;e<t;e++)i[e]=0},this.enableAttribute=async function(t){i[t]=1,0===n[t]&&(g.enableVertexAttribArray(t),n[t]=1),0!==l[t]&&(a.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(t,0),l[t]=0)},this.enableAttributeAndDivisor=function(){},this.disableUnusedAttributes=async function(){var e=0,a=n.length;for(e,a;e<a;e++)n[e]!==i[e]&&(g.disableVertexAttribArray(e),n[e]=0)},this.enable=function(t){!0!==o[t]&&(g.enable(t),o[t]=!0)},this.disable=async function(t){!1!==(await o[await t])&&(await g.disable(await t),o[t]=!1)},this.getCompressedTextureFormats=function(){},this.setBlending=async function(a,o,n,r,i,p,d,m){a===se.NoBlending?this.disable(g.BLEND):this.enable(g.BLEND),(a!==e||m!==L)&&(a===se.AdditiveBlending?m?(g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.ONE,g.ONE,g.ONE,g.ONE)):(g.blendEquation(g.FUNC_ADD),g.blendFunc(g.SRC_ALPHA,g.ONE)):a===se.SubtractiveBlending?m?(g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.ZERO,g.ZERO,g.ONE_MINUS_SRC_COLOR,g.ONE_MINUS_SRC_ALPHA)):(g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.ONE_MINUS_SRC_COLOR)):a===se.MultiplyBlending?m?(g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.ZERO,g.ZERO,g.SRC_COLOR,g.SRC_ALPHA)):(g.blendEquation(g.FUNC_ADD),g.blendFunc(g.ZERO,g.SRC_COLOR)):m?(g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.ONE,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)):(g.blendEquationSeparate(g.FUNC_ADD,g.FUNC_ADD),g.blendFuncSeparate(g.SRC_ALPHA,g.ONE_MINUS_SRC_ALPHA,g.ONE,g.ONE_MINUS_SRC_ALPHA)),e=a,L=m),a===se.CustomBlending?(i=i||o,p=p||n,d=d||r,(o!==_||i!==M)&&(g.blendEquationSeparate(t(o),t(i)),_=o,M=i),(n!==x||r!==S||p!==T||d!==b)&&(g.blendFuncSeparate(t(n),t(r),t(p),t(d)),x=n,S=r,T=p,b=d)):b=T=M=S=x=_=null},this.setDepthFunc=function(t){s!==t&&(t?t===se.NeverDepth?g.depthFunc(g.NEVER):t===se.AlwaysDepth?g.depthFunc(g.ALWAYS):t===se.LessDepth?g.depthFunc(g.LESS):t===se.LessEqualDepth?g.depthFunc(g.LEQUAL):t===se.EqualDepth?g.depthFunc(g.EQUAL):t===se.GreaterEqualDepth?g.depthFunc(g.GEQUAL):t===se.GreaterDepth?g.depthFunc(g.GREATER):t===se.NotEqualDepth?g.depthFunc(g.NOTEQUAL):g.depthFunc(g.LEQUAL):g.depthFunc(g.LEQUAL),s=t)},this.setDepthTest=async function(e){e?this.enable(g.DEPTH_TEST):this.disable(g.DEPTH_TEST)},this.setDepthWrite=function(e){u!==e&&(g.depthMask(e),u=e)},this.setColorWrite=function(e){E!==e&&(g.colorMask(e,e,e,e),E=e)},this.setStencilFunc=function(){},this.setStencilOp=function(){},this.setStencilTest=function(){},this.setStencilWrite=function(){},this.setFlipSided=function(e){C!==e&&(e?g.frontFace(g.CW):g.frontFace(g.CCW),C=e)},this.setLineWidth=function(){},this.setPolygonOffset=async function(a,t,e){a?this.enable(g.POLYGON_OFFSET_FILL):this.disable(g.POLYGON_OFFSET_FILL),a&&(P!==t||D!==e)&&(g.polygonOffset(t,e),P=t,D=e)},this.getScissorTest=function(){},this.setScissorTest=function(e){e?this.enable(g.SCISSOR_TEST):this.disable(g.SCISSOR_TEST)},this.activeTexture=function(e){void 0===e&&(e=g.TEXTURE0+O-1),Y!==e&&(g.activeTexture(e),Y=e)},this.bindTexture=async function(t,e){void 0===Y&&c.activeTexture();var a=N[Y];void 0===a&&(a={type:void 0,texture:void 0},N[Y]=a),(a.type!==t||a.texture!==e)&&(g.bindTexture(t,e||X),a.type=t,a.texture=e)},this.compressedTexImage2D=function(){},this.texImage2D=async function(){try{g.texImage2D.apply(g,arguments)}catch(t){}},this.clearColor=function(a,o,t,e){p.set(a,o,t,e),!1===k.equals(p)&&(g.clearColor(a,o,t,e),k.copy(p))},this.clearDepth=function(e){V!==e&&(g.clearDepth(e),V=e)},this.clearStencil=function(e){W!==e&&(g.clearStencil(e),W=e)},this.scissor=function(e){!1===q.equals(e)&&(g.scissor(e.x,e.y,e.z,e.w),q.copy(e))},this.viewport=function(e){!1===H.equals(e)&&(g.viewport(e.x,e.y,e.z,e.w),H.copy(e))},this.reset=function(){}},se.LensFlarePlugin=function(c,a){var m=c.context,h=c.state,t,_,A,r,l,u,g,D,w,U,I,N,V,O,k,z;this.render=async function(e,o,n){if(0!==a.length){e=new se.Vector3;var s=n.w/n.z,i=.5*n.z,p=.5*n.w,d=16/n.w,v=new se.Vector2(d*s,d),x=new se.Vector3(1,1,0),y=new se.Vector2(1,1);if(void 0===V){d=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]);var S=new Uint16Array([0,1,2,0,2,3]);I=m.createBuffer(),N=m.createBuffer(),m.bindBuffer(m.ARRAY_BUFFER,I),m.bufferData(m.ARRAY_BUFFER,d,m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,N),m.bufferData(m.ELEMENT_ARRAY_BUFFER,S,m.STATIC_DRAW),k=m.createTexture(),z=m.createTexture(),h.bindTexture(m.TEXTURE_2D,k),m.texImage2D(m.TEXTURE_2D,0,m.RGB,16,16,0,m.RGB,m.UNSIGNED_BYTE,null),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),h.bindTexture(m.TEXTURE_2D,z),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,16,16,0,m.RGBA,m.UNSIGNED_BYTE,null),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),d=(O=0<m.getParameter(m.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},S=m.createProgram();var L=m.createShader(m.FRAGMENT_SHADER),E=m.createShader(m.VERTEX_SHADER),P="precision "+c.getPrecision()+" float;\n";m.shaderSource(L,P+d.fragmentShader),m.shaderSource(E,P+d.vertexShader),m.compileShader(L),m.compileShader(E),m.attachShader(S,L),m.attachShader(S,E),m.linkProgram(S),V=S,w=m.getAttribLocation(V,"position"),U=m.getAttribLocation(V,"uv"),t=m.getUniformLocation(V,"renderType"),_=m.getUniformLocation(V,"map"),A=m.getUniformLocation(V,"occlusionMap"),r=m.getUniformLocation(V,"opacity"),l=m.getUniformLocation(V,"color"),u=m.getUniformLocation(V,"scale"),g=m.getUniformLocation(V,"rotation"),D=m.getUniformLocation(V,"screenPosition")}for(m.useProgram(V),h.initAttributes(),h.enableAttribute(w),h.enableAttribute(U),h.disableUnusedAttributes(),m.uniform1i(A,0),m.uniform1i(_,1),m.bindBuffer(m.ARRAY_BUFFER,I),m.vertexAttribPointer(w,2,m.FLOAT,!1,16,0),m.vertexAttribPointer(U,2,m.FLOAT,!1,16,8),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,N),h.disable(m.CULL_FACE),h.setDepthWrite(!1),S=0,L=a.length;S<L;S++)if(d=16/n.w,v.set(d*s,d),E=a[S],e.set(E.matrixWorld.elements[12],E.matrixWorld.elements[13],E.matrixWorld.elements[14]),e.applyMatrix4(o.matrixWorldInverse),e.applyProjection(o.projectionMatrix),x.copy(e),y.x=x.x*i+i,y.y=x.y*p+p,O||0<y.x&&y.x<n.z&&0<y.y&&y.y<n.w){h.activeTexture(m.TEXTURE0),h.bindTexture(m.TEXTURE_2D,null),h.activeTexture(m.TEXTURE1),h.bindTexture(m.TEXTURE_2D,k),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGB,n.x+y.x-8,n.y+y.y-8,16,16,0),m.uniform1i(t,0),m.uniform2f(u,v.x,v.y),m.uniform3f(D,x.x,x.y,x.z),h.disable(m.BLEND),h.enable(m.DEPTH_TEST),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0),h.activeTexture(m.TEXTURE0),h.bindTexture(m.TEXTURE_2D,z),m.copyTexImage2D(m.TEXTURE_2D,0,m.RGBA,n.x+y.x-8,n.y+y.y-8,16,16,0),m.uniform1i(t,1),h.disable(m.DEPTH_TEST),h.activeTexture(m.TEXTURE1),h.bindTexture(m.TEXTURE_2D,k),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0),E.positionScreen.copy(x),E.customUpdateCallback?E.customUpdateCallback(E):E.updateLensFlares(),m.uniform1i(t,2),h.enable(m.BLEND),P=0;var R=E.lensFlares.length,B;for(B,R;P<R;P++).001<(B=E.lensFlares[P]).opacity&&.001<B.scale&&(x.x=B.x,x.y=B.y,x.z=B.z,d=B.size*B.scale/n.w,v.x=d*s,v.y=d,m.uniform3f(D,x.x,x.y,x.z),m.uniform2f(u,v.x,v.y),m.uniform1f(g,B.rotation),m.uniform1f(r,B.opacity),m.uniform3f(l,B.color.r,B.color.g,B.color.b),h.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst),c.setTexture(B.texture,1),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0))}h.enable(m.CULL_FACE),h.enable(m.DEPTH_TEST),h.setDepthWrite(!0),c.resetGLState()}}},se.SpritePlugin=function(m,a){function d(){}var l=m.context,u=m.state,r=new se.Vector3,i=new se.Quaternion,o=new se.Vector3,t,s,g,h,T,C,P,A,D,R,w,B,U,I,F,G,N,V,O,k,z;this.render=function(n,e){if(0!==a.length){if(void 0===k){var c=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),f=new Uint16Array([0,1,2,0,2,3]);V=l.createBuffer(),O=l.createBuffer(),l.bindBuffer(l.ARRAY_BUFFER,V),l.bufferData(l.ARRAY_BUFFER,c,l.STATIC_DRAW),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,O),l.bufferData(l.ELEMENT_ARRAY_BUFFER,f,l.STATIC_DRAW),c=l.createProgram(),f=l.createShader(l.VERTEX_SHADER);var v=l.createShader(l.FRAGMENT_SHADER);l.shaderSource(f,["precision "+m.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),l.shaderSource(v,["precision "+m.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),l.compileShader(f),l.compileShader(v),l.attachShader(c,f),l.attachShader(c,v),l.linkProgram(c),k=c,G=l.getAttribLocation(k,"position"),N=l.getAttribLocation(k,"uv"),t=l.getUniformLocation(k,"uvOffset"),s=l.getUniformLocation(k,"uvScale"),g=l.getUniformLocation(k,"rotation"),h=l.getUniformLocation(k,"scale"),T=l.getUniformLocation(k,"color"),C=l.getUniformLocation(k,"map"),P=l.getUniformLocation(k,"opacity"),A=l.getUniformLocation(k,"modelViewMatrix"),D=l.getUniformLocation(k,"projectionMatrix"),R=l.getUniformLocation(k,"fogType"),w=l.getUniformLocation(k,"fogDensity"),B=l.getUniformLocation(k,"fogNear"),U=l.getUniformLocation(k,"fogFar"),I=l.getUniformLocation(k,"fogColor"),F=l.getUniformLocation(k,"alphaTest"),(c=document.createElement("canvas")).width=8,c.height=8,(f=c.getContext("2d")).fillStyle="white",f.fillRect(0,0,8,8),(z=new se.Texture(c)).needsUpdate=!0}l.useProgram(k),u.initAttributes(),u.enableAttribute(G),u.enableAttribute(N),u.disableUnusedAttributes(),u.disable(l.CULL_FACE),u.enable(l.BLEND),l.bindBuffer(l.ARRAY_BUFFER,V),l.vertexAttribPointer(G,2,l.FLOAT,!1,16,0),l.vertexAttribPointer(N,2,l.FLOAT,!1,16,8),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,O),l.uniformMatrix4fv(D,!1,e.projectionMatrix.elements),u.activeTexture(l.TEXTURE0),l.uniform1i(C,0),f=c=0,(v=n.fog)?(l.uniform3f(I,v.color.r,v.color.g,v.color.b),v instanceof se.Fog?(l.uniform1f(B,v.near),l.uniform1f(U,v.far),l.uniform1i(R,1),f=c=1):v instanceof se.FogExp2&&(l.uniform1f(w,v.density),l.uniform1i(R,2),f=c=2)):(l.uniform1i(R,0),f=c=0),v=0;var x=a.length;for(x;v<x;v++)(M=a[v]).modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,M.matrixWorld),M.z=-M.modelViewMatrix.elements[14];a.sort(d);var S=[];for(v=0,x=a.length;v<x;v++){var b=(M=a[v]).material,M;l.uniform1f(F,b.alphaTest),l.uniformMatrix4fv(A,!1,M.modelViewMatrix.elements),M.matrixWorld.decompose(r,i,o),S[0]=o.x,S[1]=o.y,M=0,n.fog&&b.fog&&(M=f),c!==M&&(l.uniform1i(R,M),c=M),null===b.map?(l.uniform2f(t,0,0),l.uniform2f(s,1,1)):(l.uniform2f(t,b.map.offset.x,b.map.offset.y),l.uniform2f(s,b.map.repeat.x,b.map.repeat.y)),l.uniform1f(P,b.opacity),l.uniform3f(T,b.color.r,b.color.g,b.color.b),l.uniform1f(g,b.rotation),l.uniform2fv(h,S),u.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),u.setDepthTest(b.depthTest),u.setDepthWrite(b.depthWrite),b.map&&b.map.image&&b.map.image.width?m.setTexture(b.map,0):m.setTexture(z,0),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0)}u.enable(l.CULL_FACE),m.resetGLState()}}},Object.defineProperties(se.Box2.prototype,{empty:{value:function(){}},isIntersectionBox:{value:function(){}}}),Object.defineProperties(se.Box3.prototype,{empty:{value:function(){}},isIntersectionBox:{value:function(){}},isIntersectionSphere:{value:function(){}}}),Object.defineProperties(se.Matrix3.prototype,{multiplyVector3:{value:function(){}},multiplyVector3Array:{value:function(){}}}),Object.defineProperties(se.Matrix4.prototype,{extractPosition:{value:function(){}},setRotationFromQuaternion:{value:function(){}},multiplyVector3:{value:function(){}},multiplyVector4:{value:function(){}},multiplyVector3Array:{value:function(){}},rotateAxis:{value:function(){}},crossVector:{value:function(){}},translate:{value:function(){}},rotateX:{value:function(){}},rotateY:{value:function(){}},rotateZ:{value:function(){}},rotateByAxis:{value:function(){}}}),Object.defineProperties(se.Plane.prototype,{isIntersectionLine:{value:function(){}}}),Object.defineProperties(se.Quaternion.prototype,{multiplyVector3:{value:function(){}}}),Object.defineProperties(se.Ray.prototype,{isIntersectionBox:{value:function(){}},isIntersectionPlane:{value:function(){}},isIntersectionSphere:{value:function(){}}}),Object.defineProperties(se.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){}},setEulerFromQuaternion:{value:function(){}},getPositionFromMatrix:{value:function(){}},getScaleFromMatrix:{value:function(){}},getColumnFromMatrix:{value:function(){}}}),se.Face4=function(){},se.Vertex=function(){},Object.defineProperties(se.Object3D.prototype,{eulerOrder:{get:function(){},set:function(){}},getChildByName:{value:function(){}},renderDepth:{set:function(){}},translate:{value:function(){}},useQuaternion:{get:function(){},set:function(){}}}),Object.defineProperties(se,{PointCloud:{value:function(){}},ParticleSystem:{value:function(){}}}),Object.defineProperties(se.Light.prototype,{onlyShadow:{set:function(){}},shadowCameraFov:{set:function(){}},shadowCameraLeft:{set:function(){}},shadowCameraRight:{set:function(){}},shadowCameraTop:{set:function(){}},shadowCameraBottom:{set:function(){}},shadowCameraNear:{set:function(){}},shadowCameraFar:{set:function(){}},shadowCameraVisible:{set:function(){}},shadowBias:{set:function(){}},shadowDarkness:{set:function(){}},shadowMapWidth:{set:function(){}},shadowMapHeight:{set:function(){}}}),Object.defineProperties(se.BufferAttribute.prototype,{length:{get:function(){}}}),Object.defineProperties(se.BufferGeometry.prototype,{drawcalls:{get:function(){}},offsets:{get:function(){}},addIndex:{value:function(){}},addDrawCall:{value:function(){}},clearDrawCalls:{value:function(){}},computeTangents:{value:function(){}},computeOffsets:{value:function(){}}}),Object.defineProperties(se.Material.prototype,{wrapAround:{get:function(){},set:function(){}},wrapRGB:{get:function(){}}}),Object.defineProperties(se,{PointCloudMaterial:{value:function(){}},ParticleBasicMaterial:{value:function(){}},ParticleSystemMaterial:{value:function(){}}}),Object.defineProperties(se.MeshPhongMaterial.prototype,{metal:{get:function(){},set:function(){}}}),Object.defineProperties(se.ShaderMaterial.prototype,{derivatives:{get:function(){},set:function(){}}}),Object.defineProperties(se.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){}},supportsHalfFloatTextures:{value:function(){}},supportsStandardDerivatives:{value:function(){}},supportsCompressedTextureS3TC:{value:function(){}},supportsCompressedTexturePVRTC:{value:function(){}},supportsBlendMinMax:{value:function(){}},supportsVertexTextures:{value:function(){}},supportsInstancedArrays:{value:function(){}},enableScissorTest:{value:function(){}},initMaterial:{value:function(){}},addPrePlugin:{value:function(){}},addPostPlugin:{value:function(){}},updateShadowMap:{value:function(){}},shadowMapEnabled:{get:function(){},set:function(){}},shadowMapType:{get:function(){},set:function(){}},shadowMapCullFace:{get:function(){},set:function(){}}}),Object.defineProperties(se.WebGLRenderTarget.prototype,{wrapS:{get:function(){},set:function(){}},wrapT:{get:function(){},set:function(){}},magFilter:{get:function(){},set:function(){}},minFilter:{get:function(){},set:function(){}},anisotropy:{get:function(){},set:function(){}},offset:{get:function(){},set:function(){}},repeat:{get:function(){},set:function(){}},format:{get:function(){},set:function(){}},type:{get:function(){},set:function(){}},generateMipmaps:{get:function(){},set:function(){}}}),se.GeometryUtils={merge:function(){},center:function(){}},se.ImageUtils={crossOrigin:void 0,loadTexture:function(){},loadTextureCube:function(){},loadCompressedTexture:function(){},loadCompressedTextureCube:function(){}},window.onload=se.Projector=function(){},window.onload=se.CanvasRenderer=function(){},se.MeshFaceMaterial=se.MultiMaterial,se.CurveUtils={tangentQuadraticBezier:function(){},tangentCubicBezier:function(){},tangentSpline:function(){},interpolate:function(){}},se.SceneUtils={createMultiMaterialObject:function(){},detach:function(){},attach:function(){}},se.ShapeUtils={area:function(){},triangulate:function(){},triangulateShape:function(){},isClockWise:function(){},b2:function(){},b3:function(){}},se.Curve=function(){},se.Curve.prototype={constructor:se.Curve,getPoint:function(){},getPointAt:function(){},getPoints:function(){},getSpacedPoints:function(){},getLength:function(){},getLengths:function(){},updateArcLengths:function(){},getUtoTmapping:function(){},getTangent:function(){},getTangentAt:function(){}},se.Curve.create=function(e,r){return e.prototype=Object.create(se.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=r,e},se.CurvePath=function(){},se.CurvePath.prototype=Object.create(se.Curve.prototype),se.CurvePath.prototype.constructor=se.CurvePath,se.CurvePath.prototype.add=function(){},se.CurvePath.prototype.closePath=function(){},se.CurvePath.prototype.getPoint=function(){},se.CurvePath.prototype.getLength=function(){},se.CurvePath.prototype.getCurveLengths=function(){},se.CurvePath.prototype.createPointsGeometry=function(){},se.CurvePath.prototype.createSpacedPointsGeometry=function(){},se.CurvePath.prototype.createGeometry=function(){},se.Font=function(){},se.Font.prototype={constructor:se.Font,generateShapes:function(){}},se.Path=function(){},se.Path.prototype=Object.create(se.CurvePath.prototype),se.Path.prototype.constructor=se.Path,se.Path.prototype.fromPoints=function(){},se.Path.prototype.moveTo=function(){},se.Path.prototype.lineTo=function(){},se.Path.prototype.quadraticCurveTo=function(){},se.Path.prototype.bezierCurveTo=function(){},se.Path.prototype.splineThru=function(){},se.Path.prototype.arc=function(){},se.Path.prototype.absarc=function(){},se.Path.prototype.ellipse=function(){},se.Path.prototype.absellipse=function(){},se.Path.prototype.getSpacedPoints=function(){},se.Path.prototype.getPoints=function(){},se.Path.prototype.toShapes=function(){},se.Shape=function(){},se.Shape.prototype=Object.create(se.Path.prototype),se.Shape.prototype.constructor=se.Shape,se.Shape.prototype.extrude=function(){},se.Shape.prototype.makeGeometry=function(){},se.Shape.prototype.getPointsHoles=function(){},se.Shape.prototype.extractAllPoints=function(){},se.Shape.prototype.extractPoints=function(){},se.LineCurve=function(){},se.LineCurve.prototype=Object.create(se.Curve.prototype),se.LineCurve.prototype.constructor=se.LineCurve,se.LineCurve.prototype.getPoint=function(){},se.LineCurve.prototype.getPointAt=function(){},se.LineCurve.prototype.getTangent=function(){},se.QuadraticBezierCurve=function(){},se.QuadraticBezierCurve.prototype=Object.create(se.Curve.prototype),se.QuadraticBezierCurve.prototype.constructor=se.QuadraticBezierCurve,se.QuadraticBezierCurve.prototype.getPoint=function(){},se.QuadraticBezierCurve.prototype.getTangent=function(){},se.CubicBezierCurve=function(){},se.CubicBezierCurve.prototype=Object.create(se.Curve.prototype),se.CubicBezierCurve.prototype.constructor=se.CubicBezierCurve,se.CubicBezierCurve.prototype.getPoint=function(){},se.CubicBezierCurve.prototype.getTangent=function(){},se.SplineCurve=function(){},se.SplineCurve.prototype=Object.create(se.Curve.prototype),se.SplineCurve.prototype.constructor=se.SplineCurve,se.SplineCurve.prototype.getPoint=function(){},se.EllipseCurve=function(){},se.EllipseCurve.prototype=Object.create(se.Curve.prototype),se.EllipseCurve.prototype.constructor=se.EllipseCurve,se.EllipseCurve.prototype.getPoint=function(){},se.ArcCurve=function(){},se.ArcCurve.prototype=Object.create(se.EllipseCurve.prototype),se.ArcCurve.prototype.constructor=se.ArcCurve,se.LineCurve3=se.Curve.create(function(){},function(){}),se.QuadraticBezierCurve3=se.Curve.create(function(){},function(){}),se.CubicBezierCurve3=se.Curve.create(function(){},function(){}),se.SplineCurve3=se.Curve.create(function(){},function(){}),se.CatmullRomCurve3=function(){function t(){}return new se.Vector3,new t,new t,new t,t.prototype.init=function(){},t.prototype.initNonuniformCatmullRom=function(){},t.prototype.initCatmullRom=function(){},t.prototype.calc=function(){},se.Curve.create(function(){},function(){})}(),se.ClosedSplineCurve3=function(){},se.ClosedSplineCurve3.prototype=Object.create(se.CatmullRomCurve3.prototype),se.BoxGeometry=function(){},se.BoxGeometry.prototype=Object.create(se.Geometry.prototype),se.BoxGeometry.prototype.constructor=se.BoxGeometry,se.CubeGeometry=se.BoxGeometry,se.BoxBufferGeometry=function(){},se.BoxBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.BoxBufferGeometry.prototype.constructor=se.BoxBufferGeometry,se.CircleGeometry=function(){},se.CircleGeometry.prototype=Object.create(se.Geometry.prototype),se.CircleGeometry.prototype.constructor=se.CircleGeometry,se.CircleBufferGeometry=function(){},se.CircleBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.CircleBufferGeometry.prototype.constructor=se.CircleBufferGeometry,se.CylinderBufferGeometry=function(p,d,b,D,R,o,w,B){function t(e){var t,a,o;o=new se.Vector2;var i=new se.Vector3,m=!0===e?p:d,_=!0===e?1:-1;for(a=f,t=1;t<=D;t++)g.setXYZ(f,0,C*_,0),y.setXYZ(f,0,_,0),!0===e?(o.x=t/D,o.y=0):(o.x=(t-1)/D,o.y=1),u.setXY(f,o.x,o.y),f++;for(o=f,t=0;t<=D;t++){var v=t/D;i.x=m*Math.sin(v*B+w),i.y=C*_,i.z=m*Math.cos(v*B+w),g.setXYZ(f,i.x,i.y,i.z),y.setXYZ(f,0,_,0),u.setXY(f,v,!0===e?1:0),f++}for(t=0;t<D;t++)i=a+t,m=o+t,!0===e?(s.setX(T,m),T++,s.setX(T,m+1)):(s.setX(T,m+1),T++,s.setX(T,m)),T++,s.setX(T,i),T++}se.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:p,radiusBottom:d,height:b,radialSegments:D,heightSegments:R,openEnded:o,thetaStart:w,thetaLength:B},p=void 0===p?20:p,d=void 0===d?20:d,b=void 0===b?100:b,D=Math.floor(D)||8,R=Math.floor(R)||1,o=void 0!==o&&o,w=void 0===w?0:w,B=void 0===B?2*Math.PI:B;var i=function(){var e=(D+1)*(R+1);return!1===o&&(e+=2*(D+1)+2*D),e}(),n=function(){var e=6*(D*R);return!1===o&&(e+=6*D),e}(),s=new se.BufferAttribute(new(65535<n?Uint32Array:Uint16Array)(n),1),g=new se.BufferAttribute(new Float32Array(3*i),3),y=new se.BufferAttribute(new Float32Array(3*i),3),u=new se.BufferAttribute(new Float32Array(2*i),2),f=0,T=0,U=[],C=b/2;(function(){var e=new se.Vector3,r=new se.Vector3,a=(d-p)/b,i,m;for(m=0;m<=R;m++){var _=[],v=m/R,x=v*(d-p)+p;for(i=0;i<=D;i++){var S=i/D;r.x=x*Math.sin(S*B+w),r.y=-v*b+C,r.z=x*Math.cos(S*B+w),g.setXYZ(f,r.x,r.y,r.z),e.copy(r),(0===p&&0===m||0===d&&m===R)&&(e.x=Math.sin(S*B+w),e.z=Math.cos(S*B+w)),e.setY(Math.sqrt(e.x*e.x+e.z*e.z)*a).normalize(),y.setXYZ(f,e.x,e.y,e.z),u.setXY(f,S,1-v),_.push(f),f++}U.push(_)}for(i=0;i<D;i++)for(m=0;m<R;m++)e=U[m+1][i],r=U[m+1][i+1],a=U[m][i+1],s.setX(T,U[m][i]),T++,s.setX(T,e),T++,s.setX(T,a),T++,s.setX(T,e),T++,s.setX(T,r),T++,s.setX(T,a),T++})(),!1===o&&(0<p&&t(!0),0<d&&t(!1)),this.setIndex(s),this.addAttribute("position",g),this.addAttribute("normal",y),this.addAttribute("uv",u)},se.CylinderBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.CylinderBufferGeometry.prototype.constructor=se.CylinderBufferGeometry,se.CylinderGeometry=function(r,a,l,s,o,t,e,n){se.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:r,radiusBottom:a,height:l,radialSegments:s,heightSegments:o,openEnded:t,thetaStart:e,thetaLength:n},this.fromBufferGeometry(new se.CylinderBufferGeometry(r,a,l,s,o,t,e,n)),this.mergeVertices()},se.CylinderGeometry.prototype=Object.create(se.Geometry.prototype),se.CylinderGeometry.prototype.constructor=se.CylinderGeometry,se.EdgesGeometry=function(){},se.EdgesGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.EdgesGeometry.prototype.constructor=se.EdgesGeometry,se.ExtrudeGeometry=function(){},se.ExtrudeGeometry.prototype=Object.create(se.Geometry.prototype),se.ExtrudeGeometry.prototype.constructor=se.ExtrudeGeometry,se.ExtrudeGeometry.prototype.addShapeList=function(){},se.ExtrudeGeometry.prototype.addShape=function(){},se.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(){},generateSideWallUV:function(){}},se.ShapeGeometry=function(){},se.ShapeGeometry.prototype=Object.create(se.Geometry.prototype),se.ShapeGeometry.prototype.constructor=se.ShapeGeometry,se.ShapeGeometry.prototype.addShapeList=function(){},se.ShapeGeometry.prototype.addShape=function(){},se.LatheBufferGeometry=function(){},se.LatheBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.LatheBufferGeometry.prototype.constructor=se.LatheBufferGeometry,se.LatheGeometry=function(){},se.LatheGeometry.prototype=Object.create(se.Geometry.prototype),se.LatheGeometry.prototype.constructor=se.LatheGeometry,se.PlaneGeometry=function(e,a,o,r){(async()=>{se.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:a,widthSegments:o,heightSegments:r},await this.fromBufferGeometry(new se.PlaneBufferGeometry(e,a,o,r))})()},se.PlaneGeometry.prototype=Object.create(se.Geometry.prototype),se.PlaneGeometry.prototype.constructor=se.PlaneGeometry,se.PlaneBufferGeometry=function(r,n,s,m){(async()=>{se.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:r,height:n,widthSegments:s,heightSegments:m};var a=r/2,o=n/2;s=Math.floor(s)||1,m=Math.floor(m)||1;var i=s+1,p=m+1,d=r/s,f=n/m;n=new Float32Array(3*(i*p)),r=new Float32Array(3*(i*p));var u=new Float32Array(2*(i*p)),_=0,y=0,S=0;for(u,_,y,S;S<p;S++)for(var T=S*f-o,x=0;x<i;x++)n[_]=x*d-a,n[_+1]=-T,r[_+2]=1,u[y]=x/s,u[y+1]=1-S/m,_+=3,y+=2;for(_=0,a=new(65535<n.length/3?Uint32Array:Uint16Array)(6*(s*m)),S=0;S<m;S++)for(x=0;x<s;x++)o=x+i*(S+1),p=x+1+i*(S+1),d=x+1+i*S,a[_]=x+i*S,a[_+1]=o,a[_+2]=d,a[_+3]=o,a[_+4]=p,a[_+5]=d,_+=6;this.setIndex(new se.BufferAttribute(a,1)),this.addAttribute("position",new se.BufferAttribute(n,3)),this.addAttribute("normal",new se.BufferAttribute(r,3)),this.addAttribute("uv",new se.BufferAttribute(u,2))})()},se.PlaneBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.PlaneBufferGeometry.prototype.constructor=se.PlaneBufferGeometry,se.RingBufferGeometry=function(){},se.RingBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.RingBufferGeometry.prototype.constructor=se.RingBufferGeometry,se.RingGeometry=function(){},se.RingGeometry.prototype=Object.create(se.Geometry.prototype),se.RingGeometry.prototype.constructor=se.RingGeometry,se.SphereGeometry=function(){},se.SphereGeometry.prototype=Object.create(se.Geometry.prototype),se.SphereGeometry.prototype.constructor=se.SphereGeometry,se.SphereBufferGeometry=function(){},se.SphereBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.SphereBufferGeometry.prototype.constructor=se.SphereBufferGeometry,se.TextGeometry=function(){},se.TextGeometry.prototype=Object.create(se.ExtrudeGeometry.prototype),se.TextGeometry.prototype.constructor=se.TextGeometry,se.TorusBufferGeometry=function(){},se.TorusBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.TorusBufferGeometry.prototype.constructor=se.TorusBufferGeometry,se.TorusGeometry=function(){},se.TorusGeometry.prototype=Object.create(se.Geometry.prototype),se.TorusGeometry.prototype.constructor=se.TorusGeometry,se.TorusKnotBufferGeometry=function(){},se.TorusKnotBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.TorusKnotBufferGeometry.prototype.constructor=se.TorusKnotBufferGeometry,se.TorusKnotGeometry=function(){},se.TorusKnotGeometry.prototype=Object.create(se.Geometry.prototype),se.TorusKnotGeometry.prototype.constructor=se.TorusKnotGeometry,se.TubeGeometry=function(){},se.TubeGeometry.prototype=Object.create(se.Geometry.prototype),se.TubeGeometry.prototype.constructor=se.TubeGeometry,se.TubeGeometry.NoTaper=function(){},se.TubeGeometry.SinusoidalTaper=function(){},se.TubeGeometry.FrenetFrames=function(){},se.PolyhedronGeometry=function(){},se.PolyhedronGeometry.prototype=Object.create(se.Geometry.prototype),se.PolyhedronGeometry.prototype.constructor=se.PolyhedronGeometry,se.DodecahedronGeometry=function(){},se.DodecahedronGeometry.prototype=Object.create(se.PolyhedronGeometry.prototype),se.DodecahedronGeometry.prototype.constructor=se.DodecahedronGeometry,se.IcosahedronGeometry=function(){},se.IcosahedronGeometry.prototype=Object.create(se.PolyhedronGeometry.prototype),se.IcosahedronGeometry.prototype.constructor=se.IcosahedronGeometry,se.OctahedronGeometry=function(){},se.OctahedronGeometry.prototype=Object.create(se.PolyhedronGeometry.prototype),se.OctahedronGeometry.prototype.constructor=se.OctahedronGeometry,se.TetrahedronGeometry=function(){},se.TetrahedronGeometry.prototype=Object.create(se.PolyhedronGeometry.prototype),se.TetrahedronGeometry.prototype.constructor=se.TetrahedronGeometry,se.ParametricGeometry=function(){},se.ParametricGeometry.prototype=Object.create(se.Geometry.prototype),se.ParametricGeometry.prototype.constructor=se.ParametricGeometry,se.WireframeGeometry=function(){},se.WireframeGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.WireframeGeometry.prototype.constructor=se.WireframeGeometry,se.AxisHelper=function(){},se.AxisHelper.prototype=Object.create(se.LineSegments.prototype),se.AxisHelper.prototype.constructor=se.AxisHelper,se.ArrowHelper=async function(){return new se.Geometry().vertices.push(new se.Vector3(0,0,0),new se.Vector3(0,1,0)),new se.CylinderGeometry(0,.5,1,5,1).translate(0,-.5,0)}(),se.ArrowHelper.prototype=Object.create(se.Object3D.prototype),se.ArrowHelper.prototype.constructor=se.ArrowHelper,se.ArrowHelper.prototype.setDirection=new se.Vector3,se.ArrowHelper.prototype.setLength=function(){},se.ArrowHelper.prototype.setColor=function(){},se.BoxHelper=function(){},se.BoxHelper.prototype=Object.create(se.LineSegments.prototype),se.BoxHelper.prototype.constructor=se.BoxHelper,se.BoxHelper.prototype.update=new se.Box3,se.BoundingBoxHelper=function(){},se.BoundingBoxHelper.prototype=Object.create(se.Mesh.prototype),se.BoundingBoxHelper.prototype.constructor=se.BoundingBoxHelper,se.BoundingBoxHelper.prototype.update=function(){},se.CameraHelper=function(){},se.CameraHelper.prototype=Object.create(se.LineSegments.prototype),se.CameraHelper.prototype.constructor=se.CameraHelper,se.CameraHelper.prototype.update=(new se.Vector3,new se.Camera),se.DirectionalLightHelper=function(){},se.DirectionalLightHelper.prototype=Object.create(se.Object3D.prototype),se.DirectionalLightHelper.prototype.constructor=se.DirectionalLightHelper,se.DirectionalLightHelper.prototype.dispose=function(){},se.DirectionalLightHelper.prototype.update=(new se.Vector3,new se.Vector3,new se.Vector3),se.EdgesHelper=function(){},se.EdgesHelper.prototype=Object.create(se.LineSegments.prototype),se.EdgesHelper.prototype.constructor=se.EdgesHelper,se.FaceNormalsHelper=function(){},se.FaceNormalsHelper.prototype=Object.create(se.LineSegments.prototype),se.FaceNormalsHelper.prototype.constructor=se.FaceNormalsHelper,se.FaceNormalsHelper.prototype.update=(new se.Vector3,new se.Vector3,new se.Matrix3),se.GridHelper=function(){},se.GridHelper.prototype=Object.create(se.LineSegments.prototype),se.GridHelper.prototype.constructor=se.GridHelper,se.GridHelper.prototype.setColors=function(){},se.HemisphereLightHelper=function(){},se.HemisphereLightHelper.prototype=Object.create(se.Object3D.prototype),se.HemisphereLightHelper.prototype.constructor=se.HemisphereLightHelper,se.HemisphereLightHelper.prototype.dispose=function(){},se.HemisphereLightHelper.prototype.update=new se.Vector3,se.PointLightHelper=function(){},se.PointLightHelper.prototype=Object.create(se.Mesh.prototype),se.PointLightHelper.prototype.constructor=se.PointLightHelper,se.PointLightHelper.prototype.dispose=function(){},se.PointLightHelper.prototype.update=function(){},se.SkeletonHelper=function(){},se.SkeletonHelper.prototype=Object.create(se.LineSegments.prototype),se.SkeletonHelper.prototype.constructor=se.SkeletonHelper,se.SkeletonHelper.prototype.getBoneList=function(){},se.SkeletonHelper.prototype.update=function(){},se.SpotLightHelper=function(){},se.SpotLightHelper.prototype=Object.create(se.Object3D.prototype),se.SpotLightHelper.prototype.constructor=se.SpotLightHelper,se.SpotLightHelper.prototype.dispose=function(){},se.SpotLightHelper.prototype.update=(new se.Vector3,new se.Vector3),se.VertexNormalsHelper=function(){},se.VertexNormalsHelper.prototype=Object.create(se.LineSegments.prototype),se.VertexNormalsHelper.prototype.constructor=se.VertexNormalsHelper,se.VertexNormalsHelper.prototype.update=(new se.Vector3,new se.Vector3,new se.Matrix3),se.WireframeHelper=function(){},se.WireframeHelper.prototype=Object.create(se.LineSegments.prototype),se.WireframeHelper.prototype.constructor=se.WireframeHelper,se.ImmediateRenderObject=function(){},se.ImmediateRenderObject.prototype=Object.create(se.Object3D.prototype),se.ImmediateRenderObject.prototype.constructor=se.ImmediateRenderObject,se.MorphBlendMesh=function(){},se.MorphBlendMesh.prototype=Object.create(se.Mesh.prototype),se.MorphBlendMesh.prototype.constructor=se.MorphBlendMesh,se.MorphBlendMesh.prototype.createAnimation=function(){},se.MorphBlendMesh.prototype.autoCreateAnimations=function(){},se.MorphBlendMesh.prototype.setAnimationDirectionForward=function(){},se.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(){},se.MorphBlendMesh.prototype.setAnimationFPS=function(){},se.MorphBlendMesh.prototype.setAnimationDuration=function(){},se.MorphBlendMesh.prototype.setAnimationWeight=function(){},se.MorphBlendMesh.prototype.setAnimationTime=function(){},se.MorphBlendMesh.prototype.getAnimationTime=function(){},se.MorphBlendMesh.prototype.getAnimationDuration=function(){},se.MorphBlendMesh.prototype.playAnimation=function(){},se.MorphBlendMesh.prototype.stopAnimation=function(){},se.MorphBlendMesh.prototype.update=function(){};var M="undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window;(M._gsQueue||(M._gsQueue=[])).push(function(){var t;M._gsDefine("TweenMax",["core.Animation","core.SimpleTimeline","TweenLite"],function(r,a,o){var i=function(a,r,t){o.call(this,a,r,t),this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._dirty=!0,this.render=i.prototype.render},p=1e-10,t=o._internals,n=(t.isSelector,t.isArray,i.prototype=o.to({},.1,{}));return i.version="3.6.0",n.constructor=i,n.kill()._gc=!1,i.killTweensOf=i.killDelayedCallsTo=o.killTweensOf,i.getTweensOf=o.getTweensOf,i.lagSmoothing=o.lagSmoothing,i.ticker=o.ticker,i.render=o.render,n.invalidate=function(){},n.updateTo=function(){},n.render=async function(l,c,u){(async()=>{this._initted||0===this._duration&&this.vars.repeat&&this.invalidate();var a=this._dirty?this.totalDuration():this._totalDuration,o=this._time,r=this._totalTime,e=this._cycle,d=this._duration,n=this._rawPrevTime,i,h,v,y,x,b,L,E;if(l>=a?(this._totalTime=a,this._cycle=this._repeat,this._yoyo&&0!=(1&this._cycle)?(this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0):(this._time=d,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1),this._reversed||(i=!0,h="onComplete",u=u||this._timeline.autoRemoveChildren),0===d&&(this._initted||!this.vars.lazy||u)&&(this._startTime===this._timeline._duration&&(l=0),(0==l||0>n||n===p)&&n!==l&&(u=!0,n>p&&(h="onReverseComplete")),this._rawPrevTime=E=!c||l||n===l?l:p)):1e-7>l?(this._totalTime=this._time=this._cycle=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==r||0===d&&0<n)&&(h="onReverseComplete",i=this._reversed),0>l&&(this._active=!1,0===d&&(this._initted||!this.vars.lazy||u)&&(0<=n&&(u=!0),this._rawPrevTime=E=!c||l||n===l?l:p)),this._initted||(u=!0)):(this._totalTime=this._time=await l,0!==this._repeat&&(y=d+this._repeatDelay,this._cycle=this._totalTime/y>>0,0!==this._cycle&&this._cycle===this._totalTime/y&&this._cycle--,this._time=this._totalTime-this._cycle*y,this._yoyo&&0!=(1&this._cycle)&&(this._time=d-this._time),this._time>d?this._time=d:0>this._time&&(this._time=0)),this._easeType?(x=this._time/d,(1===(b=this._easeType)||3===b&&.5<=x)&&(x=1-x),3===b&&(x*=2),1===(L=this._easePower)?x*=x:2===L?x*=x*x:3===L?x*=x*x*x:4===L&&(x*=x*x*x*x),this.ratio=1===(await b)?1-(await x):2===(await b)?await x:.5>(await this._time)/(await d)?(await x)/2:1-(await x)/2):this.ratio=await this._ease.getRatio((await this._time)/(await d))),o!==this._time||u||e!==this._cycle){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!u&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=o,this._totalTime=r,this._rawPrevTime=n,this._cycle=e,t.lazyTweens.push(this),void(this._lazy=[l,c]);this._time&&!i?this.ratio=this._ease.getRatio(this._time/d):i&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==o&&0<=l&&(this._active=!0),0===r&&(2===this._initted&&0<l&&this._init(),this._startAt&&(0<=l?this._startAt.render(l,c,u):h||(h="_dummyGS")),this.vars.onStart&&(0!==this._totalTime||0===d)&&(c||this._callback("onStart"))),v=await this._firstPT;v;)v.f?v.t[v.p]((await v.c)*(await this.ratio)+(await v.s)):v.t[v.p]=(await v.c)*(await this.ratio)+(await v.s),v=v._next;this._onUpdate&&(0>l&&this._startAt&&this._startTime&&this._startAt.render(l,c,u),c||(this._totalTime!==r||i)&&this._callback("onUpdate")),this._cycle!==e&&(c||this._gc||this.vars.onRepeat&&this._callback("onRepeat")),h&&(!this._gc||u)&&(0>l&&this._startAt&&!this._onUpdate&&this._startTime&&this._startAt.render(l,c,u),i&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!c&&this.vars[h]&&this._callback(h),0===d&&this._rawPrevTime===p&&E!==p&&(this._rawPrevTime=0))}else(await r)!==this._totalTime&&this._onUpdate&&(c||this._callback("onUpdate"))})()},i.to=function(a,r,t){return new i(a,r,t)},i.from=function(){},i.fromTo=function(e,a,o,r){return r.startAt=o,r.immediateRender=0!=r.immediateRender&&0!=o.immediateRender,new i(e,a,r)},i.staggerTo=i.allTo=function(){},i.staggerFrom=i.allFrom=function(){},i.staggerFromTo=i.allFromTo=function(){},i.delayedCall=function(){},i.set=function(){},i.isTweening=function(){},i.getAllTweens=function(){},i.killAll=function(){},i.killChildTweensOf=function(){},i.pauseAll=function(){},i.resumeAll=function(){},i.globalTimeScale=async function(){},n.progress=function(){},n.totalProgress=function(){},n.time=function(){},n.duration=function(){},n.totalDuration=function(t){return arguments.length?-1===this._repeat?this:this.duration((t-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat,this._dirty=!1),this._totalDuration)},n.repeat=function(){},n.repeatDelay=function(){},n.yoyo=function(){},i},!0),M._gsDefine("TimelineLite",["core.Animation","core.SimpleTimeline","TweenLite"],function(p,d,a){var t=function(o){d.call(this,o),this._labels={},this.autoRemoveChildren=!0===this.vars.autoRemoveChildren,this.smoothChildTiming=!0===this.vars.smoothChildTiming,this._sortChildren=!0,this._onUpdate=this.vars.onUpdate;var a=this.vars,r,n;for(n in a)r=a[n],e(r)&&-1!==r.join("").indexOf("{self}")&&(a[n]=this._swapSelfInParams(r));e(a.tweens)&&this.add(a.tweens,0,a.align,a.stagger)},n=a._internals,r=t._internals={},e=(n.isSelector,n.isArray),o=(n.lazyTweens,n.lazyRender,M._gsDefine.globals,r.pauseCallback=function(){},t.prototype=new d);return t.version="3.6.0",o.constructor=t,o.kill()._gc=o._forcingPlayhead=o._hasPause=!1,o.to=function(){},o.from=function(){},o.fromTo=function(){},o.staggerTo=function(){},o.staggerFrom=function(){},o.staggerFromTo=function(){},o.call=function(){},o.set=function(){},t.exportRoot=function(){},o.add=function(r,o,n,c){var u,f,g,_,h,b;if("number"!=typeof o&&(o=this._parseTimeOrLabel(o,0,!0,r)),!(r instanceof p)){if(r instanceof Array||r&&r.push&&e(r)){for(n=n||"normal",c=c||0,u=o,f=r.length,g=0;f>g;g++)e(_=r[g])&&(_=new t({tweens:_})),this.add(_,u),"string"!=typeof _&&"function"!=typeof _&&("sequence"===n?u=_._startTime+_.totalDuration()/_._timeScale:"start"===n&&(_._startTime-=_.delay())),u+=c;return this._uncache(!0)}if("string"==typeof r)return this.addLabel(r,o);if("function"!=typeof r)throw"Cannot add "+r+" into the timeline; it is not a tween, timeline, function, or string.";r=a.delayedCall(0,r)}if(d.prototype.add.call(this,r,o),(this._gc||this._time===this._duration)&&!this._paused&&this._duration<this.duration())for(b=(h=this).rawTime()>r._startTime;h._timeline;)b&&h._timeline.smoothChildTiming?h.totalTime(h._totalTime,!0):h._gc&&h._enabled(!0,!1),h=h._timeline;return this},o.remove=function(){},o._remove=function(){},o.append=function(){},o.insert=o.insertMultiple=function(){},o.appendMultiple=function(){},o.addLabel=function(){},o.addPause=function(){},o.removeLabel=function(){},o.getLabelTime=function(){},o._parseTimeOrLabel=function(){},o.seek=function(){},o.stop=function(){},o.gotoAndPlay=function(){},o.gotoAndStop=function(){},o.render=function(){},o._hasPausedChild=function(){},o.getChildren=function(){},o.getTweensOf=function(){},o.recent=function(){},o._contains=function(){},o.shiftChildren=function(){},o._kill=function(e,a){if(!e&&!a)return this._enabled(!1,!1);var o=a?this.getTweensOf(a):this.getChildren(!0,!0,!1),r=o.length,n=!1;for(o,r,n;-1<--r;)o[r]._kill(e,a)&&(n=!0);return n},o.clear=function(){},o.invalidate=function(){},o._enabled=function(e,a){if(e===this._gc)var t=this._first;for(t;t;)t._enabled(e,!0),t=t._next;return d.prototype._enabled.call(this,e,a)},o.totalTime=function(){this._forcingPlayhead=!0;var t=p.prototype.totalTime.apply(this,arguments);return this._forcingPlayhead=!1,t},o.duration=function(t){return arguments.length?(0!==this.duration()&&0!==t&&this.timeScale(this._duration/t),this):(this._dirty&&this.totalDuration(),this._duration)},o.totalDuration=function(e){if(!arguments.length){if(this._dirty){var r=0,o=this._last,i=999999999999,n,d;for(n,d,r,o,i;o;)n=o._prev,o._dirty&&o.totalDuration(),o._startTime>i&&this._sortChildren&&!o._paused?this.add(o,o._startTime-o._delay):i=o._startTime,0>o._startTime&&!o._paused&&(r-=o._startTime,this._timeline.smoothChildTiming&&(this._startTime+=o._startTime/this._timeScale),this.shiftChildren(-o._startTime,!1,-9999999999),i=0),(d=o._startTime+o._totalDuration/o._timeScale)>r&&(r=d),o=n;this._duration=this._totalDuration=r,this._dirty=!1}return this._totalDuration}return 0!==this.totalDuration()&&0!==e&&this.timeScale(this._totalDuration/e),this},o.paused=function(){},o.usesFrames=function(){},o.rawTime=function(){return this._paused?this._totalTime:(this._timeline.rawTime()-this._startTime)*this._timeScale},t},!0),M._gsDefine("TimelineMax",["TimelineLite","TweenLite","easing.Ease"],function(t,a,o){var r=function(r){t.call(this,r),this._repeat=this.vars.repeat||0,this._repeatDelay=this.vars.repeatDelay||0,this._cycle=0,this._yoyo=!0===this.vars.yoyo,this._dirty=!0},h=1e-10,i=a._internals,n=i.lazyTweens,d=i.lazyRender,l=(new o(null,null,1,0),r.prototype=new t);return l.constructor=r,l.kill()._gc=!1,r.version="3.6.0",l.invalidate=function(){},l.addCallback=function(){},l.removeCallback=function(){},l.removePause=function(){},l.tweenTo=function(){},l.tweenFromTo=function(){},l.render=async function(e,u,a){(async()=>{this._gc&&this._enabled(!0,!1);var t=this._dirty?this.totalDuration():this._totalDuration,r=this._duration,i=this._time,m=this._totalTime,s=this._startTime,p=this._timeScale,l=this._rawPrevTime,c=this._paused,g=this._cycle,f,T,E,C,P,D,w;if(e>=t)this._locked||(this._totalTime=t,this._cycle=this._repeat),this._reversed||this._hasPausedChild()||(T=!0,C="onComplete",P=!!this._timeline.autoRemoveChildren,0===this._duration&&(0===e||0>l||l===h)&&l!==e&&this._first&&(P=!0,l>h&&(C="onReverseComplete"))),this._rawPrevTime=this._duration||!u||e||this._rawPrevTime===e?e:h,this._yoyo&&0!=(1&this._cycle)?this._time=e=0:(this._time=r,e=r+1e-4);else if(1e-7>e){if(this._locked||(this._totalTime=this._cycle=0),this._time=0,(0!==i||0===r&&l!==h&&(0<l||0>e&&0<=l)&&!this._locked)&&(C="onReverseComplete",T=this._reversed),0>e)this._active=!1,this._timeline.autoRemoveChildren&&this._reversed?(P=T=!0,C="onReverseComplete"):0<=l&&this._first&&(P=!0),this._rawPrevTime=e;else{if(this._rawPrevTime=r||!u||e||this._rawPrevTime===e?e:h,0===e&&T)for(f=this._first;f&&0===f._startTime;)f._duration||(T=!1),f=f._next;e=0,this._initted||(P=!0)}}else if(0===(await r)&&0>(await l)&&(P=!0),this._time=this._rawPrevTime=e,this._locked||(this._totalTime=await e,0!==this._repeat&&(D=r+this._repeatDelay,this._cycle=(await this._totalTime)/(await D)>>0,0!==this._cycle&&this._cycle===this._totalTime/D&&this._cycle--,this._time=this._totalTime-this._cycle*D,this._yoyo&&0!=(1&this._cycle)&&(this._time=(await r)-(await this._time)),this._time>r?(this._time=r,e=r+1e-4):0>this._time?this._time=e=0:e=this._time)),this._hasPause&&!this._forcingPlayhead&&!u){if((e=this._time)>=i)for(f=this._first;f&&e>=f._startTime&&!w;)f._duration||"isPause"!==f.data||f.ratio||0===f._startTime&&0===this._rawPrevTime||(w=f),f=f._next;else for(f=this._last;f&&f._startTime>=e&&!w;)f._duration||"isPause"===f.data&&0<f._rawPrevTime&&(w=f),f=f._prev;w&&(this._time=e=w._startTime,this._totalTime=e+this._cycle*(this._totalDuration+this._repeatDelay))}if(this._cycle!==g&&!this._locked){var U=this._yoyo&&0!=(1&g),G=U===(this._yoyo&&0!=(1&this._cycle)),A=this._totalTime,I=this._cycle,R=this._rawPrevTime,F=this._time;if(this._totalTime=g*r,g>this._cycle?U=!U:this._totalTime+=r,this._time=i,this._rawPrevTime=0===r?l-1e-4:l,this._cycle=g,this._locked=!0,i=U?0:r,this.render(i,u,0===r),u||this._gc||this.vars.onRepeat&&this._callback("onRepeat"),G&&(i=U?r+1e-4:-1e-4,this.render(i,!0,!1)),this._locked=!1,this._paused&&!c)return;this._time=F,this._totalTime=A,this._cycle=I,this._rawPrevTime=R}if(this._time!==i&&this._first||a||P||w){if(this._initted||(this._initted=!0),this._active||!this._paused&&this._totalTime!==m&&0<e&&(this._active=!0),0===m&&this.vars.onStart&&0!==this._totalTime&&(u||this._callback("onStart")),this._time>=i)for(f=this._first;f&&(E=f._next,!this._paused||c);)(f._active||f._startTime<=this._time&&!f._paused&&!f._gc)&&(w===f&&this.pause(),f._reversed?f.render((f._dirty?f.totalDuration():f._totalDuration)-(e-f._startTime)*f._timeScale,u,a):f.render((e-f._startTime)*f._timeScale,u,a)),f=E;else for(f=this._last;f&&(E=f._prev,!this._paused||c);){if(f._active||i>=f._startTime&&!f._paused&&!f._gc){if(w===f){for(w=f._prev;w&&w.endTime()>this._time;)w.render(w._reversed?w.totalDuration()-(e-w._startTime)*w._timeScale:(e-w._startTime)*w._timeScale,u,a),w=w._prev;w=null,this.pause()}f._reversed?f.render((f._dirty?f.totalDuration():f._totalDuration)-(e-f._startTime)*f._timeScale,u,a):f.render((e-f._startTime)*f._timeScale,u,a)}f=E}this._onUpdate&&(u||(n.length&&d(),this._callback("onUpdate"))),C&&(this._locked||this._gc||(s===this._startTime||p!==this._timeScale)&&(0===this._time||t>=this.totalDuration())&&(T&&(n.length&&d(),this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!u&&this.vars[C]&&this._callback(C)))}else m!==this._totalTime&&this._onUpdate&&(u||this._callback("onUpdate"))})()},l.getActive=function(){},l.getLabelAfter=function(){},l.getLabelBefore=function(){},l.getLabelsArray=function(){},l.progress=function(e,r){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&0!=(1&this._cycle)?1-e:e)+this._cycle*(this._duration+this._repeatDelay),r):this._time/this.duration()},l.totalProgress=function(){},l.totalDuration=function(r){return arguments.length?-1===this._repeat?this:this.duration((r-this._repeat*this._repeatDelay)/(this._repeat+1)):(this._dirty&&(t.prototype.totalDuration.call(this),this._totalDuration=-1===this._repeat?999999999999:this._duration*(this._repeat+1)+this._repeatDelay*this._repeat),this._totalDuration)},l.time=function(){},l.repeat=function(){},l.repeatDelay=function(){},l.yoyo=function(){},l.currentLabel=function(){},r},!0),function(){Math.PI,M._gsDefine.globals;var e=M._gsDefine.plugin({propName:"bezier",priority:-1,version:"3.6.0",API:2,global:!0,init:function(){},set:function(){}}),r=e.prototype;e.bezierThrough=function(){},e.cubicToQuadratic=function(){},e._autoCSS=!0,e.quadraticToCubic=function(){},e._cssRegister=function(){},r._roundProps=function(){},r._kill=function(){}}(),M._gsDefine("plugins.CSSPlugin",["plugins.TweenPlugin","TweenLite"],async function(e,r){var a=await function(){e.call(this,"css"),this._overwriteProps.length=0,this.setRatio=a.prototype.setRatio},i=(M._gsDefine.globals,{}),n=a.prototype=new e("css");n.constructor=a,a.version="3.6.0",a.API=2,a.defaultTransformPerspective=0,a.defaultSkewType="compensated",a.defaultSmoothOrigin=!0,n="px",a.suffixMap={top:n,right:n,bottom:n,left:n,width:n,height:n,fontSize:n,padding:n,margin:n,perspective:n,lineHeight:""},Math.PI,Math.PI;var u=document,c=await function(t){return u.createElementNS?u.createElementNS("http://www.w3.org/1999/xhtml",t):u.createElement(t)},h=c("div"),o=(c("img"),a._internals={_specialProps:i}),l=navigator.userAgent,s=(await function(){var e=l.indexOf("Android"),r=c("a");(y=-1!==l.indexOf("Safari")&&-1===l.indexOf("Chrome")&&(-1===e||3<+l.substr(e+8,1)))&&l.substr(l.indexOf("Version/")+8,1),T=-1!==l.indexOf("Firefox"),(/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(l)||/Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(l))&&(b=parseFloat(RegExp.$1)),r&&(r.style.cssText="top:1px;opacity:.55;",/^0.55/.test(r.style.opacity))}(),""),m=await function(e,t){var o=(t=t||h).style,n,l;if(void 0!==o[e])return e;for(e=e.charAt(0).toUpperCase()+e.substr(1),n=["O","Moz","ms","Ms","Webkit"],l=5;-1<--l&&void 0===o[n[l]+e];);return 0<=l?((s=3===l?"ms":n[l]).toLowerCase(),s+e):null},f=(u.defaultView&&u.defaultView.getComputedStyle,a.getStyle=function(){},o.convertToPixels=async function(){},o.calculateOffset=function(){}),g=(a.parseColor=function(){},"(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b"),y,T,b;for(n in{aqua:[0,255,255],lime:[0,255,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,255],navy:[0,0,128],white:[255,255,255],fuchsia:[255,0,255],olive:[128,128,0],yellow:[255,255,0],orange:[255,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[255,0,0],pink:[255,192,203],cyan:[0,255,255],transparent:[255,255,255,0]})g+="|"+n+"\\b";g=RegExp(g+")","gi"),a.colorStringFilter=function(){},r.defaultStringFilter||(r.defaultStringFilter=a.colorStringFilter);var C=await function(e,a){if(null==e)return function(){};var o=a?(e.match(g)||[""])[0]:"",r=e.split(o).join("").match(/(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi)||[];return 0<(e.substr(0,e.indexOf(r[0])),e.charAt(e.length-1),e.indexOf(" "),r.length)&&r[0].replace(/(?:\d|\-\d|\.\d|\-\.\d)+/g,"")},S=function(t){return t=t.split(",")},E=(o._setPluginRatio=function(){},o._parseToProxy=function(){},o.CSSPropTween=function(){}),P=(a.parseComplex=function(){},9);for((n=E.prototype).l=n.pr=0;0<--P;)n["xn"+P]=0,n["xs"+P]="";n.xs0="",n._next=n._prev=n.xfirst=n.data=n.plugin=n.setRatio=n.rxp=null,n.appendXtra=function(){};var I=function(e,r){r=r||{},this.p=r.prefix&&m(e)||e,i[e]=i[this.p]=this,this.format=r.formatter||C(r.defaultValue,r.color,r.collapsible,r.multi),r.parser&&(this.parse=r.parser),this.clrs=r.color,this.multi=r.multi,this.keyword=r.keyword,this.dflt=r.defaultValue,this.pr=r.priority||0},A=o._registerComplexSpecialProp=function(e,r,o){"object"!=typeof r&&(r={parser:o});var i=e.split(","),n=r.defaultValue,l;for(o=o||[n],l=0;i.length>l;l++)r.prefix=0===l&&r.prefix,r.defaultValue=o[l]||n,new I(i[l],r)},F=function(t){i[t]||(t.charAt(0).toUpperCase(),t.substr(1),A(t,{}))};(n=I.prototype).parseComplex=function(){},n.parse=function(){},a.registerSpecialProp=function(){},a.useSVGTransformAttr=y||T;var G=m("transform"),D=m("transformOrigin"),w=null!==m("perspective"),N=o.Transform=function(){},R=window.SVGElement,U=u.documentElement;for(async function(){window.addEventListener("DOMContentLoaded",()=>{})}(),o.getTransform=function(){},o.set3DTransformRatio=o.setTransformRatio=function(){},(n=N.prototype).x=n.y=n.z=n.skewX=n.skewY=n.rotation=n.rotationX=n.rotationY=n.zOrigin=n.xPercent=n.yPercent=n.xOffset=n.yOffset=0,n.scaleX=n.scaleY=n.scaleZ=1,A("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin",{parser:function(){},prefix:!0}),A("boxShadow",{defaultValue:"0px 0px 0px 0px #999",prefix:!0,color:!0,multi:!0,keyword:"inset"}),A("borderRadius",{defaultValue:"0px",parser:function(){},prefix:!0,formatter:C("0px 0px 0px 0px",!1)}),A("backgroundPosition",{defaultValue:"0 0",parser:function(){},formatter:f}),A("backgroundSize",{defaultValue:"0 0",formatter:f}),A("perspective",{defaultValue:"0px",prefix:!0}),A("perspectiveOrigin",{defaultValue:"50% 50%",prefix:!0}),A("transformStyle",{prefix:!0}),A("backfaceVisibility",{prefix:!0}),A("userSelect",{prefix:!0}),A("margin",{parser:S("marginTop,marginRight,marginBottom,marginLeft")}),A("padding",{parser:S("paddingTop,paddingRight,paddingBottom,paddingLeft")}),A("clip",{defaultValue:"rect(0px,0px,0px,0px)",parser:function(){}}),A("textShadow",{defaultValue:"0px 0px 0px #999",color:!0,multi:!0}),A("autoRound,strictUnits",{parser:function(){}}),A("border",{defaultValue:"0px solid #000",parser:function(){},color:!0,formatter:function(){}}),A("borderWidth",{parser:S("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}),A("float,cssFloat,styleFloat",{parser:function(){}}),A("opacity,alpha,autoAlpha",{defaultValue:"1",parser:function(){}}),A("className",{parser:function(){}}),A("clearProps",{}),P=(n=["bezier","throwProps","physicsProps","physics2D"]).length;P--;)F(n[P]);return(n=a.prototype)._firstPT=n._lastParsedTransform=n._transform=null,n._onInitTween=function(){},n.parse=function(){},n.setRatio=function(){},n._enableTransforms=function(){},n._addLazySet=function(){},n._linkCSSP=function(){},n._kill=function(){},a.cascadeTo=function(){},e.activate([a]),a},!0),(t=M._gsDefine.plugin({propName:"roundProps",version:"3.6.0",priority:-1,API:2,init:function(){}}).prototype)._onInitAllProps=function(){},t._add=function(){},M._gsDefine.plugin({propName:"attr",API:2,version:"3.6.0",init:function(){}}),M._gsDefine.plugin({propName:"directionalRotation",version:"3.6.0",API:2,init:function(){},set:function(){}})._autoCSS=!0,M._gsDefine("easing.Back",["easing.Ease"],async function(s){var a=M.GreenSockGlobals||M,t=a.com.greensock,p=2*Math.PI,d=(Math.PI,t._class),e=function(r,a){var o=d("easing."+r,function(){},!0),t=o.prototype=new s;return t.constructor=o,t.getRatio=a,o},c=s.register||function(){},u=await function(o,t,e,r){var a=d("easing."+o,{easeOut:new t,easeIn:new e,easeInOut:new r},!0);return c(a,o),a},r=await function(a,r,t){this.t=a,this.v=r,t&&(this.next=t,t.prev=this,this.c=t.v-r,this.gap=t.t-a)},m=await function(r,a){var o=d("easing."+r,function(t){this._p1=t||0===t?t:1.70158,this._p2=1.525*this._p1},!0),t=o.prototype=new s;return t.constructor=o,t.getRatio=a,t.config=function(){},o},o=u("Back",m("BackOut",function(){}),m("BackIn",function(){}),m("BackInOut",function(){})),i=d("easing.SlowMo",await function(e,t,i){t=t||0===t?t:.7,null==e?e=.7:1<e&&(e=1),this._p=1===e?0:t,this._p1=(1-e)/2,this._p2=e,this._p3=this._p1+this._p2,this._calcEnd=!0===i},!0),n=i.prototype=new s,f,_,y;return n.constructor=i,n.getRatio=function(){},i.ease=new i(.7,.7),n.config=i.config=function(){},(n=(f=d("easing.SteppedEase",function(t){t=t||1,this._p1=1/t,this._p2=t+1},!0)).prototype=new s).constructor=f,n.getRatio=function(){},n.config=f.config=function(){},_=d("easing.RoughEase",await function(e){var a=(e=e||{}).taper||"none",i=[],o=0,u=0|(e.points||20),d=u,_=!1!==e.randomize,f=!0===e.clamp,m=e.template instanceof s?e.template:null,g="number"==typeof e.strength?.4*e.strength:.4,c,v,x,b,L,E;for(c,v,x,b,L,E,a,i,o,u,d,_,f,m,g;-1<--d;)c=_?Math.random():1/u*d,v=m?m.getRatio(c):c,x="none"===a?g:"out"===a?(b=1-c)*b*g:"in"===a?c*c*g:.5>c?.5*(b=2*c)*b*g:.5*(b=2*(1-c))*b*g,_?v+=Math.random()*x-.5*x:d%2?v+=.5*x:v-=.5*x,f&&(1<v?v=1:0>v&&(v=0)),i[o++]={x:c,y:v};for(i.sort(function(e,r){return e.x-r.x}),E=new r(1,1,null),d=u;-1<--d;)L=i[d],E=new r(L.x,L.y,E);this._prev=new r(0,0,0===E.t?E.next:E)},!0),(n=_.prototype=new s).constructor=_,n.getRatio=function(){},n.config=function(){},_.ease=new _,u("Bounce",e("BounceOut",function(){}),e("BounceIn",function(){}),e("BounceInOut",function(){})),u("Circ",e("CircOut",function(){}),e("CircIn",function(){}),e("CircInOut",function(){})),u("Elastic",(y=function(a,r,i){var t=d("easing."+a,function(r,t){this._p1=1<=r?r:1,this._p2=(t||i)/(1>r?r:1),this._p3=this._p2/p*(Math.asin(1/this._p1)||0),this._p2=p/this._p2},!0),e=t.prototype=new s;return e.constructor=t,e.getRatio=r,e.config=function(){},t})("ElasticOut",function(){},.3),y("ElasticIn",function(){},.3),y("ElasticInOut",function(){},.45)),u("Expo",e("ExpoOut",function(){}),e("ExpoIn",function(){}),e("ExpoInOut",function(){})),u("Sine",e("SineOut",function(){}),e("SineIn",function(){}),e("SineInOut",function(){})),d("easing.EaseLookup",{find:function(){}},!0),c(a.SlowMo,"SlowMo","ease,"),c(_,"RoughEase","ease,"),c(f,"SteppedEase","ease,"),o},!0)}),M._gsDefine&&M._gsQueue.pop()(),async function(h){var u=h.GreenSockGlobals=h.GreenSockGlobals||h;if(!u.TweenLite){var a=function(o){var e=o.split("."),r=u,i;for(i=0;e.length>i;i++)r[e[i]]=r=r[e[i]]||{};return r},d=a("com.greensock"),y=1e-10,x=function(){},e=function(){var a=Object.prototype.toString,r=a.call([]);return function(t){return null!=t&&(t instanceof Array||"object"==typeof t&&!!t.push&&a.call(t)===r)}}(),i={},m=function(o,e,r,l){this.sc=i[o]?i[o].sc:[],i[o]=this,this.gsClass=null,this.func=r;var t=[];this.check=function(n){var p=e.length,d=p,c,f,y,S,b;for(c,f,y,S,b,p,d;-1<--p;)(c=i[e[p]]||new m(e[p],[])).gsClass?(t[p]=c.gsClass,d--):n&&c.sc.push(this);if(0===d&&r)for(y=(f=("com.greensock."+o).split(".")).pop(),S=a(f.join("."))[y]=this.gsClass=r.apply(r,t),l&&(u[y]=S,!(b="undefined"!=typeof module&&module.exports)&&"function"==typeof define&&define.amd?define((h.GreenSockAMDPath?h.GreenSockAMDPath+"/":"")+o.split(".").pop(),[],function(){}):"TweenMax"===o&&b&&(module.exports=S)),p=0;this.sc.length>p;p++)this.sc[p].check()},this.check(!0)},s=h._gsDefine=function(e,a,o,r){return new m(e,a,o,r)},g=d._class=function(t,r,a){return r=r||function(){},s(t,[],function(){return r},a),r},r,c,v,M,T;s.globals=u;var L=[0,0,1,1],l=g("easing.Ease",function(e,a,o,r){this._func=e,this._type=o||0,this._power=r||0,this._params=a?L.concat(a):L},!0),S=l.map={},C=l.register=function(o,t,r,a){for(var i=t.split(","),e=i.length,m=(r||"easeIn,easeOut,easeInOut").split(","),l,f,_,h;-1<--e;)for(f=i[e],l=a?g("easing."+f,null,!0):d.easing[f]||{},_=m.length;-1<--_;)h=m[_],S[f+"."+h]=S[h+f]=l[h]=o.getRatio?o:o[h]||new o};for((v=l.prototype)._calcEnd=!1,v.getRatio=function(e){if(this._func)return this._params[0]=e,this._func.apply(null,this._params);var a=this._type,o=this._power,r=1===a?1-e:2===a?e:.5>e?2*e:2*(1-e);return 1===o?r*=r:2===o?r*=r*r:3===o?r*=r*r*r:4===o&&(r*=r*r*r*r),1===a?1-r:2===a?r:.5>e?r/2:1-r/2},c=(r=["Linear","Quad","Cubic","Quart","Quint,Strong"]).length;-1<--c;)v=r[c]+",Power"+c,C(new l(null,null,1,c),v,"easeOut",!0),C(new l(null,null,2,c),v,"easeIn"+(0===c?",easeNone":"")),C(new l(null,null,3,c),v,"easeInOut");S.linear=d.easing.Linear.easeIn,S.swing=d.easing.Quad.easeInOut;var E=g("events.EventDispatcher",function(t){this._listeners={},this._eventTarget=t||this});(v=E.prototype).addEventListener=function(o,r,t,e,a){a=a||0;var s=this._listeners[o],p=0,c,u;for(null==s&&(this._listeners[o]=s=[]),u=s.length;-1<--u;)(c=s[u]).c===r&&c.s===t?s.splice(u,1):0===p&&a>c.pr&&(p=u+1);s.splice(p,0,{c:r,s:t,up:e,pr:a}),this!==M||T||M.wake()},v.removeEventListener=function(){},v.dispatchEvent=async function(o){var e=await this._listeners[await o],r,n,l;if(await e)for(r=await e.length,n=await this._eventTarget;-1<(await--r);)l=await e[await r],(await l)&&((await l.up)?await l.c.call((await l.s)||(await n),{type:await o,target:await n}):await l.c.call((await l.s)||(await n)))};var f=h.window.requestAnimationFrame,b=h.cancelAnimationFrame,D=Date.now||async function(){},R=D();for(c=(r=["ms","moz","webkit","o"]).length;-1<--c&&!f;)b=(await h[(await r[await c])+"CancelAnimationFrame"])||(await h[(await r[await c])+"CancelRequestAnimationFrame"]);g("Ticker",function(e,r){var n=this,l=D(),a=!1!==r&&f,s=async function(e){var t=D()-R,r,a;500<t&&(l+=t-33),R+=t,n.time=(R-l)/1e3,r=n.time-h,(!p||0<r||!0===e)&&(n.frame++,h+=r+(r>=_?4e-6:_-r),a=!0),!0!==e&&(m=c(s)),a&&n.dispatchEvent("tick")},p,c,m,_,h;n.time=n.frame=0,E.call(n),window.onload=n.tick=async function(){},n.lagSmoothing=async function(){},n.sleep=async function(){null!=m&&(a&&b?b(m):clearTimeout(m),c=await x,m=null,n===M&&(T=!1))},n.wake=async function(){null===m?10<n.frame&&(R=(await D())-500+5):n.sleep(),c=0===p?x:a&&f?f:async function(){},n===(await M)&&(T=!0),s(2)},n.fps=async function(e){return arguments.length?(_=1/((p=await e)||60),h=(await this.time)+(await _),void n.wake()):p},n.useRAF=async function(){},n.fps(e),setTimeout(async function(){(await a)&&5>(await n.frame)&&(await n.useRAF(!1))},1500)}),(v=d.Ticker.prototype=new d.events.EventDispatcher).constructor=d.Ticker;var F=g("core.Animation",function(e,r){if(this.vars=r=r||{},this._duration=this._totalDuration=e||0,this._delay=+r.delay||0,this._timeScale=1,this._active=!0===r.immediateRender,this.data=r.data,this._reversed=!0===r.reversed,q){T||M.wake();var o=this.vars.useFrames?j:q;o.add(this,o._time),this.vars.paused&&this.paused(!0)}});M=F.ticker=new d.Ticker,(v=F.prototype)._dirty=v._gc=v._initted=v._paused=!1,v._totalTime=v._time=0,v._rawPrevTime=-1,v._next=v._last=v._onUpdate=v._timeline=v.timeline=null,v._paused=!1;var B=async function(){T&&2e3<D()-R&&M.wake(),setTimeout(B,2e3)};B(),v.play=async function(){},v.pause=function(){},v.resume=function(){},v.seek=async function(){},v.restart=async function(){},v.reverse=async function(){},v.render=async function(){},v.invalidate=async function(){},v.isActive=async function(){var t=this._timeline,r=this._startTime,e;return!t||!this._gc&&!this._paused&&t.isActive()&&(e=t.rawTime())>=r&&r+this.totalDuration()/this._timeScale>e},v._enabled=async function(e,r){return T||M.wake(),this._gc=!e,this._active=this.isActive(),!0!==r&&(e&&!this.timeline?this._timeline.add(this,this._startTime-this._delay):!e&&this.timeline&&this._timeline._remove(this,!0)),!1},v._kill=function(){return this._enabled(!1,!1)},v.kill=function(e,r){return this._kill(e,r),this},v._uncache=async function(e){var r=e?this:this.timeline;for(r;r;)r._dirty=!0,r=r.timeline;return this},v._swapSelfInParams=async function(){},v._callback=async function(){},v.eventCallback=async function(){},v.delay=async function(){},v.duration=function(){},v.totalDuration=function(){},v.time=async function(){},v.totalTime=function(t,n,a){if(T||M.wake(),!arguments.length)return this._totalTime;if(this._timeline){if(0>t&&!a&&(t+=this.totalDuration()),this._timeline.smoothChildTiming){this._dirty&&this.totalDuration();var o=this._totalDuration,i=this._timeline;if(t>o&&!a&&(t=o),this._startTime=(this._paused?this._pauseTime:i._time)-(this._reversed?o-t:t)/this._timeScale,i._dirty||this._uncache(!1),i._timeline)for(;i._timeline;)i._timeline._time!==(i._startTime+i._totalTime)/i._timeScale&&i.totalTime(i._totalTime,!0),i=i._timeline}this._gc&&this._enabled(!0,!1),(this._totalTime!==t||0===this._duration)&&(N.length&&ae(),this.render(t,n,!1),N.length&&ae())}return this},v.progress=v.totalProgress=function(){},v.startTime=function(){},v.endTime=function(){},v.timeScale=function(t){if(!arguments.length)return this._timeScale;if(t=t||y,this._timeline&&this._timeline.smoothChildTiming){var o=this._pauseTime,a=o||0===o?o:this._timeline.totalTime();this._startTime=a-(a-this._startTime)*this._timeScale/t}return this._timeScale=t,this._uncache(!1)},v.reversed=async function(){},v.paused=function(){};var G=g("core.SimpleTimeline",function(t){F.call(this,0,t),this.autoRemoveChildren=this.smoothChildTiming=!0});(v=G.prototype=new F).constructor=G,v.kill()._gc=!1,v._first=v._last=v._recent=null,v._sortChildren=!1,v.add=v.insert=function(o,r){var t,i;if(o._startTime=+(r||0)+o._delay,o._paused&&this!==o._timeline&&(o._pauseTime=o._startTime+(this.rawTime()-o._startTime)/o._timeScale),o.timeline&&o.timeline._remove(o,!0),o.timeline=o._timeline=this,o._gc&&o._enabled(!0,!0),t=this._last,this._sortChildren)for(i=o._startTime;t&&t._startTime>i;)t=t._prev;return t?(o._next=t._next,t._next=o):(o._next=this._first,this._first=o),o._next?o._next._prev=o:this._last=o,o._prev=t,this._recent=o,this._timeline&&this._uncache(!0),this},v._remove=function(e,r){return e.timeline===this&&(r||e._enabled(!1,!0),e._prev?e._prev._next=e._next:this._first===e&&(this._first=e._next),e._next?e._next._prev=e._prev:this._last===e&&(this._last=e._prev),e._next=e._prev=e.timeline=null,e===this._recent&&(this._recent=this._last),this._timeline&&this._uncache(!0)),this},v.render=async function(e,a,o){var r=await this._first,n;for(this._totalTime=this._time=this._rawPrevTime=await e;r;)n=await r._next,((await r._active)||e>=(await r._startTime)&&(await!r._paused))&&((await r._reversed)?await r.render(((await r._dirty)?await r.totalDuration():await r._totalDuration)-((await e)-(await r._startTime))*(await r._timeScale),a,o):await r.render(((await e)-(await r._startTime))*(await r._timeScale),a,o)),r=await n},v.rawTime=function(){return T||M.wake(),this._totalTime};var w=g("TweenLite",function(a,i,n){if(F.call(this,i,n),this.render=w.prototype.render,null==a)throw"Cannot tween a null target.";this.target=a="string"==typeof a&&w.selector(a)||a;var r=a.jquery||a.length&&a!==h&&a[0]&&(a[0]===h||a[0].nodeType&&a[0].style&&!a.nodeType),l=this.vars.overwrite,s,d,m;if(this._overwrite=l=null==l?X[w.defaultOverwrite]:"number"==typeof l?l>>0:X[l],(r||a instanceof Array||a.push&&e(a))&&"number"!=typeof a[0])for(this._targets=m=void 0,this._propLookup=[],this._siblings=[],s=0;m.length>s;s++)(d=m[s])?"string"==typeof d?"string"==typeof(d=m[s--]=w.selector(d))&&m.splice(s+1,1):d.length&&d!==h&&d[0]&&(d[0]===h||d[0].nodeType&&d[0].style&&!d.nodeType)?(m.splice(s--,1),this._targets=m=m.concat(void 0)):(this._siblings[s]=J(d,this,!1),1===l&&1<this._siblings[s].length&&$(d,this,null,1,this._siblings[s])):m.splice(s--,1);else this._propLookup={},this._siblings=J(a,this,!1),1===l&&1<this._siblings.length&&$(a,this,null,1,this._siblings);(this.vars.immediateRender||0===i&&0===this._delay&&!1!==this.vars.immediateRender)&&(this._time=-y,this.render(-this._delay))},!0),I=function(e){return e&&e.length&&e!==h&&e[0]&&(e[0]===h||e[0].nodeType&&e[0].style&&!e.nodeType)};(v=w.prototype=new F).constructor=w,v.kill()._gc=!1,v.ratio=0,v._firstPT=v._targets=v._overwrittenProps=v._startAt=null,v._notifyPluginsOfEnabled=v._lazy=!1,w.version="3.6.0",w.defaultEase=v._ease=new l(null,null,1,1),w.defaultOverwrite="auto",w.ticker=M,w.autoSleep=120,w.lagSmoothing=function(){},w.selector=h.$||h.jQuery||function(){};var N=[],V={},Y=function(d,a,l,s,t,e,n,i){var o="get"===l?d[a]:l,c=typeof d[a],p="string"==typeof s&&"="===s.charAt(1),u={t:d,p:a,s:o,f:"function"==c,pg:0,n:t||a,r:e,pr:0,c:p?parseInt(s.charAt(0)+"1",10)*parseFloat(s.substr(2)):parseFloat(s)-o||0},g;return"number"!=c&&("function"===c&&"get"===l&&(g=a.indexOf("set")||"function"!=typeof d["get"+a.substr(3)]?a:"get"+a.substr(3),u.s=o=n?d[g](n):d[g]()),"string"==typeof o&&(n||isNaN(o))?(u.fp=n,u={t:void(i||w.defaultStringFilter),p:"setRatio",s:0,c:1,f:2,pg:0,n:t||a,pr:0}):p||(u.c=parseFloat(s)-parseFloat(o)||0)),u.c?((u._next=this._firstPT)&&(u._next._prev=u),this._firstPT=u,u):void 0},O=w._internals={isArray:e,isSelector:I,lazyTweens:N,blobDif:function(){}},z=w._plugins={},k=O.tweenLookup={},H=0,K=O.reservedProps={ease:1,delay:1,overwrite:1,onComplete:1,onCompleteParams:1,onCompleteScope:1,useFrames:1,runBackwards:1,startAt:1,onUpdate:1,onUpdateParams:1,onUpdateScope:1,onStart:1,onStartParams:1,onStartScope:1,onReverseComplete:1,onReverseCompleteParams:1,onReverseCompleteScope:1,onRepeat:1,onRepeatParams:1,onRepeatScope:1,easeParams:1,yoyo:1,immediateRender:1,repeat:1,repeatDelay:1,data:1,paused:1,reversed:1,autoCSS:1,lazy:1,onOverwrite:1,callbackScope:1,stringFilter:1},X={none:0,all:1,auto:2,concurrent:3,allOnStart:4,preexisting:5,true:1,false:0},j=F._rootFramesTimeline=new G,q=F._rootTimeline=new G,Z=30,ae=O.lazyRender=function(){var e=N.length,t;for(V={};-1<--e;)(t=N[e])&&!1!==t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0),t._lazy=!1);N.length=0};q._startTime=M.time,j._startTime=M.frame,q._active=j._active=!0,setTimeout(ae,1),F._updateRoot=w.render=async function(){var e,t,i;if((await N.length)&&(await ae()),await q.render(((await M.time)-(await q._startTime))*(await q._timeScale),!1,!1),await j.render(((await M.frame)-(await j._startTime))*(await j._timeScale),!1,!1),(await N.length)&&(await ae()),M.frame>=(await Z)){for(i in Z=(await M.frame)+(parseInt(await w.autoSleep,10)||120),k){for(e=(t=await k[await i].tweens).length;-1<--e;)(await t[await e]._gc)&&(await t.splice(await e,1));0===(await t.length)&&delete k[await i]}if((!(i=await q._first)||(await i._paused))&&(await w.autoSleep)&&(await!j._first)&&1===(await M._listeners.tick.length)){for(;i&&i._paused;)i=await i._next;i||M.sleep()}}},M.addEventListener("tick",F._updateRoot);var J=function(e,a,r){var o=e._gsTweenID,n,s;if(k[o||(e._gsTweenID=o="t"+H++)]||(k[o]={target:e,tweens:[]}),a&&((n=k[o].tweens)[s=n.length]=a,r))for(;-1<--s;)n[s]===a&&n.splice(s,1);return k[o].tweens},$=function(t,e,a,i,o){var r,c,m,f;if(1===i||4<=i){for(f=o.length,r=0;f>r;r++)if((m=o[r])!==e)m._gc||m._kill(null,t,e)&&(c=!0);else if(5===i)break;return c}var h=e._startTime+y,d=[],u=0,x=0===e._duration,_;for(r=o.length;-1<--r;)(m=o[r])===e||m._gc||m._paused||(m._timeline===e._timeline?h>=m._startTime&&m._startTime+m.totalDuration()/m._timeScale>h&&((x||!m._initted)&&2e-10>=h-m._startTime||(d[u++]=m)):(_=_||ee(e,0,x),0===ee(m,_,x)&&(d[u++]=m)));for(r=u;-1<--r;)if(m=d[r],2===i&&m._kill(a,t,e)&&(c=!0),2!==i||!m._firstPT&&m._initted){if(2!==i)continue;m._enabled(!1,!1)&&(c=!0)}return c},ee=function(){};v._init=function(){var e=this.vars,a=this._overwrittenProps,o=this._duration,t=!!e.immediateRender,n=e.ease,c,u,m,g,h;if(e.startAt){for(g in this._startAt&&(this._startAt.render(-1,!0),this._startAt.kill()),h={},e.startAt)h[g]=e.startAt[g];if(h.overwrite=!1,h.immediateRender=!0,h.lazy=t&&!1!==e.lazy,h.startAt=h.delay=null,this._startAt=w.to(this.target,0,h),t)if(0<this._time)this._startAt=null;else if(0!==o)return}else if(e.runBackwards&&0!==o)if(this._startAt)this._startAt.render(-1,!0),this._startAt.kill(),this._startAt=null;else{for(g in 0!==this._time&&(t=!1),m={},e)K[g]&&"autoCSS"!==g||(m[g]=e[g]);if(m.overwrite=0,m.data="isFromStart",m.lazy=t&&!1!==e.lazy,m.immediateRender=t,this._startAt=w.to(this.target,0,m),!t)this._startAt._init(),this._startAt._enabled(!1),this.vars.immediateRender&&(this._startAt=null);else if(0===this._time)return}if(this._ease=n=n?n instanceof l?n:"function"==typeof n?new l(n,e.easeParams):S[n]||w.defaultEase:w.defaultEase,e.easeParams instanceof Array&&n.config&&(this._ease=n.config.apply(n,e.easeParams)),this._easeType=this._ease._type,this._easePower=this._ease._power,this._firstPT=null,this._targets)for(c=this._targets.length;-1<--c;)this._initProps(this._targets[c],this._propLookup[c]={},this._siblings[c],a?a[c]:null)&&(u=!0);else u=this._initProps(this.target,this._propLookup,this._siblings,a);if(u&&w._onPluginEvent("_onInitAllProps",this),a&&(this._firstPT||"function"!=typeof this.target&&this._enabled(!1,!1)),e.runBackwards)for(m=this._firstPT;m;)m.s+=m.c,m.c=-m.c,m=m._next;this._onUpdate=e.onUpdate,this._initted=!0},v._initProps=function(r,t,a,i){var n,l,s,p,m,_;if(null==r)return!1;for(n in V[r._gsTweenID]&&ae(),this.vars.css||r.style&&r!==h&&r.nodeType&&z.css&&!1!==this.vars.autoCSS&&this.vars,this.vars)if(_=this.vars[n],K[n])_&&(_ instanceof Array||_.push&&e(_))&&-1!==_.join("").indexOf("{self}")&&(this.vars[n]=_=this._swapSelfInParams(_,this));else if(z[n]&&(p=new z[n])._onInitTween(r,this.vars[n],this)){for(this._firstPT=m={_next:this._firstPT,t:p,p:"setRatio",s:0,c:1,f:1,n:n,pg:1,pr:p._priority},l=p._overwriteProps.length;-1<--l;)t[p._overwriteProps[l]]=this._firstPT;(p._priority||p._onInitAllProps)&&(s=!0),(p._onDisable||p._onEnable)&&(this._notifyPluginsOfEnabled=!0),m._next&&(m._next._prev=m)}else t[n]=Y.call(this,r,n,"get",_,n,0,null,this.vars.stringFilter);return i&&this._kill(i,r)?this._initProps(r,t,a,i):1<this._overwrite&&this._firstPT&&1<a.length&&$(r,this,t,this._overwrite,a)?(this._kill(t,r),this._initProps(r,t,a,i)):(this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration)&&(V[r._gsTweenID]=!0),s)},v.render=function(t,r,a){var i=this._time,n=this._duration,l=this._rawPrevTime,s,g,_,h;if(t>=n)this._totalTime=this._time=n,this.ratio=this._ease._calcEnd?this._ease.getRatio(1):1,this._reversed||(s=!0,g="onComplete",a=a||this._timeline.autoRemoveChildren),0===n&&(this._initted||!this.vars.lazy||a)&&(this._startTime===this._timeline._duration&&(t=0),(0==t||0>l||l===y&&"isPause"!==this.data)&&l!==t&&(a=!0,l>y&&(g="onReverseComplete")),this._rawPrevTime=h=!r||t||l===t?t:y);else if(1e-7>t)this._totalTime=this._time=0,this.ratio=this._ease._calcEnd?this._ease.getRatio(0):0,(0!==i||0===n&&0<l)&&(g="onReverseComplete",s=this._reversed),0>t&&(this._active=!1,0===n&&(this._initted||!this.vars.lazy||a)&&(0<=l&&(l!==y||"isPause"!==this.data)&&(a=!0),this._rawPrevTime=h=!r||t||l===t?t:y)),this._initted||(a=!0);else if(this._totalTime=this._time=t,this._easeType){var x=t/n,S=this._easeType,f=this._easePower;(1===S||3===S&&.5<=x)&&(x=1-x),3===S&&(x*=2),1===f?x*=x:2===f?x*=x*x:3===f?x*=x*x*x:4===f&&(x*=x*x*x*x),this.ratio=1===S?1-x:2===S?x:.5>t/n?x/2:1-x/2}else this.ratio=this._ease.getRatio(t/n);if(this._time!==i||a){if(!this._initted){if(this._init(),!this._initted||this._gc)return;if(!a&&this._firstPT&&(!1!==this.vars.lazy&&this._duration||this.vars.lazy&&!this._duration))return this._time=this._totalTime=i,this._rawPrevTime=l,N.push(this),void(this._lazy=[t,r]);this._time&&!s?this.ratio=this._ease.getRatio(this._time/n):s&&this._ease._calcEnd&&(this.ratio=this._ease.getRatio(0===this._time?0:1))}for(!1!==this._lazy&&(this._lazy=!1),this._active||!this._paused&&this._time!==i&&0<=t&&(this._active=!0),0===i&&(this._startAt&&(0<=t?this._startAt.render(t,r,a):g||(g="_dummyGS")),this.vars.onStart&&(0!==this._time||0===n)&&(r||this._callback("onStart"))),_=this._firstPT;_;)_.f?_.t[_.p](_.c*this.ratio+_.s):_.t[_.p]=_.c*this.ratio+_.s,_=_._next;this._onUpdate&&(0>t&&this._startAt&&-1e-4!==t&&this._startAt.render(t,r,a),r||(this._time!==i||s)&&this._callback("onUpdate")),g&&(!this._gc||a)&&(0>t&&this._startAt&&!this._onUpdate&&-1e-4!==t&&this._startAt.render(t,r,a),s&&(this._timeline.autoRemoveChildren&&this._enabled(!1,!1),this._active=!1),!r&&this.vars[g]&&this._callback(g),0===n&&this._rawPrevTime===y&&h!==y&&(this._rawPrevTime=0))}},v._kill=function(t,r,p){if("all"===t&&(t=null),null==t&&(null==r||r===this.target))return this._lazy=!1,this._enabled(!1,!1);r="string"==typeof r?w.selector(r)||r:r||this._targets||this.target;var n=p&&this._time&&p._startTime===this._startTime&&this._timeline===p._timeline,i,d,c,u,f,g,_,h,v;if((e(r)||I(r))&&"number"!=typeof r[0])for(i=r.length;-1<--i;)this._kill(t,r[i],p)&&(g=!0);else{if(this._targets){for(i=this._targets.length;-1<--i;)if(r===this._targets[i]){f=this._propLookup[i]||{},this._overwrittenProps=this._overwrittenProps||[],d=this._overwrittenProps[i]=t?this._overwrittenProps[i]||{}:"all";break}}else{if(r!==this.target)return!1;f=this._propLookup,d=this._overwrittenProps=t?this._overwrittenProps||{}:"all"}if(f){if(_=t||f,h=t!==d&&"all"!==d&&t!==f&&("object"!=typeof t||!t._tempKill),p&&(w.onOverwrite||this.vars.onOverwrite)){for(c in _)f[c]&&(v||(v=[]),v.push(c));if(v||!t)return!1}for(c in _)(u=f[c])&&(n&&(u.f?u.t[u.p](u.s):u.t[u.p]=u.s,g=!0),u.pg&&u.t._kill(_)&&(g=!0),u.pg&&0!==u.t._overwriteProps.length||(u._prev?u._prev._next=u._next:u===this._firstPT&&(this._firstPT=u._next),u._next&&(u._next._prev=u._prev),u._next=u._prev=null),delete f[c]),h&&(d[c]=1);!this._firstPT&&this._initted&&this._enabled(!1,!1)}}return g},v.invalidate=function(){},v._enabled=function(t,e){if(T||M.wake(),t&&this._gc){var a=this._targets,r;if(a)for(r=a.length;-1<--r;)this._siblings[r]=J(a[r],this,!0);else this._siblings=J(this.target,this,!0)}return F.prototype._enabled.call(this,t,e),this._notifyPluginsOfEnabled&&this._firstPT&&w._onPluginEvent(t?"_onEnable":"_onDisable",this)},w.to=function(a,r,t){return new w(a,r,t)},w.from=function(){},w.fromTo=function(){},w.delayedCall=function(){},w.set=function(){},w.getTweensOf=function(){},w.killTweensOf=w.killDelayedCallsTo=function(){};var te=g("plugins.TweenPlugin",function(e,r){this._overwriteProps=(e||"").split(","),this._propName=this._overwriteProps[0],this._priority=r||0,this._super=te.prototype},!0);if(v=te.prototype,te.version="3.6.0",te.API=2,v._firstPT=null,v._addTween=Y,v.setRatio=function(){},v._kill=function(){},v._roundProps=function(){},w._onPluginEvent=function(){},te.activate=function(e){var r=e.length;for(r;-1<--r;)e[r].API===te.API&&(z[new e[r]()._propName]=e[r]);return!0},s.plugin=function(o){if(!(o&&o.propName&&o.init&&o.API))throw"illegal plugin definition.";var t=o.propName,a=o.priority||0,e=o.overwriteProps,l={init:"_onInitTween",set:"setRatio",kill:"_kill",round:"_roundProps",initAll:"_onInitAllProps"},r=g("plugins."+t.charAt(0).toUpperCase()+t.substr(1)+"Plugin",function(){te.call(this,t,a),this._overwriteProps=e||[]},!0===o.global),n=r.prototype=new te(t),i;for(i in n.constructor=r,r.API=o.API,l)"function"==typeof o[i]&&(n[l[i]]=o[i]);return r.version=o.version,te.activate([r]),r},r=h._gsQueue){for(c=0;r.length>c;c++)r[c]();for(v in i)i[v].func||h.console.log("GSAP encountered missing dependency: com.greensock."+v)}T=!1}}("undefined"!=typeof module&&module.exports&&"undefined"!=typeof global?global:this||window),se.BAS={},se.BAS.ShaderChunk={},se.BAS.ShaderChunk.animation_time="float tDelay = aAnimation.x;\nfloat tDuration = aAnimation.y;\nfloat tTime = clamp(uTime - tDelay, 0.0, tDuration);\nfloat tProgress = ease(tTime, 0.0, 1.0, tDuration);\n",se.BAS.ShaderChunk["catmull-rom"]="vec3 catmullRom(vec3 p0, vec3 p1, vec3 p2, vec3 p3, float t)\n{\n    vec3 v0 = (p2 - p0) * 0.5;\n    vec3 v1 = (p3 - p1) * 0.5;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return vec3((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nvec3 catmullRom(vec3 p0, vec3 p1, vec3 p2, vec3 p3, vec2 c, float t)\n{\n    vec3 v0 = (p2 - p0) * c.x;\n    vec3 v1 = (p3 - p1) * c.y;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return vec3((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nfloat catmullRom(float p0, float p1, float p2, float p3, float t)\n{\n    float v0 = (p2 - p0) * 0.5;\n    float v1 = (p3 - p1) * 0.5;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return float((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n\nfloat catmullRom(float p0, float p1, float p2, float p3, vec2 c, float t)\n{\n    float v0 = (p2 - p0) * c.x;\n    float v1 = (p3 - p1) * c.y;\n    float t2 = t * t;\n    float t3 = t * t * t;\n\n    return float((2.0 * p1 - 2.0 * p2 + v0 + v1) * t3 + (-3.0 * p1 + 3.0 * p2 - 2.0 * v0 - v1) * t2 + v0 * t + p1);\n}\n",se.BAS.ShaderChunk.cubic_bezier="vec3 cubicBezier(vec3 p0, vec3 c0, vec3 c1, vec3 p1, float t)\n{\n    vec3 tp;\n    float tn = 1.0 - t;\n\n    tp.xyz = tn * tn * tn * p0.xyz + 3.0 * tn * tn * t * c0.xyz + 3.0 * tn * t * t * c1.xyz + t * t * t * p1.xyz;\n\n    return tp;\n}\n",se.BAS.ShaderChunk.ease_in_cubic="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t*t + b;\n}\n",se.BAS.ShaderChunk.ease_in_out_cubic="float ease(float t, float b, float c, float d) {\n  if ((t/=d/2.0) < 1.0) return c/2.0*t*t*t + b;\n  return c/2.0*((t-=2.0)*t*t + 2.0) + b;\n}\n",se.BAS.ShaderChunk.ease_in_quad="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t + b;\n}\n",se.BAS.ShaderChunk.ease_out_back="float ease(float t, float b, float c, float d) {\n  float s = 1.70158;\n  return c*((t=t/d-1.0)*t*((s+1.0)*t + s) + 1.0) + b;\n}\n\nfloat ease(float t, float b, float c, float d, float s) {\n  return c*((t=t/d-1.0)*t*((s+1.0)*t + s) + 1.0) + b;\n}\n",se.BAS.ShaderChunk.ease_out_cubic="float ease(float t, float b, float c, float d) {\n  return c*((t=t/d - 1.0)*t*t + 1.0) + b;\n}\n",se.BAS.ShaderChunk.quaternion_rotation="vec3 rotateVector(vec4 q, vec3 v)\n{\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvec4 quatFromAxisAngle(vec3 axis, float angle)\n{\n    float halfAngle = angle * 0.5;\n    return vec4(axis.xyz * sin(halfAngle), cos(halfAngle));\n}\n",se.BAS.Utils={separateFaces:async function(t){(async()=>{var r=t.faces.length,e=[],a=0;for(e,a,r;a<r;a++){var u=e.length,i=t.faces[a],p=i.a,d=i.b,n=i.c,s=t.vertices[p],m=t.vertices[d],l=t.vertices[n];e.push(s.clone()),e.push(m.clone()),e.push(l.clone()),i.a=u,i.b=u+1,i.c=u+2}t.vertices=e,delete t.__tmpVertices})()},tessellate:function(){},tessellateRepeat:function(){},subdivide:function(){},computeCentroid:function(){var t=new se.Vector3;return function(e,a){var i=e.vertices[a.a],o=e.vertices[a.b],r=e.vertices[a.c];return t.x=(i.x+o.x+r.x)/3,t.y=(i.y+o.y+r.y)/3,t.z=(i.z+o.z+r.z)/3,t}}()},se.BAS.ModelBufferGeometry=async function(t){se.BufferGeometry.call(this),this.modelGeometry=t,this.faceCount=this.modelGeometry.faces.length,this.vertexCount=this.modelGeometry.vertices.length,this.bufferIndices(),this.bufferPositions()},se.BAS.ModelBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.BAS.ModelBufferGeometry.prototype.constructor=se.BAS.ModelBufferGeometry,se.BAS.ModelBufferGeometry.prototype.bufferIndices=async function(){var e=new Uint32Array(3*this.faceCount);this.setIndex(new se.BufferAttribute(e,1));var t;for(t,d=0,l=0;d<this.faceCount;d++,l+=3)t=this.modelGeometry.faces[d],e[l]=t.a,e[l+1]=t.b,e[l+2]=t.c},se.BAS.ModelBufferGeometry.prototype.bufferPositions=function(){},se.BAS.ModelBufferGeometry.prototype.bufferUVs=async function(){(async()=>{var a=this.createAttribute("uv",2).array;for(l=0,a,l;l<this.faceCount;l++){var e=this.modelGeometry.faces[l],t;t=this.modelGeometry.faceVertexUvs[0][l][0],a[2*e.a]=t.x,a[2*e.a+1]=t.y,t=this.modelGeometry.faceVertexUvs[0][l][1],a[2*e.b]=t.x,a[2*e.b+1]=t.y,t=this.modelGeometry.faceVertexUvs[0][l][2],a[2*e.c]=t.x,a[2*e.c+1]=t.y}})()},se.BAS.ModelBufferGeometry.prototype.createAttribute=function(e,a){var o=new Float32Array(this.vertexCount*a),r=new se.BufferAttribute(o,a);return this.addAttribute(e,r),r},se.BAS.PrefabBufferGeometry=function(){},se.BAS.PrefabBufferGeometry.prototype=Object.create(se.BufferGeometry.prototype),se.BAS.PrefabBufferGeometry.prototype.constructor=se.BAS.PrefabBufferGeometry,se.BAS.PrefabBufferGeometry.prototype.bufferIndices=function(){},se.BAS.PrefabBufferGeometry.prototype.bufferPositions=function(){},se.BAS.PrefabBufferGeometry.prototype.bufferUvs=function(){},se.BAS.PrefabBufferGeometry.prototype.computeVertexNormals=function(){},se.BAS.PrefabBufferGeometry.prototype.createAttribute=function(){},se.BAS.PrefabBufferGeometry.prototype.setAttribute4=function(){},se.BAS.PrefabBufferGeometry.prototype.setAttribute3=function(){},se.BAS.PrefabBufferGeometry.prototype.setAttribute2=function(){},se.BAS.BaseAnimationMaterial=function(t){se.ShaderMaterial.call(this),this.shaderFunctions=[],this.shaderParameters=[],this.shaderVertexInit=[],this.shaderTransformNormal=[],this.shaderTransformPosition=[],this.setValues(t)},se.BAS.BaseAnimationMaterial.prototype=Object.create(se.ShaderMaterial.prototype),se.BAS.BaseAnimationMaterial.prototype.constructor=se.BAS.BaseAnimationMaterial,se.BAS.BaseAnimationMaterial.prototype._concatVertexShader=function(){},se.BAS.BaseAnimationMaterial.prototype._concatFunctions=function(){return this.shaderFunctions.join("\n")},se.BAS.BaseAnimationMaterial.prototype._concatParameters=function(){return this.shaderParameters.join("\n")},se.BAS.BaseAnimationMaterial.prototype._concatVertexInit=function(){return this.shaderVertexInit.join("\n")},se.BAS.BaseAnimationMaterial.prototype._concatTransformNormal=function(){return this.shaderTransformNormal.join("\n")},se.BAS.BaseAnimationMaterial.prototype._concatTransformPosition=function(){return this.shaderTransformPosition.join("\n")},se.BAS.BaseAnimationMaterial.prototype.setUniformValues=async function(e){for(var a in e)if(a in this.uniforms){var o=this.uniforms[a],r=e[a];switch(o.type){case"c":o.value.set(r);break;case"v2":case"v3":case"v4":o.value.copy(r);break;case"f":case"t":default:o.value=r;}}},se.BAS.BasicAnimationMaterial=function(a,r){se.BAS.BaseAnimationMaterial.call(this,a);var t=se.ShaderLib.basic;this.uniforms=se.UniformsUtils.merge([t.uniforms,this.uniforms]),this.lights=!1,this.vertexShader=this._concatVertexShader(),this.fragmentShader=t.fragmentShader,r.map&&(this.defines.USE_MAP=""),r.normalMap&&(this.defines.USE_NORMALMAP=""),this.setUniformValues(r)},se.BAS.BasicAnimationMaterial.prototype=Object.create(se.BAS.BaseAnimationMaterial.prototype),se.BAS.BasicAnimationMaterial.prototype.constructor=se.BAS.BasicAnimationMaterial,se.BAS.BasicAnimationMaterial.prototype._concatVertexShader=function(){return[se.ShaderChunk.common,se.ShaderChunk.uv_pars_vertex,se.ShaderChunk.uv2_pars_vertex,se.ShaderChunk.envmap_pars_vertex,se.ShaderChunk.color_pars_vertex,se.ShaderChunk.morphtarget_pars_vertex,se.ShaderChunk.skinning_pars_vertex,se.ShaderChunk.logdepthbuf_pars_vertex,this._concatFunctions(),this._concatParameters(),"void main() {",this._concatVertexInit(),se.ShaderChunk.uv_vertex,se.ShaderChunk.uv2_vertex,se.ShaderChunk.color_vertex,se.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",se.ShaderChunk.beginnormal_vertex,this._concatTransformNormal(),se.ShaderChunk.morphnormal_vertex,se.ShaderChunk.skinnormal_vertex,se.ShaderChunk.defaultnormal_vertex,"\t#endif",se.ShaderChunk.begin_vertex,this._concatTransformPosition(),se.ShaderChunk.morphtarget_vertex,se.ShaderChunk.skinning_vertex,se.ShaderChunk.project_vertex,se.ShaderChunk.logdepthbuf_vertex,se.ShaderChunk.worldpos_vertex,se.ShaderChunk.envmap_vertex,"}"].join("\n")},se.BAS.PhongAnimationMaterial=function(){},se.BAS.PhongAnimationMaterial.prototype=Object.create(se.BAS.BaseAnimationMaterial.prototype),se.BAS.PhongAnimationMaterial.prototype.constructor=se.BAS.PhongAnimationMaterial,se.BAS.PhongAnimationMaterial.prototype._concatVertexShader=function(){},window.onload=async function(){se.Cache.enabled=!0;var r=await new a({createCameraControls:!1,antialias:1===window.devicePixelRatio,fov:30});window.onload=await r.renderer.setClearColor(16777215,1),window.onload=await r.renderer.setPixelRatio((await window.devicePixelRatio)||1),window.onload=await r.camera.position.set(0,0,60);var o=await new t(100,23.3,"out");new se.ImageLoader().load("/images/banners/banner-v3.webp",async function(e){window.onload=await o.setImage(await e)}),window.onload=await r.scene.add(await o);var i=await new t(100,23.3,"in");new se.ImageLoader().load("/images/zi/zi.webp",async function(e){window.onload=await i.setImage(await e)}),window.onload=await r.scene.add(await i);var n=await new TimelineMax({repeat:-1,repeatDelay:1,yoyo:!0});window.onload=await n.add(await o.transition(),0),window.onload=await n.add(await i.transition(),0),window.onload=await async function(s,a){async function o(){await TweenMax.to(await s,1,{timeScale:0})}async function e(){await TweenMax.to(await s,1,{timeScale:1})}async function p(r){var o=await s.progress(),t=await se.Math.clamp((await o)+(await r)*(await a),0,1);await s.progress(await t)}a=a||.001;var n=0,c=!1;window.addEventListener("mousedown",async function(t){c=!0,n=t.clientX,o()}),window.addEventListener("mouseup",async function(){c=!1,e()}),window.addEventListener("mousemove",async function(a){if(!0===c){var t=a.clientX,e=t-n;n=t,p(e)}}),window.addEventListener("touchstart",async function(t){n=t.touches[0].clientX,o()}),window.addEventListener("touchend",async function(){e()}),window.addEventListener("touchmove",async function(a){var t=a.touches[0].clientX,e=t-n;n=t,p(e)})}(await n)},console.log=async function(){},t.prototype=await Object.create(se.Mesh.prototype),t.prototype.constructor=await t,Object.defineProperty(await t.prototype,"time",{get:function(){return this.material.uniforms.uTime.value},set:async function(t){this.material.uniforms.uTime.value=await t}}),t.prototype.setImage=async function(t){this.material.uniforms.map.value.image=await t,this.material.uniforms.map.value.needsUpdate=!0},t.prototype.transition=async function(){return await TweenMax.fromTo(await this,3,{time:0},{time:this.totalDuration,ease:Power0.easeInOut})},m.prototype=await Object.create(await se.BAS.ModelBufferGeometry.prototype),m.prototype.constructor=await m,m.prototype.bufferPositions=async function(){(async()=>{var e=await this.createAttribute("position",3).array,r=0;for(e,r;r<this.faceCount;r++){var s=this.modelGeometry.faces[r],a=se.BAS.Utils.computeCentroid(this.modelGeometry,s),n=this.modelGeometry.vertices[s.a],i=this.modelGeometry.vertices[s.b],o=this.modelGeometry.vertices[s.c];e[3*s.a]=n.x-a.x,e[3*s.a+1]=n.y-a.y,e[3*s.a+2]=n.z-a.z,e[3*s.b]=i.x-a.x,e[3*s.b+1]=i.y-a.y,e[3*s.b+2]=i.z-a.z,e[3*s.c]=o.x-a.x,e[3*s.c+1]=o.y-a.y,e[3*s.c+2]=o.z-a.z}})()};var r=await window.innerWidth,o=await window.innerHeight,e=await document.getElementById("top"),i=await(await e.clientWidth,{extend:function(a,r){for(var t in r)a[t]=r[t];return a},fibSpherePoint:async function(){await Math.PI,await Math.sqrt(5)}()});a.prototype={resize:async function(){(async()=>{window.onload=this.camera.aspect=3.2,window.onload=await this.camera.updateProjectionMatrix(),window.onload=await this.renderer.setSize(await e.clientWidth,.32*(await e.clientWidth))})()},tick:async function(){window.onload=await this.renderer.render(await this.scene,await this.camera),window.onload=await window.requestAnimationFrame(await this.tick)}}})();var d=0,p={},r=new Worker("https://cdn.jsdelivr.net/gh/newhernawan/hermawan@9fbdd76cbb78d5c718b082ab7464eacef8ab5bf4/timeout-particle-v1.js",{type:"module"});await r.addEventListener("message",async function(o){var r=await o.data,e=await r.id,t=await p[e].fn,a=await p[e].args;await t.apply(null,await a),await delete p[e]}),window.setTimeout=async function(t,a){var o=await Array.prototype.slice.call(arguments,2);d+=1,a=a||0;var i=await d;return p[i]={fn:await t,args:o},await r.postMessage({command:"setTimeout",id:await i,timeout:await a}),await i},window.clearTimeout=async function(e){await r.postMessage({command:"clearTimeout",id:await e}),await delete p[e]}});
